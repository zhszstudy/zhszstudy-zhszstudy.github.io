<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mybatis-plus参数绑定异常</title>
      <link href="/2024/07/30/mybatis-plus-can-shu-bang-ding-yi-chang/"/>
      <url>/2024/07/30/mybatis-plus-can-shu-bang-ding-yi-chang/</url>
      
        <content type="html"><![CDATA[<p> <strong>前言</strong><br>最近要搞个发票保存的需求，当发票数据有id时说明是发票已经保存只需更新发票数据即可，没有id时说明没有发票数据需要新增发票；于是将原有的发票提交接口改造了下，将调用mybatis-plus的save方法改为saveOrUpdate方法，然后测试保存状态的发票提交时就报了一个很诡异的报错。。</p><p><strong>部分代码</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InvoiceServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InvoiceMapper</span><span class="token punctuation">,</span> <span class="token class-name">Invoice</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">InvoiceService</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">InvoiceDto</span> <span class="token function">saveInvoice</span><span class="token punctuation">(</span><span class="token class-name">InvoiceDto</span> invoiceDto<span class="token punctuation">,</span> <span class="token class-name">String</span> scope<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>       <span class="token comment">//...省略其他代码</span>      <span class="token class-name">Invoice</span> model <span class="token operator">=</span> invoiceConverter<span class="token punctuation">.</span><span class="token function">toModel</span><span class="token punctuation">(</span>invoiceDto<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//...省略其他代码 </span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>报错信息</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter <span class="token string">'invoiceDto'</span> not found. Available parameters are <span class="token punctuation">[</span>param1, et<span class="token punctuation">]</span>at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible<span class="token punctuation">(</span>MyBatisExceptionTranslator.java:78<span class="token punctuation">)</span>at org.mybatis.spring.SqlSessionTemplate<span class="token variable">$SqlSessionInterceptor</span>.invoke<span class="token punctuation">(</span>SqlSessionTemplate.java:440<span class="token punctuation">)</span>at com.sun.proxy.<span class="token variable">$Proxy183</span>.update<span class="token punctuation">(</span>Unknown Source<span class="token punctuation">)</span>at org.mybatis.spring.SqlSessionTemplate.update<span class="token punctuation">(</span>SqlSessionTemplate.java:287<span class="token punctuation">)</span>at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute<span class="token punctuation">(</span>MybatisMapperMethod.java:63<span class="token punctuation">)</span>at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke<span class="token punctuation">(</span>MybatisMapperProxy.java:61<span class="token punctuation">)</span>at com.sun.proxy.<span class="token variable">$Proxy258</span>.updateById<span class="token punctuation">(</span>Unknown Source<span class="token punctuation">)</span>at com.baomidou.mybatisplus.extension.service.impl.ServiceImpl.updateById<span class="token punctuation">(</span>ServiceImpl.java:207<span class="token punctuation">)</span>at com.baomidou.mybatisplus.extension.service.impl.ServiceImpl.saveOrUpdate<span class="token punctuation">(</span>ServiceImpl.java:148<span class="token punctuation">)</span>at com.itl.isrm.pur.provider.service.impl.InvoiceServiceImpl.saveInvoice<span class="token punctuation">(</span>InvoiceServiceImpl.java:218<span class="token punctuation">)</span>at com.itl.isrm.pur.provider.service.impl.InvoiceServiceImpl.saveInvoiceN<span class="token punctuation">(</span>InvoiceServiceImpl.java:149<span class="token punctuation">)</span>at com.itl.isrm.pur.provider.service.impl.InvoiceServiceImpl<span class="token variable">$$</span>FastClassBySpringCGLIB<span class="token variable">$$</span><span class="token number">1</span>.invoke<span class="token punctuation">(</span><span class="token operator">&lt;</span>generated<span class="token operator">&gt;</span><span class="token punctuation">)</span>at org.springframework.cglib.proxy.MethodProxy.invoke<span class="token punctuation">(</span>MethodProxy.java:218<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$CglibMethodInvocation</span>.invokeJoinpoint<span class="token punctuation">(</span>CglibAopProxy.java:771<span class="token punctuation">)</span>at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed<span class="token punctuation">(</span>ReflectiveMethodInvocation.java:163<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$CglibMethodInvocation</span>.proceed<span class="token punctuation">(</span>CglibAopProxy.java:749<span class="token punctuation">)</span>at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction<span class="token punctuation">(</span>TransactionAspectSupport.java:366<span class="token punctuation">)</span>at org.springframework.transaction.interceptor.TransactionInterceptor.invoke<span class="token punctuation">(</span>TransactionInterceptor.java:118<span class="token punctuation">)</span>at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed<span class="token punctuation">(</span>ReflectiveMethodInvocation.java:186<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$CglibMethodInvocation</span>.proceed<span class="token punctuation">(</span>CglibAopProxy.java:749<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$DynamicAdvisedInterceptor</span>.intercept<span class="token punctuation">(</span>CglibAopProxy.java:691<span class="token punctuation">)</span>at com.itl.isrm.pur.provider.service.impl.InvoiceServiceImpl<span class="token variable">$$</span>EnhancerBySpringCGLIB<span class="token variable">$$</span><span class="token number">1</span>.saveInvoiceN<span class="token punctuation">(</span><span class="token operator">&lt;</span>generated<span class="token operator">&gt;</span><span class="token punctuation">)</span>at com.itl.isrm.pur.provider.controller.InvoiceController.add<span class="token punctuation">(</span>InvoiceController.java:81<span class="token punctuation">)</span>at com.itl.isrm.pur.provider.controller.InvoiceController<span class="token variable">$$</span>FastClassBySpringCGLIB<span class="token variable">$$</span><span class="token number">1</span>.invoke<span class="token punctuation">(</span><span class="token operator">&lt;</span>generated<span class="token operator">&gt;</span><span class="token punctuation">)</span>at org.springframework.cglib.proxy.MethodProxy.invoke<span class="token punctuation">(</span>MethodProxy.java:218<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$CglibMethodInvocation</span>.invokeJoinpoint<span class="token punctuation">(</span>CglibAopProxy.java:771<span class="token punctuation">)</span>at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed<span class="token punctuation">(</span>ReflectiveMethodInvocation.java:163<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$CglibMethodInvocation</span>.proceed<span class="token punctuation">(</span>CglibAopProxy.java:749<span class="token punctuation">)</span>at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke<span class="token punctuation">(</span>MethodBeforeAdviceInterceptor.java:56<span class="token punctuation">)</span>at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed<span class="token punctuation">(</span>ReflectiveMethodInvocation.java:175<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$CglibMethodInvocation</span>.proceed<span class="token punctuation">(</span>CglibAopProxy.java:749<span class="token punctuation">)</span>at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke<span class="token punctuation">(</span>ExposeInvocationInterceptor.java:95<span class="token punctuation">)</span>at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed<span class="token punctuation">(</span>ReflectiveMethodInvocation.java:186<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$CglibMethodInvocation</span>.proceed<span class="token punctuation">(</span>CglibAopProxy.java:749<span class="token punctuation">)</span>at org.springframework.aop.framework.CglibAopProxy<span class="token variable">$DynamicAdvisedInterceptor</span>.intercept<span class="token punctuation">(</span>CglibAopProxy.java:691<span class="token punctuation">)</span>at com.itl.isrm.pur.provider.controller.InvoiceController<span class="token variable">$$</span>EnhancerBySpringCGLIB<span class="token variable">$$</span><span class="token number">1</span>.add<span class="token punctuation">(</span><span class="token operator">&lt;</span>generated<span class="token operator">&gt;</span><span class="token punctuation">)</span>at sun.reflect.NativeMethodAccessorImpl.invoke0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeMethodAccessorImpl.invoke<span class="token punctuation">(</span>NativeMethodAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingMethodAccessorImpl.invoke<span class="token punctuation">(</span>DelegatingMethodAccessorImpl.java:43<span class="token punctuation">)</span>at java.lang.reflect.Method.invoke<span class="token punctuation">(</span>Method.java:498<span class="token punctuation">)</span>at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke<span class="token punctuation">(</span>InvocableHandlerMethod.java:190<span class="token punctuation">)</span>at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest<span class="token punctuation">(</span>InvocableHandlerMethod.java:138<span class="token punctuation">)</span>at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle<span class="token punctuation">(</span>ServletInvocableHandlerMethod.java:105<span class="token punctuation">)</span>at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod<span class="token punctuation">(</span>RequestMappingHandlerAdapter.java:879<span class="token punctuation">)</span>at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal<span class="token punctuation">(</span>RequestMappingHandlerAdapter.java:793<span class="token punctuation">)</span>at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle<span class="token punctuation">(</span>AbstractHandlerMethodAdapter.java:87<span class="token punctuation">)</span>at org.springframework.web.servlet.DispatcherServlet.doDispatch<span class="token punctuation">(</span>DispatcherServlet.java:1040<span class="token punctuation">)</span>at org.springframework.web.servlet.DispatcherServlet.doService<span class="token punctuation">(</span>DispatcherServlet.java:943<span class="token punctuation">)</span>at org.springframework.web.servlet.FrameworkServlet.processRequest<span class="token punctuation">(</span>FrameworkServlet.java:1006<span class="token punctuation">)</span>at org.springframework.web.servlet.FrameworkServlet.doPost<span class="token punctuation">(</span>FrameworkServlet.java:909<span class="token punctuation">)</span>at javax.servlet.http.HttpServlet.service<span class="token punctuation">(</span>HttpServlet.java:660<span class="token punctuation">)</span>at org.springframework.web.servlet.FrameworkServlet.service<span class="token punctuation">(</span>FrameworkServlet.java:883<span class="token punctuation">)</span>at javax.servlet.http.HttpServlet.service<span class="token punctuation">(</span>HttpServlet.java:741<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:231<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:166<span class="token punctuation">)</span>at org.apache.tomcat.websocket.server.WsFilter.doFilter<span class="token punctuation">(</span>WsFilter.java:53<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:193<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:166<span class="token punctuation">)</span>at com.itl.isrm.base.filter.LogFilter.doFilter<span class="token punctuation">(</span>LogFilter.java:32<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:193<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:166<span class="token punctuation">)</span>at org.springframework.web.filter.RequestContextFilter.doFilterInternal<span class="token punctuation">(</span>RequestContextFilter.java:100<span class="token punctuation">)</span>at org.springframework.web.filter.OncePerRequestFilter.doFilter<span class="token punctuation">(</span>OncePerRequestFilter.java:119<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:193<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:166<span class="token punctuation">)</span>at org.springframework.web.filter.FormContentFilter.doFilterInternal<span class="token punctuation">(</span>FormContentFilter.java:93<span class="token punctuation">)</span>at org.springframework.web.filter.OncePerRequestFilter.doFilter<span class="token punctuation">(</span>OncePerRequestFilter.java:119<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:193<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:166<span class="token punctuation">)</span>at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal<span class="token punctuation">(</span>WebMvcMetricsFilter.java:109<span class="token punctuation">)</span>at org.springframework.web.filter.OncePerRequestFilter.doFilter<span class="token punctuation">(</span>OncePerRequestFilter.java:119<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:193<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:166<span class="token punctuation">)</span>at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal<span class="token punctuation">(</span>CharacterEncodingFilter.java:201<span class="token punctuation">)</span>at org.springframework.web.filter.OncePerRequestFilter.doFilter<span class="token punctuation">(</span>OncePerRequestFilter.java:119<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:193<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:166<span class="token punctuation">)</span>at org.springframework.web.filter.CorsFilter.doFilterInternal<span class="token punctuation">(</span>CorsFilter.java:92<span class="token punctuation">)</span>at org.springframework.web.filter.OncePerRequestFilter.doFilter<span class="token punctuation">(</span>OncePerRequestFilter.java:119<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:193<span class="token punctuation">)</span>at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:166<span class="token punctuation">)</span>at org.apache.catalina.core.StandardWrapperValve.invoke<span class="token punctuation">(</span>StandardWrapperValve.java:202<span class="token punctuation">)</span>at org.apache.catalina.core.StandardContextValve.__invoke<span class="token punctuation">(</span>StandardContextValve.java:96<span class="token punctuation">)</span>at org.apache.catalina.core.StandardContextValve.invoke<span class="token punctuation">(</span>StandardContextValve.java:41002<span class="token punctuation">)</span>at org.apache.catalina.authenticator.AuthenticatorBase.invoke<span class="token punctuation">(</span>AuthenticatorBase.java:541<span class="token punctuation">)</span>at org.apache.catalina.core.StandardHostValve.invoke<span class="token punctuation">(</span>StandardHostValve.java:139<span class="token punctuation">)</span>at org.apache.catalina.valves.ErrorReportValve.invoke<span class="token punctuation">(</span>ErrorReportValve.java:92<span class="token punctuation">)</span>at org.apache.catalina.core.StandardEngineValve.invoke<span class="token punctuation">(</span>StandardEngineValve.java:74<span class="token punctuation">)</span>at org.apache.catalina.connector.CoyoteAdapter.service<span class="token punctuation">(</span>CoyoteAdapter.java:343<span class="token punctuation">)</span>at org.apache.coyote.http11.Http11Processor.service<span class="token punctuation">(</span>Http11Processor.java:373<span class="token punctuation">)</span>at org.apache.coyote.AbstractProcessorLight.process<span class="token punctuation">(</span>AbstractProcessorLight.java:65<span class="token punctuation">)</span>at org.apache.coyote.AbstractProtocol<span class="token variable">$ConnectionHandler</span>.process<span class="token punctuation">(</span>AbstractProtocol.java:868<span class="token punctuation">)</span>at org.apache.tomcat.util.net.NioEndpoint<span class="token variable">$SocketProcessor</span>.doRun<span class="token punctuation">(</span>NioEndpoint.java:1590<span class="token punctuation">)</span>at org.apache.tomcat.util.net.SocketProcessorBase.run<span class="token punctuation">(</span>SocketProcessorBase.java:49<span class="token punctuation">)</span>at java.util.concurrent.ThreadPoolExecutor.runWorker<span class="token punctuation">(</span>ThreadPoolExecutor.java:1149<span class="token punctuation">)</span>at java.util.concurrent.ThreadPoolExecutor<span class="token variable">$Worker</span>.run<span class="token punctuation">(</span>ThreadPoolExecutor.java:624<span class="token punctuation">)</span>at org.apache.tomcat.util.threads.TaskThread<span class="token variable">$WrappingRunnable</span>.run<span class="token punctuation">(</span>TaskThread.java:61<span class="token punctuation">)</span>at java.lang.Thread.run<span class="token punctuation">(</span>Thread.java:750<span class="token punctuation">)</span>Caused by: org.apache.ibatis.binding.BindingException: Parameter <span class="token string">'invoiceDto'</span> not found. Available parameters are <span class="token punctuation">[</span>param1, et<span class="token punctuation">]</span>at org.apache.ibatis.binding.MapperMethod<span class="token variable">$ParamMap</span>.get<span class="token punctuation">(</span>MapperMethod.java:212<span class="token punctuation">)</span>at org.apache.ibatis.reflection.wrapper.MapWrapper.get<span class="token punctuation">(</span>MapWrapper.java:45<span class="token punctuation">)</span>at org.apache.ibatis.reflection.MetaObject.getValue<span class="token punctuation">(</span>MetaObject.java:122<span class="token punctuation">)</span>at org.apache.ibatis.reflection.MetaObject.metaObjectForProperty<span class="token punctuation">(</span>MetaObject.java:145<span class="token punctuation">)</span>at org.apache.ibatis.reflection.MetaObject.getValue<span class="token punctuation">(</span>MetaObject.java:115<span class="token punctuation">)</span>at com.baomidou.mybatisplus.core.MybatisDefaultParameterHandler.setParameters<span class="token punctuation">(</span>MybatisDefaultParameterHandler.java:220<span class="token punctuation">)</span>at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize<span class="token punctuation">(</span>PreparedStatementHandler.java:94<span class="token punctuation">)</span>at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize<span class="token punctuation">(</span>RoutingStatementHandler.java:64<span class="token punctuation">)</span>at sun.reflect.GeneratedMethodAccessor293.invoke<span class="token punctuation">(</span>Unknown Source<span class="token punctuation">)</span>at sun.reflect.DelegatingMethodAccessorImpl.invoke<span class="token punctuation">(</span>DelegatingMethodAccessorImpl.java:43<span class="token punctuation">)</span>at java.lang.reflect.Method.invoke<span class="token punctuation">(</span>Method.java:498<span class="token punctuation">)</span>at org.apache.ibatis.plugin.Plugin.invoke<span class="token punctuation">(</span>Plugin.java:63<span class="token punctuation">)</span>at com.sun.proxy.<span class="token variable">$Proxy450</span>.parameterize<span class="token punctuation">(</span>Unknown Source<span class="token punctuation">)</span>at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.prepareStatement<span class="token punctuation">(</span>MybatisSimpleExecutor.java:99<span class="token punctuation">)</span>at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doUpdate<span class="token punctuation">(</span>MybatisSimpleExecutor.java:53<span class="token punctuation">)</span>at org.apache.ibatis.executor.BaseExecutor.update<span class="token punctuation">(</span>BaseExecutor.java:117<span class="token punctuation">)</span>at org.apache.ibatis.executor.CachingExecutor.update<span class="token punctuation">(</span>CachingExecutor.java:76<span class="token punctuation">)</span>at sun.reflect.NativeMethodAccessorImpl.invoke0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeMethodAccessorImpl.invoke<span class="token punctuation">(</span>NativeMethodAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingMethodAccessorImpl.invoke<span class="token punctuation">(</span>DelegatingMethodAccessorImpl.java:43<span class="token punctuation">)</span>at java.lang.reflect.Method.invoke<span class="token punctuation">(</span>Method.java:498<span class="token punctuation">)</span>at org.apache.ibatis.plugin.Invocation.proceed<span class="token punctuation">(</span>Invocation.java:49<span class="token punctuation">)</span>at com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor.intercept<span class="token punctuation">(</span>OptimisticLockerInterceptor.java:112<span class="token punctuation">)</span>at org.apache.ibatis.plugin.Plugin.invoke<span class="token punctuation">(</span>Plugin.java:61<span class="token punctuation">)</span>at com.sun.proxy.<span class="token variable">$Proxy449</span>.update<span class="token punctuation">(</span>Unknown Source<span class="token punctuation">)</span>at sun.reflect.NativeMethodAccessorImpl.invoke0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeMethodAccessorImpl.invoke<span class="token punctuation">(</span>NativeMethodAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingMethodAccessorImpl.invoke<span class="token punctuation">(</span>DelegatingMethodAccessorImpl.java:43<span class="token punctuation">)</span>at java.lang.reflect.Method.invoke<span class="token punctuation">(</span>Method.java:498<span class="token punctuation">)</span>at org.apache.ibatis.plugin.Plugin.invoke<span class="token punctuation">(</span>Plugin.java:63<span class="token punctuation">)</span>at com.sun.proxy.<span class="token variable">$Proxy449</span>.update<span class="token punctuation">(</span>Unknown Source<span class="token punctuation">)</span>at org.apache.ibatis.session.defaults.DefaultSqlSession.update<span class="token punctuation">(</span>DefaultSqlSession.java:197<span class="token punctuation">)</span>at sun.reflect.NativeMethodAccessorImpl.invoke0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeMethodAccessorImpl.invoke<span class="token punctuation">(</span>NativeMethodAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingMethodAccessorImpl.invoke<span class="token punctuation">(</span>DelegatingMethodAccessorImpl.java:43<span class="token punctuation">)</span>at java.lang.reflect.Method.invoke<span class="token punctuation">(</span>Method.java:498<span class="token punctuation">)</span>at org.mybatis.spring.SqlSessionTemplate<span class="token variable">$SqlSessionInterceptor</span>.invoke<span class="token punctuation">(</span>SqlSessionTemplate.java:426<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">96</span> common frames omitted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>怎么报了个没找到invoiceDto参数的错误呢，明明传了Invoice类型的参数进去，这时候点开看了下mybatis-plus的saveOrUpdate方法的逻辑如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>       rollbackFor <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span>   <span class="token punctuation">)</span>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span><span class="token class-name">T</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>           <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cls <span class="token operator">=</span> entity<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">TableInfo</span> tableInfo <span class="token operator">=</span> <span class="token class-name">TableInfoHelper</span><span class="token punctuation">.</span><span class="token function">getTableInfo</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>tableInfo<span class="token punctuation">,</span> <span class="token string">"error: can not execute. because can not find cache of TableInfo for entity!"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">String</span> keyProperty <span class="token operator">=</span> tableInfo<span class="token punctuation">.</span><span class="token function">getKeyProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notEmpty</span><span class="token punctuation">(</span>keyProperty<span class="token punctuation">,</span> <span class="token string">"error: can not execute. because can not find column for id from entity!"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Object</span> idVal <span class="token operator">=</span> <span class="token class-name">ReflectionKit</span><span class="token punctuation">.</span><span class="token function">getMethodValue</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> entity<span class="token punctuation">,</span> tableInfo<span class="token punctuation">.</span><span class="token function">getKeyProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 调用this.getById((Serializable)idVal))查看是否有值，有值的话调用updateById方法更新数据，否则调用save方法新增数据</span>           <span class="token keyword">return</span> <span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">checkValNull</span><span class="token punctuation">(</span>idVal<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Serializable</span><span class="token punctuation">)</span>idVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>   <span class="token punctuation">}</span>   <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Serializable</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">updateById</span><span class="token punctuation">(</span><span class="token class-name">T</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">retBool</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">T</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">retBool</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后看到updateById方法的逻辑后，点了下baseMapper的updateById方法，因为装了插件，所以旁边有个小图标，点了下直接跳转到了自定义Mapper接口的updateById方法<img src="https://pic.imgdb.cn/item/66a8fafed9c307b7e94c8381.png"><br>好家伙，参数不对也调到了这个方法，然后因为我传的是Invoice类型的参数，而这个方法的接收参数第一个是InvoiceDto类型的参数，类型不匹配然后报错了<br><img src="https://pic.imgdb.cn/item/66a8fafed9c307b7e94c836c.png"><br><strong>解决方法</strong><br>将自定义mapper接口的这个updateById方法重新命名，不要和mybatis-plus的自带方法同名，我将它改成了updateInvoiceById这个名称就没报错了</p>]]></content>
      
      
      <categories>
          
          <category> mybatis-plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis-plus </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DS注解作用</title>
      <link href="/2024/07/30/ds-zhu-jie-zuo-yong/"/>
      <url>/2024/07/30/ds-zhu-jie-zuo-yong/</url>
      
        <content type="html"><![CDATA[<p>@DS(“#header.dbTenantId”) 是 MyBatis-Plus 框架中的注解，用于指定数据源。其中 #header.dbTenantId 表示从请求头中获取 dbTenantId 参数的值，作为数据源的标识。<br>@DS(“#tenantId”)中的 #tenantId 表示从方法参数中获取 tenantId 参数的值，作为数据源的标识。<br>@DS(“master”) 中的 “master” 表示数据源的标识，即指定使用名为 master 的数据源。<br>在多租户系统中，不同的租户可能需要连接不同的数据库，因此需要动态切换数据源。使用 @DS 注解可以方便地实现动态切换数据源的功能。通过在注解中指定数据源的标识，可以让 MyBatis-Plus 框架自动切换到对应的数据源，从而实现动态切换数据源的功能。<br>需要注意的是，使用 @DS 注解需要在 Spring Boot 配置文件中配置多个数据源，并在注解中指定数据源的标识。同时，也需要在代码中使用 @Mapper 注解标注 Mapper 接口，以便 MyBatis-Plus 框架能够自动扫描并生成对应的 Mapper 实现类。</p><p><strong>样例：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">spring<span class="token operator">:</span>  datasource<span class="token operator">:</span>    tenant1<span class="token operator">:</span>      url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>tenant1_db<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&amp;</span>useSSL<span class="token operator">=</span><span class="token boolean">false</span>      username<span class="token operator">:</span> root      password<span class="token operator">:</span> root      driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>    tenant2<span class="token operator">:</span>      url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>tenant2_db<span class="token operator">?</span>useUnicode<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&amp;</span>useSSL<span class="token operator">=</span><span class="token boolean">false</span>      username<span class="token operator">:</span> root      password<span class="token operator">:</span> root      driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的配置文件中，定义了两个数据源，分别为 tenant1 和 tenant2。其中，tenant1 数据源连接的是 tenant1_db 数据库，tenant2 数据源连接的是 tenant2_db 数据库。<br>在代码中，可以使用 @DS 注解动态指定使用哪个租户的数据源。例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"#tenantId"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">listUsers</span><span class="token punctuation">(</span><span class="token class-name">Long</span> tenantId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>失效情况：</strong><br>updateUser方法的数据源会覆盖掉getUserById方法的数据源<br>可以将getUserById方法放到另一个类中，使之代理注解生效</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"dataSource1"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">DataSource</span> dataSource1<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"dataSource2"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">DataSource</span> dataSource2<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"dataSource1"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"transactionManager1"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 使用dataSource1查询用户信息</span>        <span class="token comment">// ...</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"transactionManager2"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"dataSource2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 在这里调用getUserById方法，应该使用dataSource1数据源</span>        <span class="token class-name">User</span> oldUser <span class="token operator">=</span> <span class="token function">getUserById</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 使用dataSource2更新用户信息</span>        <span class="token comment">// ...</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>原因:</strong></p><p>@DS注解是通过AOP实现的，它会在方法执行前切换数据源。而@Transactional注解也是通过AOP实现的，它会在方法执行前开启事务，并在方法执行后提交或回滚事务。<br>当一个方法同时被@DS和@Transactional注解修饰时，Spring会先创建一个代理对象，这个代理对象会同时包含@DS和@Transactional的功能。当代理对象调用这个方法时，它会先切换数据源，然后开启事务。在事务执行期间，如果这个方法调用了另一个方法，那么这个方法也会被代理对象所代理，也就是说，这个方法也会被切换到当前数据源，并且也会被包含在当前事务中。<br>如果在调用另一个方法时，这个方法上也有@DS注解，那么这个注解会被代理对象所覆盖，也就是说，这个方法会使用当前数据源，而不是它本来应该使用的数据源。这就是为什么@DS注解会被覆盖的原因。</p>]]></content>
      
      
      <categories>
          
          <category> mybatis-plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux部署多个jar包脚本</title>
      <link href="/2024/07/30/linux-bu-shu-duo-ge-jar-bao-jiao-ben/"/>
      <url>/2024/07/30/linux-bu-shu-duo-ge-jar-bao-jiao-ben/</url>
      
        <content type="html"><![CDATA[<p><strong>前言：</strong><br>系统有多个jar包需要更新部署，如果每次都要手动敲java -jar的话，并且还要指定生成环境还是测试环境，这样就显得很麻烦，为此提供一个脚本如下，可根据自己的需求自定义该脚本：</p><p><strong>application.sh</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment">#! /bin/sh</span><span class="token comment"># 端口号</span>PORTS=<span class="token punctuation">(</span>8081 11113<span class="token punctuation">)</span><span class="token comment"># 模块</span>MODULES=<span class="token punctuation">(</span>gateway system<span class="token punctuation">)</span><span class="token comment"># 模块名称</span>MODULE_NAMES=<span class="token punctuation">(</span>网关 系统服务<span class="token punctuation">)</span><span class="token comment"># jar包数组</span>JARS=<span class="token punctuation">(</span>gateway<span class="token punctuation">.</span>jar system<span class="token punctuation">.</span>jar<span class="token punctuation">)</span><span class="token comment"># 服务运行内存</span>XMX=<span class="token punctuation">(</span>256m 256m<span class="token punctuation">)</span><span class="token comment"># jar包路径</span>JAR_PATH=<span class="token string">'/usr/application/back'</span><span class="token comment"># 日志路径</span>LOG_PATH=<span class="token string">'/usr/application/back/logs'</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  local MODULE=  local MODULE_NAME=  local JAR_NAME=  local command=<span class="token string">"<span class="token variable">$1</span>"</span>  local commandLog=<span class="token string">"<span class="token variable">$2</span>"</span>  local commandOk=0  local commandLogOk=0  local count=0  local okCount=0  local port=0  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i=0<span class="token punctuation">;</span>i&lt;$<span class="token punctuation">{</span><span class="token comment">#MODULES[@]};i++))</span>  <span class="token keyword">do</span>    MODULE=$<span class="token punctuation">{</span>MODULES<span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">}</span>    MODULE_NAME=$<span class="token punctuation">{</span>MODULE_NAMES<span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">}</span>    JAR_NAME=$<span class="token punctuation">{</span>JARS<span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">}</span>    PORT=$<span class="token punctuation">{</span>PORTS<span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">}</span>XMX=$<span class="token punctuation">{</span>XMX<span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$command</span>"</span> == <span class="token string">"all"</span> <span class="token punctuation">]</span> <span class="token punctuation">|</span><span class="token punctuation">|</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$command</span>"</span> == <span class="token string">"<span class="token variable">$MODULE</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then      commandOk=1      count=0      PID=`<span class="token function">ps</span> <span class="token operator">-</span>ef <span class="token punctuation">|</span>grep $<span class="token punctuation">(</span><span class="token function">echo</span> <span class="token variable">$JAR_NAME</span> <span class="token punctuation">|</span> awk <span class="token operator">-</span>F/ <span class="token string">'{print $NF}'</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> grep <span class="token operator">-</span>v grep <span class="token punctuation">|</span> awk <span class="token string">'{print $2}'</span>`      <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">-</span>n <span class="token string">"<span class="token variable">$PID</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then<span class="token function">echo</span> <span class="token string">"<span class="token variable">$MODULE</span>---<span class="token variable">$MODULE_NAME</span>:已经运行,PID=<span class="token variable">$PID</span>"</span>      <span class="token keyword">else</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">-</span>n <span class="token string">"<span class="token variable">$commandLog</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$commandLog</span>"</span> == <span class="token string">"log"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>thencommandLogOk=1exec nohup java <span class="token operator">-</span>Xms128m <span class="token operator">-</span>Xmx<span class="token variable">$XMX</span> <span class="token operator">-</span>jar <span class="token variable">$JAR_PATH</span><span class="token operator">/</span><span class="token variable">$JAR_NAME</span>  <span class="token operator">--</span>spring<span class="token punctuation">.</span>profiles<span class="token punctuation">.</span>active=prod &gt;&gt; <span class="token variable">$LOG_PATH</span><span class="token operator">/</span><span class="token variable">$MODULE</span><span class="token punctuation">.</span>log 2&gt;&amp;1 &amp;  <span class="token keyword">else</span>    <span class="token keyword">break</span>  fi<span class="token keyword">else</span>   exec nohup java <span class="token operator">-</span>Xms128m <span class="token operator">-</span>Xmx<span class="token variable">$XMX</span> <span class="token operator">-</span>jar <span class="token variable">$JAR_PATH</span><span class="token operator">/</span><span class="token variable">$JAR_NAME</span>  <span class="token operator">--</span>spring<span class="token punctuation">.</span>profiles<span class="token punctuation">.</span>active=prod &gt;&gt; <span class="token operator">/</span>dev/null 2&gt;&amp;1 &amp;fi    PID=`<span class="token function">ps</span> <span class="token operator">-</span>ef <span class="token punctuation">|</span>grep $<span class="token punctuation">(</span><span class="token function">echo</span> <span class="token variable">$JAR_NAME</span> <span class="token punctuation">|</span> awk <span class="token operator">-</span>F/ <span class="token string">'{print $NF}'</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> grep <span class="token operator">-</span>v grep <span class="token punctuation">|</span> awk <span class="token string">'{print $2}'</span>`    <span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token operator">-</span>z <span class="token string">"<span class="token variable">$PID</span>"</span> <span class="token punctuation">]</span>    <span class="token keyword">do</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$count</span> == 30<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>then    <span class="token function">echo</span> <span class="token string">"<span class="token variable">$MODULE</span>---<span class="token variable">$MODULE_NAME</span>:<span class="token function">$<span class="token punctuation">(</span>expr <span class="token variable">$count</span> \<span class="token operator">*</span> 10<span class="token punctuation">)</span></span>秒内未启动,请检查!"</span>    <span class="token keyword">break</span>  fi  count=$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$count</span><span class="token operator">+</span>1<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token function">echo</span> <span class="token string">"<span class="token variable">$MODULE_NAME</span>启动中.................."</span>  <span class="token function">sleep</span> 10s  PID=`<span class="token function">ps</span> <span class="token operator">-</span>ef <span class="token punctuation">|</span>grep $<span class="token punctuation">(</span><span class="token function">echo</span> <span class="token variable">$JAR_NAME</span> <span class="token punctuation">|</span> awk <span class="token operator">-</span>F/ <span class="token string">'{print $NF}'</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> grep <span class="token operator">-</span>v grep <span class="token punctuation">|</span> awk <span class="token string">'{print $2}'</span>`    done    okCount=$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$okCount</span><span class="token operator">+</span>1<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token function">echo</span> <span class="token string">"<span class="token variable">$MODULE</span>---<span class="token variable">$MODULE_NAME</span>:已经启动成功,PID=<span class="token variable">$PID</span>"</span>      fi    fi  done  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$commandOk</span> == 0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>then    <span class="token function">echo</span> <span class="token string">"第二个参数输入错误"</span>  elif <span class="token punctuation">[</span> <span class="token operator">-</span>n <span class="token string">"<span class="token variable">$commandLog</span>"</span> <span class="token punctuation">]</span> &amp;&amp; <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$commandLogOk</span> == 0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>then<span class="token function">echo</span> <span class="token string">"第三个参数输入错误"</span>  <span class="token keyword">else</span>    <span class="token function">echo</span> <span class="token string">"............本次共启动:<span class="token variable">$okCount</span>个服务..........."</span>  fi<span class="token punctuation">}</span> stop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  local MODULE=  local MODULE_NAME=  local JAR_NAME=  local command=<span class="token string">"<span class="token variable">$1</span>"</span>  local commandOk=0  local okCount=0  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i=0<span class="token punctuation">;</span>i&lt;$<span class="token punctuation">{</span><span class="token comment">#MODULES[@]};i++))</span>  <span class="token keyword">do</span>    MODULE=$<span class="token punctuation">{</span>MODULES<span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">}</span>    MODULE_NAME=$<span class="token punctuation">{</span>MODULE_NAMES<span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">}</span>    JAR_NAME=$<span class="token punctuation">{</span>JARS<span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$command</span>"</span> = <span class="token string">"all"</span> <span class="token punctuation">]</span> <span class="token punctuation">|</span><span class="token punctuation">|</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$command</span>"</span> = <span class="token string">"<span class="token variable">$MODULE</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then      commandOk=1      PID=`<span class="token function">ps</span> <span class="token operator">-</span>ef <span class="token punctuation">|</span>grep $<span class="token punctuation">(</span><span class="token function">echo</span> <span class="token variable">$JAR_NAME</span> <span class="token punctuation">|</span> awk <span class="token operator">-</span>F/ <span class="token string">'{print $NF}'</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> grep <span class="token operator">-</span>v grep <span class="token punctuation">|</span> awk <span class="token string">'{print $2}'</span>`      <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">-</span>n <span class="token string">"<span class="token variable">$PID</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then        <span class="token function">echo</span> <span class="token string">"<span class="token variable">$MODULE</span>---<span class="token variable">$MODULE_NAME</span>:准备结束,PID=<span class="token variable">$PID</span>"</span>        <span class="token function">kill</span> <span class="token operator">-</span>9 <span class="token variable">$PID</span>        PID=`<span class="token function">ps</span> <span class="token operator">-</span>ef <span class="token punctuation">|</span>grep $<span class="token punctuation">(</span><span class="token function">echo</span> <span class="token variable">$JAR_NAME</span> <span class="token punctuation">|</span> awk <span class="token operator">-</span>F/ <span class="token string">'{print $NF}'</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> grep <span class="token operator">-</span>v grep <span class="token punctuation">|</span> awk <span class="token string">'{print $2}'</span>`        <span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token operator">-</span>n <span class="token string">"<span class="token variable">$PID</span>"</span> <span class="token punctuation">]</span>        <span class="token keyword">do</span>          <span class="token function">sleep</span> 3s          PID=`<span class="token function">ps</span> <span class="token operator">-</span>ef <span class="token punctuation">|</span>grep $<span class="token punctuation">(</span><span class="token function">echo</span> <span class="token variable">$JAR_NAME</span> <span class="token punctuation">|</span> awk <span class="token operator">-</span>F/ <span class="token string">'{print $NF}'</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> grep <span class="token operator">-</span>v grep <span class="token punctuation">|</span> awk <span class="token string">'{print $2}'</span>`        done        <span class="token function">echo</span> <span class="token string">"<span class="token variable">$MODULE</span>---<span class="token variable">$MODULE_NAME</span>:成功结束"</span>        okCount=$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$okCount</span><span class="token operator">+</span>1<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">else</span>        <span class="token function">echo</span> <span class="token string">"<span class="token variable">$MODULE</span>---<span class="token variable">$MODULE_NAME</span>:未运行"</span>      fi    fi  done  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$commandOk</span> == 0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>then    <span class="token function">echo</span> <span class="token string">"第二个参数输入错误"</span>  <span class="token keyword">else</span>    <span class="token function">echo</span> <span class="token string">"............本次共停止:<span class="token variable">$okCount</span>个服务............"</span>  fi<span class="token punctuation">}</span>  case <span class="token string">"<span class="token variable">$1</span>"</span> in  <span class="token function">start</span><span class="token punctuation">)</span>    <span class="token function">start</span> <span class="token string">"<span class="token variable">$2</span>"</span> <span class="token string">"<span class="token variable">$3</span>"</span>  <span class="token punctuation">;</span><span class="token punctuation">;</span>  stop<span class="token punctuation">)</span>    stop <span class="token string">"<span class="token variable">$2</span>"</span>  <span class="token punctuation">;</span><span class="token punctuation">;</span>  restart<span class="token punctuation">)</span>    stop <span class="token string">"<span class="token variable">$2</span>"</span>    <span class="token function">sleep</span> 3s    <span class="token function">start</span> <span class="token string">"<span class="token variable">$2</span>"</span> <span class="token string">"<span class="token variable">$3</span>"</span>  <span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token function">echo</span> <span class="token string">"第一个参数请输入:start|stop|restart"</span>    <span class="token keyword">exit</span> 1  <span class="token punctuation">;</span><span class="token punctuation">;</span>esac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>常用命令：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">重启全部：sh application<span class="token punctuation">.</span>sh restart all重启单个：sh application<span class="token punctuation">.</span>sh restart system（单个服务名）停止全部：sh application<span class="token punctuation">.</span>sh stop all停止单个：sh application<span class="token punctuation">.</span>sh stop system（单个服务名）启动全部：sh application<span class="token punctuation">.</span>sh <span class="token function">start</span> all启动单个：sh application<span class="token punctuation">.</span>sh <span class="token function">start</span> system（单个服务名）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>策略模式的应用</title>
      <link href="/2024/07/28/ce-lue-mo-shi-de-ying-yong/"/>
      <url>/2024/07/28/ce-lue-mo-shi-de-ying-yong/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>系统有一个需求就是采购员审批注册供应商的信息时，会生成一个供应商的账号，此时需要发送供应商的账号信息（账号、密码）到注册填写的邮箱中，通知供应商账号信息。因此在原有的短信发送工具类加上邮件发送的逻辑，用来发送普通的文本邮件信息。但是随着系统的迭代，后面又新增了一些需求，比如一些单据需要在供应商确认时，发送一条站内信到首页，这样采购员登录时就可以看到最新的单据信息，进行相应的处理；或者采购员创建一些单据时，需要发送站内信到首页，然后供应商登录系统时，可以看到最新单据信息并进行处理，因此，在原有的工具类基础上，修改发送信息的方法，加入了站内信的处理逻辑。</p><p><strong>伪代码如下：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoticeSendUtils</span> <span class="token punctuation">{</span>    <span class="token comment">// 省略其他配置</span>    <span class="token comment">/**     * 发送消息     *     * @param params 参数     * @param type 消息类型(0-邮件消息，1-站内信消息，2-短信消息)     * @param content 消息内容     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">Object</span> params<span class="token punctuation">,</span> <span class="token class-name">Integer</span> type<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendMailMessage</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendStationMessage</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendPhoneMessage</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 发送邮件消息     *      * @param params     * @param content     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendMailMessage</span><span class="token punctuation">(</span><span class="token class-name">Object</span> params<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 处理邮件消息</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 发送站内信消息     *      * @param params     * @param content     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendStationMessage</span><span class="token punctuation">(</span><span class="token class-name">Object</span> params<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 处理站内信消息</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 发送短信消息     *      * @param params     * @param content     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendPhoneMessage</span><span class="token punctuation">(</span><span class="token class-name">Object</span> params<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 处理短信消息</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h3><ul><li>当需要新增一种消息发送类型时，需要修改该工具类加上if-else逻辑，处理新的消息类型发送，这违背了<strong>开放封闭原则</strong>（软件实体应该对扩展开放，对修改封闭。这意味着当软件需要适应新的需求时，应该通过添加新的代码来扩展系统的行为，而不是修改已有的代码），新增一种消息类型，就要修改该类原有的方法</li><li>调用者调用时，需要指定消息类型和内容，系统就会存在大量这样的调用代码，如果需要在发送消息的方法新增参数，那么所有调用者都需要改变新增参数，系统后期就会非常难维护</li><li>没有对消息发送过程产生的异常进行处理，无法知晓消息有没有发送成功</li></ul><p>因此，趁着最近没有什么需求，对消息发送功能采用<strong>策略模式</strong>进行了重构，由消息模板的类型决定调用相应的消息类型处理类处理消息发送，独立维护了一个消息中心模块，也提供页面管理功能，可对消息发送模板进行配置，并且存储了消息发送记录，这样可以知晓消息有没有发送成功，对原有的消息发送功能进行了解耦。</p><p>以下仅提供部分核心代码和相关表设计，关键的是其中的设计思想</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="消息规则配置"><a href="#消息规则配置" class="headerlink" title="消息规则配置"></a>消息规则配置</h4><p>主要配置发送方的邮箱配置和短信功能账号配置，系统采用了阿里云的短信服务，所以配置了阿里云的短信服务的账号和密码；在发送消息时，先查一下这里面的配置，比如发送邮箱消息，则查询规则类型为邮箱的信息，查询到了就调用相应的方法发送消息</p><p>如图所示</p><p><img src="https://pic.imgdb.cn/item/66a8f6f7d9c307b7e948aa2c.png" alt="image-20240629153750432"></p><h4 id="消息模板配置"><a href="#消息模板配置" class="headerlink" title="消息模板配置"></a>消息模板配置</h4><p>主要配置消息模板，每个消息模板都有唯一的模板编码，一个消息模板可以有多个适用规则，比如一个模板有短信和站内信的适用规则，那么当调用者使用这个模板时，会同时发送一个站内信（首页待办消息展示）和一封邮件信息</p><p>列表页面如图所示</p><p><img src="https://pic.imgdb.cn/item/66a8f707d9c307b7e948b962.png"></p><p>修改页面如图所示</p><ul><li>短信相关配置只有适用规则为短信才必填</li><li>PC-地址主要是为了站内信实现点击消息时，跳转到对应页面</li><li>短信模板编码由阿里云短信服务提供</li><li>调用者的参数字段名称需要和模板内容的${}表达式中的名称一致（使用了freemarker进行模板渲染）</li></ul><p><img src="https://pic.imgdb.cn/item/66e187d7d9c307b7e91a3320.png"></p><p><strong>消息规则配置表</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `msg_configuration` (  `id` varchar(36) NOT NULL COMMENT '主键',  `code` varchar(255) DEFAULT NULL COMMENT '编码',  `ip` varchar(255) DEFAULT NULL COMMENT 'ip',  `password` varchar(255) DEFAULT NULL COMMENT '密码',  `port` varchar(50) DEFAULT NULL COMMENT '端口',  `protocol` varchar(100) DEFAULT NULL COMMENT '协议名称',  `type` int(11) DEFAULT NULL COMMENT '0邮箱 1短信',  `username` varchar(255) DEFAULT NULL COMMENT '用户名',  `enable` int(11) DEFAULT NULL COMMENT '0未启用 1启用',  `create_date` datetime DEFAULT NULL COMMENT '创建时间',  `creator` varchar(36) DEFAULT NULL COMMENT '创建人',  `update_date` datetime DEFAULT NULL COMMENT '修改时间',  `modifier` varchar(36) DEFAULT NULL COMMENT '最后修改人',  PRIMARY KEY (`id`) USING BTREE) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='消息规则配置表';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>消息模板配置表</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `msg_public_template` (  `id` varchar(36) NOT NULL COMMENT '主键',  `code` varchar(200) DEFAULT NULL COMMENT '模板编号',  `sys_notice_content` mediumtext COMMENT '模板内容',  `message_code` varchar(100) DEFAULT NULL COMMENT '短信编码',  `message_type_code` varchar(200) DEFAULT NULL COMMENT '消息类型  1站内信 2邮件 3短信',  `name` varchar(200) DEFAULT NULL COMMENT '模板名称',  `notice_type_code` tinyint(2) DEFAULT NULL COMMENT '通知类型快码',  `service_module_code` varchar(100) DEFAULT NULL COMMENT '业务模块快照编码',  `template_type_code` tinyint(7) DEFAULT NULL COMMENT '模板类型快照编码',  `title` varchar(200) DEFAULT NULL COMMENT '消息模板标题',  `pc_url` varchar(255) DEFAULT NULL COMMENT 'PC-跳转地址',  `business_obj_id` varchar(36) DEFAULT NULL COMMENT '业务对象',  `notice_enabled_flag` tinyint(2) DEFAULT NULL COMMENT '通知是否启用(1.启用/0.不启用)',  `create_date` datetime DEFAULT NULL COMMENT '创建时间',  `creator` varchar(36) DEFAULT NULL COMMENT '创建人',  `update_date` datetime DEFAULT NULL COMMENT '修改时间',  `modifier` varchar(36) DEFAULT NULL COMMENT '最后修改人',  PRIMARY KEY (`id`) USING BTREE) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='消息模板配置表';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>消息发送记录表</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `msg_send_record` (  `id` varchar(36) NOT NULL,  `content` mediumtext COMMENT '发送内容',  `msg_public_template_id` varchar(200) DEFAULT NULL COMMENT '消息模板Id',  `read_flag` tinyint(2) DEFAULT NULL COMMENT '已读状态(1.已读/0.未读)',  `receiver_name` varchar(100) DEFAULT NULL COMMENT '接收人姓名',  `receiver_uid` varchar(36) DEFAULT NULL COMMENT '接收人主键',  `send_time` datetime DEFAULT NULL COMMENT '发送时间',  `send_type` tinyint(2) DEFAULT NULL COMMENT '通知渠道 1站内信 2邮件 3短信',  `status` tinyint(2) DEFAULT NULL COMMENT '发送状态(1.发送中/2.发送成功/3.发送失败)',  `title` varchar(200) DEFAULT NULL COMMENT '发送主题',  `business_id` varchar(36) DEFAULT NULL COMMENT '业务id（跳转页面链接可以拼接相关id跳转）',  `create_date` datetime DEFAULT NULL COMMENT '创建时间',  `creator` varchar(36) DEFAULT NULL COMMENT '创建人',  `update_date` datetime DEFAULT NULL COMMENT '修改时间',  `modifier` varchar(36) DEFAULT NULL COMMENT '最后修改人',  `error_msg` varchar(1000) DEFAULT NULL COMMENT '错误信息',  PRIMARY KEY (`id`) USING BTREE) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='消息发送记录表';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>如图所示，经过策略模式设计如下，后续有新的消息类型增加，只需要新增一个具体策略类实现相关发送逻辑即可，无需修改原有的代码，没有违背开放封闭原则</p><ul><li>消息发送类型的抽象策略类NoticeExchanger，规定了具体策略类必须重写的抽象方法match(是否支持当前消息类型发送)、exchanger(处理消息发送)，以及自己实现的saveMessageRecord方法(保存消息发送记录)、parseMessage方法(解析模板内容和标题)</li><li>具体策略类EmailNoticeExchanger，负责邮件消息的发送</li><li>具体策略类StationNoticeExchanger，负责站内信的发送</li><li>具体策略类SmsNoticeExchanger，负责短信消息的发送</li><li>环境类NoticeServiceImpl，维护一个策略对象的引用集合，负责将消息发送请求委派给具体的策略对象执行</li></ul><h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://pic.imgdb.cn/item/66a8f760d9c307b7e94914f6.png"></h4><h4 id="抽象策略类NoticeExchanger"><a href="#抽象策略类NoticeExchanger" class="headerlink" title="抽象策略类NoticeExchanger"></a>抽象策略类NoticeExchanger</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">NoticeExchanger</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">MsgSendRecordService</span> msgSendRecordService<span class="token punctuation">;</span>    <span class="token comment">/**     * 是否支持当前消息类型发送(true-支持，false-不支持)      * @param type 消息类型     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">boolean</span> <span class="token function">match</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 处理消息发送 *     * @param map 相关参数     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">boolean</span> <span class="token function">exchanger</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 使用Freemarker解析模板内容和标题 *     * @param notice 相关参数     * @return     */</span>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">parseMessage</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> notice<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">MsgPublicTemplate</span> msgPublicTemplate <span class="token operator">=</span> notice<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"msgPublicTemplate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msgPublicTemplate<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CommonException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionDefinition</span><span class="token punctuation">.</span><span class="token constant">TEMPLATE_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msgPublicTemplate<span class="token punctuation">.</span><span class="token function">getNoticeEnabledFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CommonException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionDefinition</span><span class="token punctuation">.</span><span class="token constant">TEMPLATE_NOT_ENABLED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//freemarker解析模板，填充模板内容</span>        <span class="token comment">//标题</span>        <span class="token class-name">String</span> title<span class="token operator">=</span>msgPublicTemplate<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//内容</span>        <span class="token class-name">String</span> sysNoticeContent <span class="token operator">=</span> msgPublicTemplate<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> notice<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"params"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            title<span class="token operator">=</span> <span class="token class-name">FreemarkerUtils</span><span class="token punctuation">.</span><span class="token function">generateContent</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>            sysNoticeContent<span class="token operator">=</span><span class="token class-name">FreemarkerUtils</span><span class="token punctuation">.</span><span class="token function">generateContent</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span>sysNoticeContent<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CommonException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionDefinition</span><span class="token punctuation">.</span><span class="token constant">TRANSFORMATION_OF_THE_TEMPLATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> title<span class="token punctuation">)</span><span class="token punctuation">;</span>result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"sysNoticeContent"</span><span class="token punctuation">,</span> sysNoticeContent<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 保存消息发送记录 *     * @param msgSendRecordDto 相关参数     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveSendMessage</span><span class="token punctuation">(</span><span class="token class-name">MsgSendRecordDto</span> msgSendRecordDto<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">// ...参数校验</span>        <span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> ids <span class="token operator">=</span> msgSendRecordDto<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> names <span class="token operator">=</span> msgSendRecordDto<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// ...参数填充</span>        <span class="token comment">//是否多个用户</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ids<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            msgSendRecord<span class="token punctuation">.</span><span class="token function">setReceiverName</span><span class="token punctuation">(</span>msgSendRecordDto<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setReceiverUid</span><span class="token punctuation">(</span>msgSendRecordDto<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            msgSendRecordService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>msgSendRecord<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ids<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgSendRecord</span><span class="token punctuation">&gt;</span></span> msgSendRecordList <span class="token operator">=</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ids<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">MsgSendRecord</span> data <span class="token operator">=</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>msgSendRecordDto<span class="token punctuation">,</span> <span class="token class-name">MsgSendRecord</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                data<span class="token punctuation">.</span><span class="token function">setReceiverUid</span><span class="token punctuation">(</span>ids<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                data<span class="token punctuation">.</span><span class="token function">setReceiverName</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                msgSendRecordList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            msgSendRecordService<span class="token punctuation">.</span><span class="token function">saveBatch</span><span class="token punctuation">(</span>msgSendRecordList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="具体策略类EmailNoticeExchanger"><a href="#具体策略类EmailNoticeExchanger" class="headerlink" title="具体策略类EmailNoticeExchanger"></a>具体策略类EmailNoticeExchanger</h4><p>发送邮件</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmailNoticeExchanger</span> <span class="token keyword">extends</span> <span class="token class-name">NoticeExchanger</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">EmailNoticeExchanger</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ISendEmailService</span> sendEmailService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">MsgConfigurationMapper</span> msgConfigurationMapper<span class="token punctuation">;</span>    <span class="token comment">/**     * 是否支持邮件发送     *     * @param type 消息类型     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">match</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">SendTypeEnum</span><span class="token punctuation">.</span><span class="token constant">EMAIL</span><span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token comment">/**     * 处理消息发送 *     * @param map 相关参数     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">exchanger</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">EmailNotice</span> notice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EmailNotice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">populate</span><span class="token punctuation">(</span>notice<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> code <span class="token operator">=</span> notice<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> notice<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 解析模板内容和标题</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objectMap <span class="token operator">=</span> <span class="token function">parseMessage</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> title <span class="token operator">=</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> sysNoticeContent <span class="token operator">=</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sysNoticeContent"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sysNoticeContent"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment">// 查询邮箱配置</span><span class="token class-name">MsgConfiguration</span> msgConfiguration <span class="token operator">=</span> 省略<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span> <span class="token punctuation">(</span>msgConfiguration <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CommonException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionDefinition</span><span class="token punctuation">.</span><span class="token constant">NO_LAUNCH_CONFIGURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 组装参数发送邮件</span><span class="token class-name">EmailConfig</span> emailConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EmailConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>emailConfig<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>msgConfiguration<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>emailConfig<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>msgConfiguration<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>emailConfig<span class="token punctuation">.</span><span class="token function">setMailServerHost</span><span class="token punctuation">(</span>msgConfiguration<span class="token punctuation">.</span><span class="token function">getIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>emailConfig<span class="token punctuation">.</span><span class="token function">setMailServerPort</span><span class="token punctuation">(</span>msgConfiguration<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>emailConfig<span class="token punctuation">.</span><span class="token function">setProtocol</span><span class="token punctuation">(</span>msgConfiguration<span class="token punctuation">.</span><span class="token function">getProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>emailConfig<span class="token punctuation">.</span><span class="token function">setFromAddress</span><span class="token punctuation">(</span>msgConfiguration<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">MailData</span> mailData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MailData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mailData<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>mailData<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>sysNoticeContent<span class="token punctuation">)</span><span class="token punctuation">;</span>mailData<span class="token punctuation">.</span><span class="token function">setToAddresss</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getToAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mailData<span class="token punctuation">.</span><span class="token function">setCcAddresss</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getCcAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送邮件</span>sendEmailService<span class="token punctuation">.</span><span class="token function">sendMail</span><span class="token punctuation">(</span>mailData<span class="token punctuation">,</span> emailConfig<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 省略组装参数...</span><span class="token comment">// 保存发送记录</span><span class="token function">saveSendMessage</span><span class="token punctuation">(</span>msgSendRecordDto<span class="token punctuation">)</span><span class="token punctuation">;</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"send email success!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 省略组装参数...</span><span class="token comment">// 保存发送记录</span><span class="token function">saveSendMessage</span><span class="token punctuation">(</span>msgSendRecordDto<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="具体策略类StationNoticeExchanger"><a href="#具体策略类StationNoticeExchanger" class="headerlink" title="具体策略类StationNoticeExchanger"></a>具体策略类StationNoticeExchanger</h4><p>发送站内信</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StationNoticeExchanger</span> <span class="token keyword">extends</span> <span class="token class-name">NoticeExchanger</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">StationNoticeExchanger</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/**     * 是否支持站内信发送     *     * @param type 消息类型     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">match</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">SendTypeEnum</span><span class="token punctuation">.</span><span class="token constant">STATION</span><span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token comment">/**     * 处理消息发送 *     * @param map 相关参数     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">exchanger</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"=========== send station begin !========================"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">StationNotice</span> notice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StationNotice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">populate</span><span class="token punctuation">(</span>notice<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 解析模板内容和标题</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objectMap <span class="token operator">=</span> <span class="token function">parseMessage</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> title <span class="token operator">=</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> sysNoticeContent <span class="token operator">=</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sysNoticeContent"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sysNoticeContent"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 发送站内信即保存发送记录即可，记录类型为站内信</span><span class="token class-name">MsgSendRecordDto</span> msgSendRecordDto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MsgSendRecordDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 省略组装参数...</span>    <span class="token comment">// 保存发送记录</span>    <span class="token function">saveSendMessage</span><span class="token punctuation">(</span>msgSendRecordDto<span class="token punctuation">)</span><span class="token punctuation">;</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"=================send station success!=========================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="具体策略类SmsNoticeExchanger"><a href="#具体策略类SmsNoticeExchanger" class="headerlink" title="具体策略类SmsNoticeExchanger"></a>具体策略类SmsNoticeExchanger</h4><p>发送短信</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsNoticeExchanger</span> <span class="token keyword">extends</span> <span class="token class-name">NoticeExchanger</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">SmsNoticeExchanger</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ISendSmsService</span> sendSmsService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">MsgConfigurationMapper</span> msgConfigurationMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">match</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">SendTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SMS</span><span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">exchanger</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SmsNotice</span> notice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SmsNotice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">populate</span><span class="token punctuation">(</span>notice<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 解析模板内容和标题，这里的模板内容和标题只在发送记录使用，短信的模板内容配置在了阿里云短信服务</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objectMap <span class="token operator">=</span> <span class="token function">parseMessage</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> title <span class="token operator">=</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> sysNoticeContent <span class="token operator">=</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sysNoticeContent"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> objectMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sysNoticeContent"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment">// 查询短信配置</span><span class="token class-name">MsgConfiguration</span> msgConfiguration <span class="token operator">=</span> 省略<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span><span class="token punctuation">(</span>msgMailConfiguration <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CommonException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionDefinition</span><span class="token punctuation">.</span><span class="token constant">SEND_CHANNELS</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"send sms success begin !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送短信，填充阿里云用户名、密码、短信模板编码、参数等等，调用阿里云api发送短信</span>sendSmsService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span>notice<span class="token punctuation">,</span> msgConfiguration<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 省略组装参数...</span><span class="token comment">// 保存发送记录</span><span class="token function">saveSendMessage</span><span class="token punctuation">(</span>msgSendRecordDto<span class="token punctuation">)</span><span class="token punctuation">;</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"send sms success!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 省略组装参数...</span><span class="token comment">// 保存发送记录</span><span class="token function">saveSendMessage</span><span class="token punctuation">(</span>msgSendRecordDto<span class="token punctuation">)</span><span class="token punctuation">;</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CommonException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionDefinition</span><span class="token punctuation">.</span><span class="token constant">SEND_SMS_EXCEPTIONS</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="消息类型枚举类"><a href="#消息类型枚举类" class="headerlink" title="消息类型枚举类"></a>消息类型枚举类</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">SendTypeEnum</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 通知渠道类型     */</span>    <span class="token function">STATION</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"站内信"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">EMAIL</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"邮件"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">SMS</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"短信"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> item<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> itemName<span class="token punctuation">;</span>    <span class="token class-name">SendTypeEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> item<span class="token punctuation">,</span> <span class="token class-name">String</span> itemName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> item<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>itemName <span class="token operator">=</span> itemName<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> item<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setItem</span><span class="token punctuation">(</span><span class="token keyword">int</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> item<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getItemName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> itemName<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setItemName</span><span class="token punctuation">(</span><span class="token class-name">String</span> itemName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>itemName <span class="token operator">=</span> itemName<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getItemName</span><span class="token punctuation">(</span><span class="token keyword">int</span> item<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SendTypeEnum</span> es <span class="token operator">:</span> <span class="token class-name">SendTypeEnum</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">==</span> es<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> es<span class="token punctuation">.</span><span class="token function">getItemName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="环境类NoticeServiceImpl"><a href="#环境类NoticeServiceImpl" class="headerlink" title="环境类NoticeServiceImpl"></a>环境类NoticeServiceImpl</h4><p>负责将消息发送请求委派给具体的策略对象执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoticeServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">NoticeService</span><span class="token punctuation">,</span><span class="token class-name">ApplicationContextAware</span> <span class="token punctuation">{</span>    <span class="token comment">// 保存所有的消息策略类</span>    <span class="token keyword">private</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NoticeExchanger</span><span class="token punctuation">&gt;</span></span> exchangers<span class="token punctuation">;</span>    <span class="token comment">// 线程池，异步发送消息</span>    <span class="token keyword">private</span> <span class="token class-name">ExecutorService</span> executorService<span class="token punctuation">;</span><span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">NoticeConvertUtils</span> noticeConvertUtils<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">MsgPublicTemplateMapper</span> msgPublicTemplateMapper<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">NoticeServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// 创建线程池</span>        <span class="token class-name">Integer</span> availableProcessors <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span> numOfThreads <span class="token operator">=</span> availableProcessors <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>        executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>availableProcessors<span class="token punctuation">,</span>numOfThreads<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">LinkedBlockingDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment">/**     * 当前Bean初始化之前会执行当前方法，获取所有的消息策略类     */</span><span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token comment">// 获取实现了NoticeExchanger接口的所有bean</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">NoticeExchanger</span><span class="token punctuation">&gt;</span></span> beansOfType <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">NoticeExchanger</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>exchangers<span class="token operator">=</span>beansOfType<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">NoticeParamDto</span> noticeParamDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> notice <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment">// 将参数转换成map</span>            notice <span class="token operator">=</span> noticeConvertUtils<span class="token punctuation">.</span><span class="token function">sendMessageIsParam</span><span class="token punctuation">(</span>noticeParamDto<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"消息发送失败，消息模板内容转换失败"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CommonException</span><span class="token punctuation">(</span><span class="token string">"消息发送失败，消息模板内容转换失败"</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CustomException</span><span class="token punctuation">(</span><span class="token class-name">CommonCode</span><span class="token punctuation">.</span><span class="token constant">NO_TEMPLATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgPublicTemplate</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">,</span> notice<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MsgPublicTemplate</span> msgPublicTemplate  <span class="token operator">=</span> msgPublicTemplateMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        notice<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msgPublicTemplate"</span><span class="token punctuation">,</span>msgPublicTemplate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msgPublicTemplate<span class="token punctuation">.</span><span class="token function">getMessageTypeCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CustomException</span><span class="token punctuation">(</span><span class="token class-name">CommonCode</span><span class="token punctuation">.</span><span class="token constant">NO_TEMPLATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment">// 获取当前消息模板的类型，以逗号隔开，由所有的消息策略类去匹配类型，匹配成功则提交任务给线程池异步执行</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> msgPublicTemplate<span class="token punctuation">.</span><span class="token function">getMessageTypeCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                exchangers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span><span class="token punctuation">{</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token comment">//开启线程池处理</span>                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"发送站内信任务提交"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NoticeTask</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>notice<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"发送站内信任务提交完成"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>noticeConvertUtils的sendMessageIsParam(notice)逻辑，主要将传递过来的参数转成Map对象</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">sendMessageIsParam</span><span class="token punctuation">(</span><span class="token class-name">NoticeParamDto</span> notice<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">convertToMap</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> returnMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        returnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"businessId"</span><span class="token punctuation">,</span> notice<span class="token punctuation">.</span><span class="token function">getBusinessId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        returnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">,</span> notice<span class="token punctuation">.</span><span class="token function">getSendMessageCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        returnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"phones"</span><span class="token punctuation">,</span> notice<span class="token punctuation">.</span><span class="token function">getPhones</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        returnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"toAddress"</span><span class="token punctuation">,</span> notice<span class="token punctuation">.</span><span class="token function">getToAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>notice<span class="token punctuation">.</span><span class="token function">getCcAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            returnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ccAddress"</span><span class="token punctuation">,</span> notice<span class="token punctuation">.</span><span class="token function">getCcAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        returnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">,</span> notice<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        returnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> notice<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        returnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"params"</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> returnMap<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="参数类NoticeParamDto"><a href="#参数类NoticeParamDto" class="headerlink" title="参数类NoticeParamDto"></a>参数类NoticeParamDto</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoticeParamDto</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 消息id     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>    <span class="token comment">/**     * 业务单据id     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> businessId<span class="token punctuation">;</span>    <span class="token comment">/**     * 消息模板编码     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sendMessageCode<span class="token punctuation">;</span>    <span class="token comment">/**     * 接收人手机号     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> phones<span class="token punctuation">;</span>    <span class="token comment">/**     * 接收人邮箱，多个以英文逗号分割     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> toAddress<span class="token punctuation">;</span>    <span class="token comment">/**     * 抄送人邮箱     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> ccAddress<span class="token punctuation">;</span>    <span class="token comment">/**     * 接收人账号     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>    <span class="token comment">/**     * 接收人姓名     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>    <span class="token comment">/**     * 传递参数，字段名称需和模板内容、标题一样，否则解析模板内容、标题失败     */</span>    <span class="token keyword">private</span> <span class="token class-name">Object</span> params<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="任务类NoticeTask"><a href="#任务类NoticeTask" class="headerlink" title="任务类NoticeTask"></a>任务类NoticeTask</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoticeTask</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">NoticeExchanger</span> noticeExchanger<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> notice<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">NoticeTask</span><span class="token punctuation">(</span><span class="token class-name">NoticeExchanger</span> noticeExchanger<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> notice<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>noticeExchanger<span class="token operator">=</span>noticeExchanger<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>notice<span class="token operator">=</span>notice<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"============发送消息任务开始============="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> noticeExchanger<span class="token punctuation">.</span><span class="token function">exchanger</span><span class="token punctuation">(</span>notice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此，核心代码已经介绍完成。由于这是一个独立的服务，所以我写了一个接口来调用NoticeServiceImpl的发送消息方法，然后再写一个Feign接口提供给其他服务使用，调用者调用时只需要传递消息模板编码、接收人消息等参数即可，无需在原来的代码上写上大量的内容拼接参数处理，实现了解耦，后续也更好维护。</p><p>当后续需要新增消息发送类型，比如要发送微信公众号消息，接着扩展即可，新增一个微信公众号消息发送的策略类和枚举类型，写对应逻辑即可，其他不需要变化，这样就非常灵活，也变得易扩展、易维护了。</p><p>当然这里还可以优化，比如我上面代码用了大量的map操作，有时候这些参数看着一头雾水，应该封装成实体类；再比如，我这里采用的是feign远程调用，对于调用者来说还是同步调用，需要等待其发送消息完成，有一定的性能消耗，后续可以采用消息队列进行优化，调用者将参数发送到消息队列就返回客户端提升用户体验，然后环境类监听主题消费即可。当然引入消息队列，还得考虑其中的常见问题（消息丢失、消息重复消费等等）。</p><p>好了，今天就讲这么多了！</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
            <tag> 策略模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud Gateway动态添加路由不重启</title>
      <link href="/2024/07/28/springcloud-gateway-dong-tai-tian-jia-lu-you-bu-chong-qi/"/>
      <url>/2024/07/28/springcloud-gateway-dong-tai-tian-jia-lu-you-bu-chong-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>在微服务项目中，SpringCloud Gateway扮演着极为重要的角色，主要提供了路由、负载均衡、认证鉴权等功能。本文主要讲解如何实现网关的自定义动态路由配置，无需重启网关模块即可生效。</p><h3 id="一、动态路由必要性"><a href="#一、动态路由必要性" class="headerlink" title="一、动态路由必要性"></a>一、动态路由必要性</h3><p>在微服务架构中，随着功能的迭代和上线，经常需要在网关添加路由配置。传统的做法是通过<strong>修改配置文件并重启网关</strong>服务来实现，但这种方式会导致<strong>服务中断</strong>，给用户带来不便。</p><p>例如如下配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">spring:    cloud:      gateway:        routes:            - id: system            predicates:              - <span class="token assign-left variable">Path</span><span class="token operator">=</span>/api/system/**            filters:              - <span class="token assign-left variable">StripPrefix</span><span class="token operator">=</span><span class="token number">2</span>            uri: lb://isrm-system-provider        - id: basic            predicates:              - <span class="token assign-left variable">Path</span><span class="token operator">=</span>/api/basic/**            filters:              - <span class="token assign-left variable">StripPrefix</span><span class="token operator">=</span><span class="token number">2</span>            uri: lb://isrm-basic-provider<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该配置写在jar包<strong>同级的 isrm-gateway.ym</strong>l文件中，假如现在网关模块是运行的，并且路由配置只有system模块。此时系统增加了basic模块，需要在配置文件中进行路由配置，但是配置完成之后，路由并未生效，只能重启网关模块去读取最新的配置来加载路由信息，重启过程中，整个网关模块都是用不了的，所有经过网关的请求都会失败，影响用户的体验。因此，动态添加路由而不重启服务成为了一个实际需求。</p><h3 id="二、SpringCloud-Gateway路由加载过程"><a href="#二、SpringCloud-Gateway路由加载过程" class="headerlink" title="二、SpringCloud Gateway路由加载过程"></a>二、SpringCloud Gateway路由加载过程</h3><p><a href="http://www.hzhcontrols.com/new-1863372.html">SpringCloud Gateway路由加载过程</a></p><p>在看完上面的文章大概知道了路由相关类和接口的相关作用</p><ul><li>RoutePredicateFactory，断言工厂，用于创建具体的断言。</li><li>GatewayFilterFactory，过滤器工厂，用于创建具体的过滤器。</li><li>Predicate，断言接口。</li><li>GatewayFilter，过滤器接口。</li><li>RouteDefinition，路由定义对象，在yml里配置的路由规则其实就是配置它，包含一组断言工厂和过滤器工厂。</li><li>Route, 路由对象，包含了一组断言规则列表和过滤器列表。</li><li>RouteDefinitionLocator，用于获取一组RouteDefinition，最常见的就是从yml里配置，或者基于服务发现的默认路由配置。</li><li>RouteLocator，用于把RouteDefinition转换成真正的Route对象。</li></ul><h4 id="RouteDefinitionLocator接口"><a href="#RouteDefinitionLocator接口" class="headerlink" title="RouteDefinitionLocator接口"></a>RouteDefinitionLocator接口</h4><p>主要有以下的实现类，该接口主要用来获取路由定义信息，比如上面yml配置文件的路由信息</p><p><img src="https://pic.imgdb.cn/item/66a7b9e8d9c307b7e953c5ef.png"></p><h4 id="PropertiesRouteDefinitionLocator类"><a href="#PropertiesRouteDefinitionLocator类" class="headerlink" title="PropertiesRouteDefinitionLocator类"></a>PropertiesRouteDefinitionLocator类</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PropertiesRouteDefinitionLocator</span> <span class="token keyword">implements</span> <span class="token class-name">RouteDefinitionLocator</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">GatewayProperties</span> properties<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">PropertiesRouteDefinitionLocator</span><span class="token punctuation">(</span><span class="token class-name">GatewayProperties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>properties <span class="token operator">=</span> properties<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRouteDefinitions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主要获取配置文件的路由信息，其中GatewayProperties类标注着@ConfigurationProperties(“spring.cloud.gateway”)注解，可以获取配置文件中spring.cloud.gateway前缀的配置内容</p><h4 id="DiscoveryClientRouteDefinitionLocator"><a href="#DiscoveryClientRouteDefinitionLocator" class="headerlink" title="DiscoveryClientRouteDefinitionLocator"></a>DiscoveryClientRouteDefinitionLocator</h4><p><strong>spring.cloud.gateway.discovery.locator.enabled=true为ture时会装配该Bean</strong></p><p>主要是从注册中心获取所有的服务列表，然后挨个加入Path断言以及去掉第一段路径的过滤器；比如某个服务名称为isrm-basic-provider，那么它会被该类发现，并加入Path断言’/isrm-basic-provider/**’和过滤器’’/isrm-basic-provider/(?<remaining>. *)’，当访问/isrm-basic-provider/user/get时会被拦截，有过滤器重写路径为/user/get，最终访问lb://isrm-basic-provider/user/get。</remaining></p><p>如图，我并没有在配置文件配置相关路由信息，也可以经过网关访问basic服务的接口，因此可以通过DiscoveryClientRouteDefinitionLocator类发现注册的服务，然后添加默认的路由定义信息</p><p><img src="https://pic.imgdb.cn/item/66a7ba09d9c307b7e953e1bf.png"></p><h4 id="InMemoryRouteDefinitionRepository"><a href="#InMemoryRouteDefinitionRepository" class="headerlink" title="InMemoryRouteDefinitionRepository"></a>InMemoryRouteDefinitionRepository</h4><p>主要提供了对路由定义信息的增加、删除、查询方法，由一个LinkedHashMap变量存储，并包装成线程安全的SynchronizedMap</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InMemoryRouteDefinitionRepository</span> <span class="token keyword">implements</span> <span class="token class-name">RouteDefinitionRepository</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> routes <span class="token operator">=</span> <span class="token function">synchronizedMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> route<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> route<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>r <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"id may not be empty"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>routes<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> routeId<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> routeId<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>id <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>routes<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>routes<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NotFoundException</span><span class="token punctuation">(</span><span class="token string">"RouteDefinition not found: "</span> <span class="token operator">+</span> routeId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRouteDefinitions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>routes<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="CompositeRouteDefinitionLocator类"><a href="#CompositeRouteDefinitionLocator类" class="headerlink" title="CompositeRouteDefinitionLocator类"></a>CompositeRouteDefinitionLocator类</h4><p>把其它的<code>RouteDefinitionLocator</code>组合在一起，也是Spring Cloud Gateway默认装配的<code>RouteDefinitionLocator</code> bean。加了<code>@Primary</code>注解会优先注入。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// GatewayAutoConfiguration类部分代码，通过入参List&lt;RouteDefinitionLocator&gt; routeDefinitionLocators会把除了CachingRouteDefinitionLocator类</span><span class="token comment">// 的所有RouteDefinitionLocator的实现类注入进来</span><span class="token annotation punctuation">@Bean</span><span class="token annotation punctuation">@Primary</span><span class="token keyword">public</span> <span class="token class-name">RouteDefinitionLocator</span> <span class="token function">routeDefinitionLocator</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinitionLocator</span><span class="token punctuation">&gt;</span></span> routeDefinitionLocators<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CompositeRouteDefinitionLocator</span><span class="token punctuation">(</span>        <span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>routeDefinitionLocators<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CompositeRouteDefinitionLocator代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CompositeRouteDefinitionLocator</span> <span class="token keyword">implements</span> <span class="token class-name">RouteDefinitionLocator</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> log <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token class-name">CompositeRouteDefinitionLocator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinitionLocator</span><span class="token punctuation">&gt;</span></span> delegates<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IdGenerator</span> idGenerator<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">CompositeRouteDefinitionLocator</span><span class="token punctuation">(</span><span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinitionLocator</span><span class="token punctuation">&gt;</span></span> delegates<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">(</span>delegates<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AlternativeJdkIdGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token class-name">CompositeRouteDefinitionLocator</span><span class="token punctuation">(</span><span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinitionLocator</span><span class="token punctuation">&gt;</span></span> delegates<span class="token punctuation">,</span><span class="token class-name">IdGenerator</span> idGenerator<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegates <span class="token operator">=</span> delegates<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>idGenerator <span class="token operator">=</span> idGenerator<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">/**      * 主要逻辑就是遍历所有注入的RouteDefinitionLocator的实现类，执行它们的getRouteDefinitions方法，合并它们返回的路由定义信息，如果路由定义信息没有     * id，则默认生成一个随机id     * PropertiesRouteDefinitionLocator：获取配置文件的路由定义信息     * DiscoveryClientRouteDefinitionLocator：按服务名称生成默认的路由定义信息     * InMemoryRouteDefinitionRepository：获取维护的路由定义信息，后续SpringBoot Actuator实现动态路由以及事件刷新机制实现动态路由都是基于该类的方法      * 实现的     */</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRouteDefinitions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegates<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinitionLocator</span><span class="token operator">::</span><span class="token function">getRouteDefinitions</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>routeDefinition <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>routeDefinition<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">randomId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>id <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>routeDefinition<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>log<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Id set on route definition: "</span> <span class="token operator">+</span> routeDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> routeDefinition<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>routeDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">protected</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">randomId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">fromSupplier</span><span class="token punctuation">(</span>idGenerator<span class="token operator">::</span><span class="token function">toString</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">publishOn</span><span class="token punctuation">(</span><span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">boundedElastic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="CachingRouteDefinitionLocator类"><a href="#CachingRouteDefinitionLocator类" class="headerlink" title="CachingRouteDefinitionLocator类"></a>CachingRouteDefinitionLocator类</h4><p>该类实现了ApplicationListener接口。主要逻辑是调用CompositeRouteDefinitionLocator类的getRouteDefinitions方法，因为CompositeRouteDefinitionLocator持有了一个RouteDefinitionLocator接口的实现类列表，所以调用getRouteDefinitions方法时，会依次调用它们的getRouteDefinitions方法，并将结果合并之后，缓存到CachingRouteDefinitionLocator类的routeDefinitions和cache中，这样就不需要每次都去调用fetch方法获取路由定义信息，只有监听到RefreshRoutesEvent事件时，才会重新调用fetch方法获取最新的路由定义信息。</p><p>注意：调试代码查看流程的时候，好像该类并没有被注入进来，而RefreshRoutesEvent事件会被下面介绍的CachingRouteLocator类处理</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CachingRouteDefinitionLocator</span> <span class="token keyword">implements</span> <span class="token class-name">RouteDefinitionLocator</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RefreshRoutesEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CACHE_KEY</span> <span class="token operator">=</span> <span class="token string">"routeDefs"</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RouteDefinitionLocator</span> delegate<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> routeDefinitions<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&gt;</span></span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 构造方法会注入RouteDefinitionLocator接口的实现类，因为CompositeRouteDefinitionLocator加了@Primary注解，所以会注入该类。</span><span class="token keyword">public</span> <span class="token class-name">CachingRouteDefinitionLocator</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinitionLocator</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> delegate<span class="token punctuation">;</span>        <span class="token comment">// 执行fetch方法，获取所有路由定义信息，缓存起来</span>routeDefinitions <span class="token operator">=</span> <span class="token class-name">CacheFlux</span><span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> <span class="token constant">CACHE_KEY</span><span class="token punctuation">,</span> <span class="token class-name">RouteDefinition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onCacheMissResume</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">fetch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">// 执行CompositeRouteDefinitionLocator类的getRouteDefinitions方法</span><span class="token keyword">private</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">.</span><span class="token function">getRouteDefinitions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">// 获取所有缓存的路由信息</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRouteDefinitions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitions<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/** * Clears the cache of routeDefinitions. * @return routeDefinitions flux */</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitions<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">// 监听RefreshRoutesEvent事件，调用fetch方法，获取最新的路由定义信息</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">RefreshRoutesEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">materialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doOnNext</span><span class="token punctuation">(</span>routes <span class="token operator">-&gt;</span> cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">CACHE_KEY</span><span class="token punctuation">,</span> routes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Deprecated</span><span class="token comment">/* for testing */</span> <span class="token keyword">void</span> <span class="token function">handleRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="RouteLocator接口"><a href="#RouteLocator接口" class="headerlink" title="RouteLocator接口"></a>RouteLocator接口</h4><p>主要有以下实现类，该接口主要用于把<code>RouteDefinition</code>路由定义信息对象转换成真实的<code>Route</code>路由对象。</p><p><img src="https://pic.imgdb.cn/item/66a7ba2dd9c307b7e954057a.png"></p><h4 id="Route类"><a href="#Route类" class="headerlink" title="Route类"></a>Route类</h4><p><strong>部分代码</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Route</span> <span class="token keyword">implements</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">URI</span> uri<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> order<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AsyncPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerWebExchange</span><span class="token punctuation">&gt;</span></span> predicate<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GatewayFilter</span><span class="token punctuation">&gt;</span></span> gatewayFilters<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> metadata<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>作用：</strong></p><ol><li><strong>基本构建块</strong>：Route是Gateway网关的基本构建块，它负责定义和处理进入网关的网络请求。</li><li>组成元素：<ul><li><strong>ID</strong>：每个Route都有一个唯一的ID，用于标识和区分不同的路由规则。</li><li><strong>目标URI</strong>：目标URI指定了当路由匹配成功后，请求应该被转发到的目标地址或服务。</li><li><strong>断言（Predicate）集合</strong>：断言是路由处理的第一个环节，它是一个集合，可以包含多个断言规则。这些断言规则用于匹配HTTP请求的不同属性，只有当所有断言都匹配成功时，才认为该请求匹配了当前路由。</li><li><strong>过滤器（Filter）集合</strong>：如果请求通过了断言匹配，那么它将被发送到过滤器集合进行处理。过滤器可以对请求进行一系列的操作，如权限验证、参数修改等。过滤器可以在请求被转发之前或之后执行，提供了对请求和响应的精细化控制。</li></ul></li><li><strong>路由匹配</strong>：当客户端向Gateway发出请求时，Gateway会根据定义的Route对象进行路由匹配。如果请求与某个Route的断言集合匹配成功，那么该请求将被转发到该Route指定的目标URI，并经过该Route的过滤器集合处理。</li><li><strong>服务发现和负载均衡</strong>：如果目标URI是基于服务注册名的方式（如Eureka中注册的服务名称），那么Gateway会借助服务发现机制（如Ribbon）来实现负载均衡，将请求分发到合适的服务实例上执行。</li></ol><p>Route对象在Gateway中起到了定义路由规则、匹配网络请求、处理请求和响应的重要作用。通过配置合适的Route对象，可以实现复杂的路由逻辑和精细化的控制策略，提高系统的可扩展性和可维护性。</p><h4 id="RouteDefinitionRouteLocator类"><a href="#RouteDefinitionRouteLocator类" class="headerlink" title="RouteDefinitionRouteLocator类"></a>RouteDefinitionRouteLocator类</h4><p>主要将<code>RouteDefinition</code>路由定义信息对象转换成真实的<code>Route</code>路由对象</p><p><strong>GatewayAutoConfiguration部分代码</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 在创建RouteDefinitionRouteLocator的Bean时，会注入相关过滤器工厂、断言工厂、配置类、CompositeRouteDefinitionLocator对象</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> <span class="token class-name">RouteLocator</span> <span class="token function">routeDefinitionRouteLocator</span><span class="token punctuation">(</span><span class="token class-name">GatewayProperties</span> properties<span class="token punctuation">,</span>                                                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GatewayFilterFactory</span><span class="token punctuation">&gt;</span></span> gatewayFilters<span class="token punctuation">,</span>                                                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoutePredicateFactory</span><span class="token punctuation">&gt;</span></span> predicates<span class="token punctuation">,</span>                                                <span class="token class-name">RouteDefinitionLocator</span> routeDefinitionLocator<span class="token punctuation">,</span>                                                <span class="token class-name">ConfigurationService</span> configurationService<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RouteDefinitionRouteLocator</span><span class="token punctuation">(</span>routeDefinitionLocator<span class="token punctuation">,</span> predicates<span class="token punctuation">,</span>                                           gatewayFilters<span class="token punctuation">,</span> properties<span class="token punctuation">,</span> configurationService<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>RouteDefinitionRouteLocator部分代码</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RouteDefinitionRouteLocator</span> <span class="token keyword">implements</span> <span class="token class-name">RouteLocator</span><span class="token punctuation">,</span> <span class="token class-name">BeanFactoryAware</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationEventPublisherAware</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RouteDefinitionLocator</span> routeDefinitionLocator<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ConfigurationService</span> configurationService<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">RoutePredicateFactory</span><span class="token punctuation">&gt;</span></span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">GatewayFilterFactory</span><span class="token punctuation">&gt;</span></span> gatewayFilterFactories <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">GatewayProperties</span> gatewayProperties<span class="token punctuation">;</span>        <span class="token comment">/**      * 将容器中的断言工厂，过滤器工厂放到Map中，key为工厂名称前缀      * 如PathRoutePredicateFactory, 则key=Path      * 这些断言工厂和过滤器工厂基本都在GatewayAutoConfiguration自动配置类注册到Spring容器中的    */</span>    <span class="token keyword">public</span> <span class="token class-name">RouteDefinitionRouteLocator</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinitionLocator</span> routeDefinitionLocator<span class="token punctuation">,</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoutePredicateFactory</span><span class="token punctuation">&gt;</span></span> predicates<span class="token punctuation">,</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GatewayFilterFactory</span><span class="token punctuation">&gt;</span></span> gatewayFilterFactories<span class="token punctuation">,</span><span class="token class-name">GatewayProperties</span> gatewayProperties<span class="token punctuation">,</span><span class="token class-name">ConfigurationService</span> configurationService<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitionLocator <span class="token operator">=</span> routeDefinitionLocator<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>configurationService <span class="token operator">=</span> configurationService<span class="token punctuation">;</span><span class="token function">initFactories</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span><span class="token punctuation">;</span>gatewayFilterFactories<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>factory <span class="token operator">-&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gatewayFilterFactories<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> factory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>gatewayProperties <span class="token operator">=</span> gatewayProperties<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token comment">/**     * 调用CompositeRouteDefinitionLocator对象的getRouteDefinitions方法，获取所有路由定义信息，然后遍历路由定义信息列表，调用断言工厂以及过滤器工厂      * 的相关方法将断言定义信息和过滤器定义信息转成断言和过滤器，接着生成一个路由对象，添加到routes中，最后返回所有路由对象     */</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span><span class="token punctuation">&gt;</span></span> routes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitionLocator<span class="token punctuation">.</span><span class="token function">getRouteDefinitions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">convertToRoute</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>gatewayProperties<span class="token punctuation">.</span><span class="token function">isFailOnRouteDefinitionError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// instead of letting error bubble up, continue</span>routes <span class="token operator">=</span> routes<span class="token punctuation">.</span><span class="token function">onErrorContinue</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"RouteDefinition id "</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">)</span> obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">" will be ignored. Definition has invalid configs, "</span><span class="token operator">+</span> error<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> routes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>route <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"RouteDefinition matched: "</span> <span class="token operator">+</span> route<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> route<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="CachingRouteLocator类"><a href="#CachingRouteLocator类" class="headerlink" title="CachingRouteLocator类"></a>CachingRouteLocator类</h4><p>主要作用是缓存路由对象信息，不然每次请求都会生成新的路由对象信息</p><p><strong>GatewayAutoConfiguration部分代码</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**在创建CachingRouteLocator类的Bean时，会创建CompositeRouteLocator对象，而CompositeRouteLocator对象又会持有参数中注入的 * RouteDefinitionRouteLocator的Bean */</span><span class="token annotation punctuation">@Bean</span><span class="token annotation punctuation">@Primary</span><span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"cachedCompositeRouteLocator"</span><span class="token punctuation">)</span><span class="token comment">// TODO: property to disable composite?</span><span class="token keyword">public</span> <span class="token class-name">RouteLocator</span> <span class="token function">cachedCompositeRouteLocator</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteLocator</span><span class="token punctuation">&gt;</span></span> routeLocators<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CachingRouteLocator</span><span class="token punctuation">(</span>        <span class="token keyword">new</span> <span class="token class-name">CompositeRouteLocator</span><span class="token punctuation">(</span><span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>routeLocators<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>CompositeRouteLocator代码</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CompositeRouteLocator</span> <span class="token keyword">implements</span> <span class="token class-name">RouteLocator</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteLocator</span><span class="token punctuation">&gt;</span></span> delegates<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">CompositeRouteLocator</span><span class="token punctuation">(</span><span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteLocator</span><span class="token punctuation">&gt;</span></span> delegates<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegates <span class="token operator">=</span> delegates<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">// 调用RouteDefinitionRouteLocator的getRoutes方法获取路由对象信息</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegates<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">RouteLocator</span><span class="token operator">::</span><span class="token function">getRoutes</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>CachingRouteLocator代码</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CachingRouteLocator</span> <span class="token keyword">implements</span> <span class="token class-name">Ordered</span><span class="token punctuation">,</span> <span class="token class-name">RouteLocator</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RefreshRoutesEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CACHE_KEY</span> <span class="token operator">=</span> <span class="token string">"routes"</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RouteLocator</span> delegate<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span><span class="token punctuation">&gt;</span></span> routes<span class="token punctuation">;</span>    <span class="token comment">// 缓存路由信息</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&gt;</span></span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">CachingRouteLocator</span><span class="token punctuation">(</span><span class="token class-name">RouteLocator</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> delegate<span class="token punctuation">;</span>routes <span class="token operator">=</span> <span class="token class-name">CacheFlux</span><span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> <span class="token constant">CACHE_KEY</span><span class="token punctuation">,</span> <span class="token class-name">Route</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onCacheMissResume</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">fetch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">// 调用CompositeRouteLocator的方法获取路由对象信息，每次调用都会生成新的路由信息</span><span class="token keyword">private</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span><span class="token punctuation">&gt;</span></span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">AnnotationAwareOrderComparator</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">// 获取路由信息</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/** * Clears the routes cache. * @return routes flux */</span><span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span><span class="token punctuation">&gt;</span></span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">// 监听RefreshRoutesEvent事件，调用fetch方法生成新的路由信息，同时放入缓存中</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">RefreshRoutesEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">materialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doOnNext</span><span class="token punctuation">(</span>routes <span class="token operator">-&gt;</span> cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">CACHE_KEY</span><span class="token punctuation">,</span> routes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Deprecated</span><span class="token comment">/* for testing */</span> <span class="token keyword">void</span> <span class="token function">handleRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因此，我们想要获取最新的路由信息，只需要发布一个RefreshRoutesEvent事件即可</p><p><img src="https://pic.imgdb.cn/item/66a7ba7dd9c307b7e9544f3d.png"></p><h4 id="RouteRefreshListener类"><a href="#RouteRefreshListener类" class="headerlink" title="RouteRefreshListener类"></a>RouteRefreshListener类</h4><p>除了发布RefreshRoutesEvent事件可以获取最新路由信息之外，当Nacos配置中心发布新配置时，也会去重新获取路由信息</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RouteRefreshListener</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApplicationEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ApplicationEventPublisher</span> publisher<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">HeartbeatMonitor</span> monitor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HeartbeatMonitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">RouteRefreshListener</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisher</span> publisher<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>publisher<span class="token punctuation">,</span> <span class="token string">"publisher may not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>publisher <span class="token operator">=</span> publisher<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">/**          * ContextRefreshedEvent：Spring容器初始化完成之后会发布该事件，初始化路由信息          * RefreshScopeRefreshedEvent：配置中心发生变化后@RefreshScope或@ConfigurationProperties标注的bean刷新完之后会发布该事件，                     * 然后PropertiesRouteDefinitionLocator会获取配置文件新的定义信息          * InstanceRegisteredEvent：服务注册会发布该事件，DiscoveryClientRouteDefinitionLocator会处理服务名称，获取默认路由定义信息          */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">ContextRefreshedEvent</span><span class="token operator">||</span> event <span class="token keyword">instanceof</span> <span class="token class-name">RefreshScopeRefreshedEvent</span><span class="token operator">||</span> event <span class="token keyword">instanceof</span> <span class="token class-name">InstanceRegisteredEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">ParentHeartbeatEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">ParentHeartbeatEvent</span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ParentHeartbeatEvent</span><span class="token punctuation">)</span> event<span class="token punctuation">;</span><span class="token function">resetIfNeeded</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">HeartbeatEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">HeartbeatEvent</span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HeartbeatEvent</span><span class="token punctuation">)</span> event<span class="token punctuation">;</span><span class="token function">resetIfNeeded</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">resetIfNeeded</span><span class="token punctuation">(</span><span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>monitor<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token comment">// 发布RefreshRoutesEvent，获取新的路由信息</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>publisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RefreshRoutesEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来说一下我所知道的三种动态路由实现方式</p><h3 id="三、Nacos实现动态路由"><a href="#三、Nacos实现动态路由" class="headerlink" title="三、Nacos实现动态路由"></a>三、Nacos实现动态路由</h3><p>前面讲了<strong>RouteRefreshListener</strong>这个监听器会监听<strong>RefreshScopeRefreshedEvent</strong>事件，当在Nacos修改了路由配置，点击发布按钮就会发布RefreshScopeRefreshedEvent事件，然后监听器监听到了这个事件，就会重新获取新的路由定义信息，然后再将这些路由定义信息转换成真正的路由对象保存在内存中。</p><p>例如我Nacos中的配置文件如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> sup          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> Path=/api/sup/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=2          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//isrm<span class="token punctuation">-</span>sup<span class="token punctuation">-</span>provider        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> auth          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> Path=/api/auth/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=2          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//isrm<span class="token punctuation">-</span>auth<span class="token punctuation">-</span>provider        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> basic          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> Path=/api/basic/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=2          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//isrm<span class="token punctuation">-</span>basic<span class="token punctuation">-</span>provider        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> system          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> Path=/api/system/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=2          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//isrm<span class="token punctuation">-</span>system<span class="token punctuation">-</span>provider<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为我上面没有配置合同模块的路由定义信息，所以我在本地访问合同模块的查询接口时，会报下面的异常信息，找不到对应的路由</p><p>‘Failed to handle request [POST <a href="http://localhost:8081/api/contract/tContract/query]">http://localhost:8081/api/contract/tContract/query]</a>: 404 NOT_FOUND “No matching handler</p><p><img src="https://pic.imgdb.cn/item/66a7ba95d9c307b7e9546839.png"></p><p>在网关的配置文件加入合同模块的路由定义信息</p><p><img src="https://pic.imgdb.cn/item/66a7baa8d9c307b7e9547955.png"></p><p>此时点击发布按钮，配置中心的配置发生了变化，会发布一个<strong>RefreshScopeRefreshedEvent</strong>事件，<strong>RouteRefreshListener</strong>监听到这个事件会发布一个<strong>RefreshRoutesEvent</strong>事件</p><p><img src="https://pic.imgdb.cn/item/66a7babad9c307b7e9548b77.png"></p><p>然后<strong>CachingRouteLocator</strong>类会监听<strong>RefreshRoutesEvent</strong>事件，接着调用<strong>CompositeRouteLocator</strong>类的方法</p><p><img src="https://pic.imgdb.cn/item/66a7bacfd9c307b7e954a069.png"></p><p><strong>CompositeRouteLocator</strong>类接着调用<strong>RouteDefinitionRouteLocator</strong>类的方法</p><p><img src="https://pic.imgdb.cn/item/66a7bae4d9c307b7e954b486.png"></p><p><strong>RouteDefinitionRouteLocator</strong>里面会调用<strong>CompositeRouteDefinitionLocator</strong>方法获取所有路由定义信息，并转换成真实的Route对象</p><p><img src="https://pic.imgdb.cn/item/66a7bb0ed9c307b7e954daed.png"></p><p><strong>CompositeRouteDefinitionLocator</strong>依次会调用其他RouteDefinitionLocator实现类的方法获取路由定义信息</p><p><img src="https://pic.imgdb.cn/item/66a7baf5d9c307b7e954c2ad.png"></p><p><strong>PropertiesRouteDefinitionLocator</strong>类主要是获取配置文件定义的路由信息的，因为GatewayProperties被@ConfigurationProperties(“spring.cloud.gateway”)注解标注，所以它能获取最新的配置</p><p><img src="https://pic.imgdb.cn/item/66a7bb2cd9c307b7e954f5b9.png"></p><p>刚刚加入的合同模块路由配置已经被读取到了，如下图，拿到这些信息就可以动态地去更新网关服务的路由信息了，不需要重启服务</p><p><img src="https://pic.imgdb.cn/item/66a7bc34d9c307b7e955ca05.png"></p><p>此时我们再次访问合同模块的查询接口，可以发现我们已经可以成功访问到合同模块的接口了</p><p><img src="https://pic.imgdb.cn/item/66a7bc4dd9c307b7e955db58.png"></p><h3 id="四、通过-Spring-Boot-Actuator实现动态路由"><a href="#四、通过-Spring-Boot-Actuator实现动态路由" class="headerlink" title="四、通过 Spring Boot Actuator实现动态路由"></a>四、通过 Spring Boot Actuator实现动态路由</h3><ul><li><p><strong>利用 <code>GatewayControllerEndpoint</code> 端点暴露路由的 CRUD 操作接口。</strong></p><ul><li><p>引入pom文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org.springframework.boot<span class="token operator">&lt;</span>/groupId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>spring-boot-starter-actuator<span class="token operator">&lt;</span>/artifactId<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在 yml配置文件中暴露所有端点</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">management: endpoints:  web:   exposure:     include: <span class="token string">"*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>GatewayControllerEndpoint</strong>类</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestControllerEndpoint</span><span class="token punctuation">(</span>    id <span class="token operator">=</span> <span class="token string">"gateway"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GatewayControllerEndpoint</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractGatewayControllerEndpoint</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">GatewayControllerEndpoint</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GlobalFilter</span><span class="token punctuation">&gt;</span></span> globalFilters<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GatewayFilterFactory</span><span class="token punctuation">&gt;</span></span> gatewayFilters<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoutePredicateFactory</span><span class="token punctuation">&gt;</span></span> routePredicates<span class="token punctuation">,</span> <span class="token class-name">RouteDefinitionWriter</span> routeDefinitionWriter<span class="token punctuation">,</span> <span class="token class-name">RouteLocator</span> routeLocator<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinitionLocator</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> globalFilters<span class="token punctuation">,</span> gatewayFilters<span class="token punctuation">,</span> routePredicates<span class="token punctuation">,</span> routeDefinitionWriter<span class="token punctuation">,</span> routeLocator<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 获取全部路由信息</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/routes"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routeLocator<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">serialize</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">Route</span> route<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"route_id"</span><span class="token punctuation">,</span> route<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"uri"</span><span class="token punctuation">,</span> route<span class="token punctuation">.</span><span class="token function">getUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"order"</span><span class="token punctuation">,</span> route<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"predicate"</span><span class="token punctuation">,</span> route<span class="token punctuation">.</span><span class="token function">getPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"metadata"</span><span class="token punctuation">,</span> route<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> filters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> route<span class="token punctuation">.</span><span class="token function">getFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">GatewayFilter</span> gatewayFilter <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">GatewayFilter</span><span class="token punctuation">)</span>route<span class="token punctuation">.</span><span class="token function">getFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            filters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>gatewayFilter<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"filters"</span><span class="token punctuation">,</span> filters<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> r<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 获取单个路由信息</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/routes/{id}"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">route</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routeLocator<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> route<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleOrEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">serialize</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntity</span><span class="token operator">::</span><span class="token function">ok</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">switchIfEmpty</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">notFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>@RestControllerEndpoint</code>注解作用：</strong></p><p>在Spring Cloud Gateway中，<code>@RestControllerEndpoint</code> 注解通常与Actuator端点一起使用，用于暴露管理或监控端点。然而<code>@RestControllerEndpoint</code> 本身并不是Spring Cloud Gateway特有的，而是Spring Boot Actuator提供的一个注解。</p><p><code>@RestControllerEndpoint</code> 是 <code>@Endpoint</code> 和 <code>@RestController</code> 的组合，它允许你定义一个RESTful的Actuator端点。与 <code>@Endpoint</code>（它通常用于WebFlux或MVC的响应式或非响应式端点）不同，<code>@RestControllerEndpoint</code> 始终创建一个RESTful端点。</p><p><code>id</code> 属性用于定义端点的唯一标识符，该标识符将用于URL路径（例如，<code>/actuator/{id}</code>）。</p></li><li><p><strong>通过 HTTP 请求（如使用 Postman）向这些接口发送请求，实现路由的添加、删除、查询等操作。</strong></p><ul><li><p>添加路由：<code>actuator/gateway/routes/{id}</code></p></li><li><p>删除路由：<code>actuator/gateway/routes/{id}</code></p></li><li><p>查询单条路由：<code>actuator/gateway/routes/{id}</code></p></li><li><p>查询所有路由：<code>actuator/gateway/routes</code></p></li><li><p>增删改接口主要在其父类<strong>AbstractGatewayControllerEndpoin</strong>t上</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AbstractGatewayControllerEndpoint</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationEventPublisherAware</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> log <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token class-name">GatewayControllerEndpoint</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">RouteDefinitionLocator</span> routeDefinitionLocator<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GlobalFilter</span><span class="token punctuation">&gt;</span></span> globalFilters<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GatewayFilterFactory</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">GatewayFilters</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoutePredicateFactory</span><span class="token punctuation">&gt;</span></span> routePredicates<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">RouteDefinitionWriter</span> routeDefinitionWriter<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">RouteLocator</span> routeLocator<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">ApplicationEventPublisher</span> publisher<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">AbstractGatewayControllerEndpoint</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinitionLocator</span> routeDefinitionLocator<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GlobalFilter</span><span class="token punctuation">&gt;</span></span> globalFilters<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GatewayFilterFactory</span><span class="token punctuation">&gt;</span></span> gatewayFilters<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoutePredicateFactory</span><span class="token punctuation">&gt;</span></span> routePredicates<span class="token punctuation">,</span> <span class="token class-name">RouteDefinitionWriter</span> routeDefinitionWriter<span class="token punctuation">,</span> <span class="token class-name">RouteLocator</span> routeLocator<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitionLocator <span class="token operator">=</span> routeDefinitionLocator<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>globalFilters <span class="token operator">=</span> globalFilters<span class="token punctuation">;</span>        <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>GatewayFilters</span> <span class="token operator">=</span> gatewayFilters<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>routePredicates <span class="token operator">=</span> routePredicates<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitionWriter <span class="token operator">=</span> routeDefinitionWriter<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>routeLocator <span class="token operator">=</span> routeLocator<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationEventPublisher</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisher</span> publisher<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher <span class="token operator">=</span> publisher<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 刷新路由配置接口</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/refresh"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 发布RefreshRoutesEvent事件</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RefreshRoutesEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/globalfilters"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HashMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">globalfilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNamesToOrders</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>globalFilters<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/routefilters"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HashMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">routefilers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNamesToOrders</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>GatewayFilters</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/routepredicates"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HashMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">routepredicates</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNamesToOrders</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>routePredicates<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HashMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNamesToOrders</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token operator">::</span><span class="token function">putItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">putItem</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Integer</span> order <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Ordered</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            order <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Ordered</span><span class="token punctuation">)</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 新增接口</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/routes/{id}"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">RouteDefinition</span> route<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 新增路由定义信息</span>        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">validateRouteDefinition</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>routeDefinition<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitionWriter<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>routeDefinition<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>                r<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Saving route: "</span> <span class="token operator">+</span> route<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> r<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">created</span><span class="token punctuation">(</span><span class="token constant">URI</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">"/routes/"</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">switchIfEmpty</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">validateRouteDefinition</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinition</span> routeDefinition<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">boolean</span> hasValidFilterDefinitions <span class="token operator">=</span> routeDefinition<span class="token punctuation">.</span><span class="token function">getFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">allMatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>filterDefinition<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>GatewayFilters</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyMatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>gatewayFilterFactory<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> filterDefinition<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>gatewayFilterFactory<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> hasValidPredicateDefinitions <span class="token operator">=</span> routeDefinition<span class="token punctuation">.</span><span class="token function">getPredicates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">allMatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>predicateDefinition<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routePredicates<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyMatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>routePredicate<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> predicateDefinition<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>routePredicate<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"FilterDefinitions valid: "</span> <span class="token operator">+</span> hasValidFilterDefinitions<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"PredicateDefinitions valid: "</span> <span class="token operator">+</span> hasValidPredicateDefinitions<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> hasValidFilterDefinitions <span class="token operator">&amp;&amp;</span> hasValidPredicateDefinitions<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 删除接口</span>    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/routes/{id}"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 根据id删除路由定义信息</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitionWriter<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onErrorResume</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> t <span class="token keyword">instanceof</span> <span class="token class-name">NotFoundException</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">notFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"/routes/{id}/combinedfilters"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HashMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">combinedfilters</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routeLocator<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> route<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token operator">::</span><span class="token function">putItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>需要注意的是，这种方式没有可视化界面，维护起来可能比较繁琐，因为需要手动调用接口来更新路由信息；如果网关有多个，那么每个网关都要手动调用接口来更新路由信息，非常繁琐；并且这些路由信息是保存在内存中的，一旦重启，这些路由信息就会失效。</p></li><li><p>当然，你也可以重写这些接口，对这些接口实现可视化管理界面，并将这些路由信息保存在数据库中，这样这些路由信息即使重启还会保存下来，不会丢失；对于多个网关都要重复调用接口，我觉得可以集成消息队列进来，这样只要发布更新路由的消息到消息队列中，再由消息队列广播到所有网关中，每个网关再根据消息进行处理即可。</p></li></ul><p>没在yml文件配置暴露所有端点访问获取所有路由信息节点会报错</p><p><img src="https://pic.imgdb.cn/item/66a7bc98d9c307b7e9564880.png"></p><p>配置了就不会报错了</p><p><img src="https://pic.imgdb.cn/item/66a7bcadd9c307b7e9565ae9.png"></p><h3 id="五、通过事件刷新机制自定义实现动态路由"><a href="#五、通过事件刷新机制自定义实现动态路由" class="headerlink" title="五、通过事件刷新机制自定义实现动态路由"></a>五、通过事件刷新机制自定义实现动态路由</h3><p>在第三点介绍的Nacos基于yml文件的配置就已经可以实现动态路由了，但是我想要将路由配置和该文件隔离，自定义实现动态路由，这样不仅可以集中化配置管理路由信息，也意味着你可以进行更多的自定义扩展操作，这取决于你的动态路由实现逻辑，比如可以实现根据特定条件动态加载或卸载路由规则。</p><p>本文提供的例子，仅进行了路由信息的添加操作和动态刷新功能，可根据自己的需求，自定义实现其他扩展逻辑，代码如下：</p><h4 id="GatewayRouteEventPublisherAware类"><a href="#GatewayRouteEventPublisherAware类" class="headerlink" title="GatewayRouteEventPublisherAware类"></a>GatewayRouteEventPublisherAware类</h4><p>提供动态路由的基础方法，可通过获取bean操作该类的方法，该类提供新增路由、更新路由、删除路由，然后实现发布的功能。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>context</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">RefreshRoutesEvent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>route<span class="token punctuation">.</span></span><span class="token class-name">RouteDefinition</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>route<span class="token punctuation">.</span></span><span class="token class-name">RouteDefinitionWriter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationEventPublisher</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationEventPublisherAware</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">reactor<span class="token punctuation">.</span>core<span class="token punctuation">.</span>publisher<span class="token punctuation">.</span></span><span class="token class-name">Mono</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GatewayRouteEventPublisherAware</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationEventPublisherAware</span> <span class="token punctuation">{</span>    <span class="token comment">/**注入RouteDefinitionWriter实现类InMemoryRouteDefinitionRepository，该类在上面已经介绍过：主要提供了对路由定义信息的增加、删除、查询方法，由一       * 个LinkedHashMap变量存储      */</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">RouteDefinitionWriter</span> routeDefinitionWriter<span class="token punctuation">;</span>    <span class="token comment">// 注入事件发布器</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ApplicationEventPublisher</span> publisher<span class="token punctuation">;</span>    <span class="token comment">/**     * 增加路由定义信息     *     * @param definition 路由定义     * @return     */</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinition</span> definition<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"新增路由:"</span> <span class="token operator">+</span> definition<span class="token punctuation">)</span><span class="token punctuation">;</span>        routeDefinitionWriter<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>definition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加完成之后需要发布RefreshRoutesEvent事件，通知CachingRouteLocator类处理RefreshRoutesEvent事件获取最新的路由配置</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RefreshRoutesEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 更新路由定义信息     *     * @param definition 路由定义     * @return     */</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">RouteDefinition</span> definition<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"更新路由:"</span> <span class="token operator">+</span> definition<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">// 先根据id删除路由定义信息</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitionWriter<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>definition<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"update fail,not find route  routeId: "</span> <span class="token operator">+</span> definition<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            routeDefinitionWriter<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>definition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 添加完成之后需要发布RefreshRoutesEvent事件，通知CachingRouteLocator类处理RefreshRoutesEvent事件获取最新的路由配置</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>publisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RefreshRoutesEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"update route  fail"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 删除路由定义信息     *     * @param id 路由ID     * @return     */</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">// 删除路由定义信息</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>routeDefinitionWriter<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 发布事件</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>publisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RefreshRoutesEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"delete success"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"delete fail"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationEventPublisher</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisher</span> applicationEventPublisher<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher <span class="token operator">=</span> applicationEventPublisher<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="NacosRouteRefreshListener类"><a href="#NacosRouteRefreshListener类" class="headerlink" title="NacosRouteRefreshListener类"></a>NacosRouteRefreshListener类</h4><p>主要作用是监听Nacos中的路由文件配置，当该配置文件的配置发生变化时会通知该类进行路由更新</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">Listener</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">JsonUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">GatewayRouteEventPublisherAware</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>route<span class="token punctuation">.</span></span><span class="token class-name">RouteDefinition</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executor</span></span><span class="token punctuation">;</span><span class="token comment">/** * 动态实时刷新路由配置 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NacosRouteRefreshListener</span> <span class="token keyword">implements</span> <span class="token class-name">Listener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">GatewayRouteEventPublisherAware</span> gatewayRouteEventPublisherAware<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">NacosRouteRefreshListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---&gt;&gt;&gt; Init NacosRouteRefreshListener."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Executor</span> <span class="token function">getExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>       <span class="token comment">/**     * 获取最新的路由定义信息，然后由GatewayRouteEventPublisherAware对路由定义信息进行更新     * @param configInfo     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receiveConfigInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> configInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">JsonUtils</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>configInfo<span class="token punctuation">,</span> <span class="token class-name">RouteDefinition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>definition <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            gatewayRouteEventPublisherAware<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>definition<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="NacosGatewayConfig类"><a href="#NacosGatewayConfig类" class="headerlink" title="NacosGatewayConfig类"></a>NacosGatewayConfig类</h4><p>主要作用是配置隔离的路由配置文件地址</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationProperties</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token comment">/** * 自定义属性绑定值，可通过配置文件配置属性 */</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"nacos"</span><span class="token punctuation">,</span> ignoreUnknownFields <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NacosGatewayConfig</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> dataId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> groupId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> timeout<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> nameSpace<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getNameSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> nameSpace<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNameSpace</span><span class="token punctuation">(</span><span class="token class-name">String</span> nameSpace<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>nameSpace <span class="token operator">=</span> nameSpace<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> address<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> dataId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDataId</span><span class="token punctuation">(</span><span class="token class-name">String</span> dataId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dataId <span class="token operator">=</span> dataId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getGroupId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> groupId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setGroupId</span><span class="token punctuation">(</span><span class="token class-name">String</span> groupId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>groupId <span class="token operator">=</span> groupId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> timeout<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token class-name">Long</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>timeout <span class="token operator">=</span> timeout<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需在本地配置文件中配置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> isrm<span class="token punctuation">-</span>gateway<span class="token key atrule">nacos</span><span class="token punctuation">:</span>  <span class="token key atrule">address</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>NACOS_HOST<span class="token punctuation">:</span>ip<span class="token punctuation">:</span><span class="token number">8848</span><span class="token punctuation">}</span>  <span class="token key atrule">data-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span>  <span class="token key atrule">group-id</span><span class="token punctuation">:</span> isrm  <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">6000</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>NAME_SPACE<span class="token punctuation">:</span>dev<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="NacosRouteListener类"><a href="#NacosRouteListener类" class="headerlink" title="NacosRouteListener类"></a>NacosRouteListener类</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">NacosFactory</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">ConfigService</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">NacosException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">JsonUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">NacosGatewayConfig</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">GatewayRouteEventPublisherAware</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>route<span class="token punctuation">.</span></span><span class="token class-name">RouteDefinition</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span><span class="token comment">/** * 服务启动时初始化路由配置信息 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NacosRouteListener</span> <span class="token punctuation">{</span>    <span class="token comment">// 注入路由文件配置变化监听器</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">NacosRouteRefreshListener</span> nacosRouteRefreshListener<span class="token punctuation">;</span>    <span class="token comment">// 注入配置类</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">NacosGatewayConfig</span> nacosGatewayConfig<span class="token punctuation">;</span>    <span class="token comment">// 注入路由定义信息接口操作类</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">GatewayRouteEventPublisherAware</span> gatewayRouteEventPublisherAware<span class="token punctuation">;</span>    <span class="token comment">/**     * 当Bean初始化时执行，初始化路由配置     */</span>    <span class="token annotation punctuation">@PostConstruct</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">loadRouteByNacosListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"----&gt;&gt;&gt; init nacos router data."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Properties</span> nacosPro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            nacosPro<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"serverAddr"</span><span class="token punctuation">,</span> nacosGatewayConfig<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            nacosPro<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"namespace"</span><span class="token punctuation">,</span> nacosGatewayConfig<span class="token punctuation">.</span><span class="token function">getNameSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//添加命名空间</span>            <span class="token class-name">ConfigService</span> configService <span class="token operator">=</span> <span class="token class-name">NacosFactory</span><span class="token punctuation">.</span><span class="token function">createConfigService</span><span class="token punctuation">(</span>nacosPro<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取Nacos中命名空间为dev的isrm-gateway配置文件的路由定义信息</span>            <span class="token class-name">String</span> configInfo <span class="token operator">=</span> configService<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span>nacosGatewayConfig<span class="token punctuation">.</span><span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nacosGatewayConfig<span class="token punctuation">.</span><span class="token function">getGroupId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nacosGatewayConfig<span class="token punctuation">.</span><span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 新增路由</span>            <span class="token function">addRoute</span><span class="token punctuation">(</span>configInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 添加srm-gateway配置文件发生变化时的监听器，监听Nacos Server下发的动态路由配置</span>            configService<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>nacosGatewayConfig<span class="token punctuation">.</span><span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nacosGatewayConfig<span class="token punctuation">.</span><span class="token function">getGroupId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nacosRouteRefreshListener<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NacosException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 添加路由     * @param configInfo     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token class-name">String</span> configInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>configInfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">"route info is null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">// 将字符串转成RouteDefinition对象列表</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDefinition</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">JsonUtils</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>configInfo<span class="token punctuation">,</span> <span class="token class-name">RouteDefinition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 遍历添加路由</span>        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>definition <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            gatewayRouteEventPublisherAware<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>definition<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="isrm-gateway配置文件"><a href="#isrm-gateway配置文件" class="headerlink" title="isrm-gateway配置文件"></a>isrm-gateway配置文件</h4><p><img src="https://pic.imgdb.cn/item/66a7bcd3d9c307b7e9567ae0.png"></p><p>比如现在配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"auth"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/auth/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-auth-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"system"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/system/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-system-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"basic"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/basic/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-basic-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"sup"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/sup/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-sup-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="初始化流程"><a href="#初始化流程" class="headerlink" title="初始化流程"></a>初始化流程</h4><p>启动网关服务，NacosRouteListener初始化时获取路由定义信息</p><p><img src="https://pic.imgdb.cn/item/66a7bcf0d9c307b7e956982a.png"></p><p>遍历路由定义信息列表，调用GatewayRouteEventPublisherAware新增路由定义信息到InMemoryRouteDefinitionRepository中，同时发布RefreshRoutesEvent事件</p><p><img src="https://pic.imgdb.cn/item/66a7bba6d9c307b7e9555d40.png"></p><p>CachingRouteLocator监听RefreshRoutesEvent事件，调用CompositeRouteLocator的getRoutes方法，然后由RouteDefinitionRouteLocator再去调用CompositeRouteDefinitionLocator的getRouteDefinitions方法获取所有的定义信息，然后转换成真实的路由对象</p><p><img src="https://pic.imgdb.cn/item/66a7bd1dd9c307b7e956bb1c.png"></p><p>因为CompositeRouteDefinitionLocator持有了InMemoryRouteDefinitionRepository的引用，所以它能获取我们自定义维护的路由定义信息</p><p><img src="https://pic.imgdb.cn/item/66a8fd79d9c307b7e94ee22e.png"></p><p>到此，我们初始化路由配置完成</p><h4 id="监听流程"><a href="#监听流程" class="headerlink" title="监听流程"></a>监听流程</h4><p>因为上面的配置文件中没有合同模块的路由配置，所以调用合同模块的查询接口会报下面的错误</p><p><img src="https://pic.imgdb.cn/item/66a7bd44d9c307b7e956e253.png"></p><p>当我们在原有的配置文件基础上，新增合同模块的路由配置，然后点击发布按钮</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"auth"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/auth/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-auth-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"system"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/system/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-system-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"basic"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/basic/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-basic-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"sup"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/sup/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-sup-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token key atrule">"id"</span><span class="token punctuation">:</span> <span class="token string">"contract"</span><span class="token punctuation">,</span>        <span class="token key atrule">"order"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token key atrule">"predicates"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"pattern"</span><span class="token punctuation">:</span> <span class="token string">"/api/contract/**"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"Path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"filters"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                <span class="token key atrule">"args"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token key atrule">"parts"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"StripPrefix"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token key atrule">"uri"</span><span class="token punctuation">:</span> <span class="token string">"lb://isrm-contract-provider"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时NacosRouteRefreshListener就能监听到配置文件的配置变化，重新调用GatewayRouteEventPublisherAware类的方法，重新加载新的路由，流程和初始化流程差不多就不讲了</p><p><img src="https://pic.imgdb.cn/item/66a7bd59d9c307b7e956f8f2.pngg"></p><p>重新调用合同模块的查询接口，发现数据出来了，接口没有报错，到此动态路由功能实现了，无需重启网关服务</p><p><img src="https://pic.imgdb.cn/item/66a7bd6ad9c307b7e9570a06.png"></p>]]></content>
      
      
      <categories>
          
          <category> springcloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springcloud </tag>
            
            <tag> gateway </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/10/hello-world/"/>
      <url>/2024/06/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux防火墙常用命令</title>
      <link href="/2024/02/25/linux-fang-huo-qiang-chang-yong-ming-ling/"/>
      <url>/2024/02/25/linux-fang-huo-qiang-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>查看防火墙服务状态</td><td>systemctl status firewalld</td></tr><tr><td>查看防火墙状态</td><td>firewall-cmd –state</td></tr><tr><td>开启防火墙</td><td>service firewalld start</td></tr><tr><td>重启防火墙</td><td>service firewalld restart</td></tr><tr><td>关闭防火墙</td><td>service firewalld stop</td></tr><tr><td>查看防火墙规则</td><td>firewall-cmd –list-all</td></tr><tr><td>查看端口是否开放</td><td>firewall-cmd –query-port=8080/tcp</td></tr><tr><td>开放80端口</td><td>firewall-cmd –permanent –add-port=80/tcp</td></tr><tr><td>移除端口</td><td>firewall-cmd –permanent –remove-port=8080/tcp</td></tr><tr><td>重启防火墙(修改配置后要重启防火墙)</td><td>firewall-cmd –reload</td></tr><tr><td>查看启用端口</td><td>ss -anlt、firewall-cmd –zone=public –list-ports</td></tr><tr><td>查看端口占用情况</td><td>lsof -i :端口号</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven打包提示报错Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.2:test</title>
      <link href="/2024/02/25/maven-da-bao-ti-shi-bao-cuo/"/>
      <url>/2024/02/25/maven-da-bao-ti-shi-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>在pom文件下加上如下配置：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.22.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skipTests</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skipTests</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整pom文件：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>isrm-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.zhou.isrm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>isrm-test-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.zhou.isrm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>isrm-test-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>isrm-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.22.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skipTests</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skipTests</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!--   spring boot maven 打包插件  --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addResources</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addResources</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug排查 </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot单元测试方式</title>
      <link href="/2024/02/25/springboot-dan-yuan-ce-shi-fang-shi/"/>
      <url>/2024/02/25/springboot-dan-yuan-ce-shi-fang-shi/</url>
      
        <content type="html"><![CDATA[<h4 id="1）使用Junit5，且测试类和启动类包名一样"><a href="#1）使用Junit5，且测试类和启动类包名一样" class="headerlink" title="1）使用Junit5，且测试类和启动类包名一样"></a>1）使用Junit5，且测试类和启动类包名一样</h4><p><img src="https://pic.imgdb.cn/item/65dadeb39f345e8d0321e392.png" alt="在这里插入图片描述"></p><p>①引入Test注解：import org.junit.jupiter.api.Test;</p><h4 id="2）使用Junit4，且测试类和启动类包名一样"><a href="#2）使用Junit4，且测试类和启动类包名一样" class="headerlink" title="2）使用Junit4，且测试类和启动类包名一样"></a>2）使用Junit4，且测试类和启动类包名一样</h4><p><img src="https://pic.imgdb.cn/item/65dadeb39f345e8d0321e310.png" alt="在这里插入图片描述"></p><p>①引入Test注解：import org.junit.Test;<br>②方法前面需要加public修饰<br>③引入@RunWith(SpringRunner.class)注解</p><h4 id="3）使用Junit5，且测试类和启动类包名不一样"><a href="#3）使用Junit5，且测试类和启动类包名不一样" class="headerlink" title="3）使用Junit5，且测试类和启动类包名不一样"></a>3）使用Junit5，且测试类和启动类包名不一样</h4><p><img src="https://pic.imgdb.cn/item/65dadeb29f345e8d0321e29a.png" alt="在这里插入图片描述"></p><p>①引入Test注解：import org.junit.jupiter.api.Test;<br>②SpringBootTest注解指定启动类</p><h4 id="4）使用Junit4，且测试类和启动类包名不一样"><a href="#4）使用Junit4，且测试类和启动类包名不一样" class="headerlink" title="4）使用Junit4，且测试类和启动类包名不一样"></a>4）使用Junit4，且测试类和启动类包名不一样</h4><p>①引入Test注解：import org.junit.Test;<br>②方法前面需要加public修饰<br>③引入@RunWith(SpringRunner.class)注解<br>④SpringBootTest注解指定启动类</p>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> 单元测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring自动装配方式</title>
      <link href="/2024/02/25/spring-zi-dong-zhuang-pei-fang-shi/"/>
      <url>/2024/02/25/spring-zi-dong-zhuang-pei-fang-shi/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_48922154/article/details/113783458">参考链接</a></p><h4 id="1-AutoWired注解"><a href="#1-AutoWired注解" class="headerlink" title="1. @AutoWired注解"></a>1. @AutoWired注解</h4><p>自动注入【Spring定义的】：可以标注在构造器，参数，方法，属性 </p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1</span>）、默认优先按照类型去容器中找对应的组件<span class="token operator">:</span>applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">BookDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>找到就赋值<span class="token number">2</span>）、如果找到多个相同类型的组件，再将属性的名称作为组件的id去容器中查找               applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"bookDao"</span><span class="token punctuation">)</span><span class="token number">3</span>）、<span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"bookDao"</span><span class="token punctuation">)</span>：使用<span class="token annotation punctuation">@Qualifier</span>指定需要装配的组件的id，而不是使用属性名<span class="token number">4</span>）、自动装配默认一定要将属性赋值好，没有就会报错；   可以使用<span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>required<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">5</span>）、<span class="token annotation punctuation">@Primary</span>：让<span class="token class-name">Spring</span>进行自动装配的时候，默认使用首选的bean；      也可以继续使用<span class="token annotation punctuation">@Qualifier</span>指定需要装配的bean的名字<span class="token number">6</span>）、<span class="token annotation punctuation">@Autowired</span>标注的位置<span class="token operator">:</span>构造器，参数，方法，属性；都是从容器中获取参数组件的值    <span class="token number">1</span>）、<span class="token punctuation">[</span>标注在方法位置<span class="token punctuation">]</span>：<span class="token annotation punctuation">@Bean</span><span class="token operator">+</span>方法参数；参数从容器中获取<span class="token punctuation">;</span>默认不写<span class="token annotation punctuation">@Autowired</span>效果是一样的；都能自动装配    <span class="token number">2</span>）、<span class="token punctuation">[</span>标在构造器上<span class="token punctuation">]</span>：如果组件只有一个有参构造器，这个有参构造器的<span class="token annotation punctuation">@Autowired</span>可以省略，参数位置的组件还是可以自动从容器中获取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-Resourece注解"><a href="#2-Resourece注解" class="headerlink" title="2.@Resourece注解"></a>2.@Resourece注解</h4><p>Spring还支持使用@Resource（JSR250）和@Inject（JSR330）【java规范】，@Resource不支持@Primary功能和required=false功能，@Inject支持@Primary功能，但是没有required属性，不支持required=false功能。</p><h4 id="3-注入底层组件"><a href="#3-注入底层组件" class="headerlink" title="3.注入底层组件"></a>3.注入底层组件</h4><p> 自定义组件想要使用Spring容器底层的一些组件（ApplicationContext，BeanFactory，xxx）自定义组件需要实现xxxAware接口；在创建对象的时候会调用接口规定的方法注入相关组件，把Spring底层的一些组件注入到自定义的bean中，xxxAware的功能都是使用xxxAwareProcessor处理的，判断实现了哪个Aware接口然后将bean转化为该类型调用set方法，将容器底层组件注入。 </p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token annotation punctuation">@Nullable</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token class-name">AccessControlContext</span> acc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">EnvironmentAware</span> <span class="token operator">||</span> bean <span class="token keyword">instanceof</span> <span class="token class-name">EmbeddedValueResolverAware</span> <span class="token operator">||</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">ResourceLoaderAware</span> <span class="token operator">||</span> bean <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationEventPublisherAware</span> <span class="token operator">||</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">MessageSourceAware</span> <span class="token operator">||</span> bean <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>acc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">.</span><span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>acc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token function">invokeAwareInterfaces</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> acc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token function">invokeAwareInterfaces</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">invokeAwareInterfaces</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">Aware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">EnvironmentAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">EnvironmentAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setEnvironment</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">EmbeddedValueResolverAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">EmbeddedValueResolverAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setEmbeddedValueResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">ResourceLoaderAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ResourceLoaderAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setResourceLoader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationEventPublisherAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisherAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setApplicationEventPublisher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">MessageSourceAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MessageSourceAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMessageSource</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContextAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-Profile注解"><a href="#4-Profile注解" class="headerlink" title="4.@Profile注解"></a>4.@Profile注解</h4><p><strong>@Profile注解为我们提供的可以根据当前环境，动态的激活和切换一系列组件的功能</strong><br>（1）加了环境标识的bean，只有这个环境被激活的时候才能注册到容器中，默认是default环境。<br>（2）写在配置类上，只有是指定的环境的时候，整个配置类里面的所有配置才能生效<br>（3）没有标注环境标识的bean在任何环境下都加载<br><strong>运行时如何制定环境：</strong><br>（1）命令行参数，通过在虚拟机参数位置指定-Dspring.profiles.active=xxx来指定运行环境，标注了该环境的bean会被配置进容器中<br>（2）程序内指定：创建一个applicationContext ——》设置需要激活的环境，applicationContext.getEnvironment().setActiveProfiles(“”) ——》注册主配置类，applicationContext.register(xxx.class) ——》启动刷新容器，applicationContext.refresh();</p><h4 id="5-AllArgsConstructor注解"><a href="#5-AllArgsConstructor注解" class="headerlink" title="5.@AllArgsConstructor注解"></a>5.@AllArgsConstructor注解</h4><p><strong>@AllArgsConstructor注解也可以注入对应的bean</strong></p><p>Springboot官方建议使用final来修饰成员变最，然后通过构造方法来进行注入原因:final修饰的成员变量是不能够被修改的，反射那就没办法了<br><img src="https://pic.imgdb.cn/item/65dae1339f345e8d032827fd.png" alt="在这里插入图片描述"><br>和下面代码一样：<br><img src="https://pic.imgdb.cn/item/65dae1339f345e8d03282821.png" alt="在这里插入图片描述"></p><h4 id="6-RequiredArgsConstructor注解"><a href="#6-RequiredArgsConstructor注解" class="headerlink" title="6.@RequiredArgsConstructor注解"></a>6.@RequiredArgsConstructor注解</h4><p>@RequiredArgsConstructor写在类上面可以替换@Autowired注解，需要注意的是在注入时需要使用final定义，或者使用@Notnull注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@RestController</span><span class="token comment">//生成一个包含过所有字段的构造方法</span><span class="token comment">//@AllArgsConstructor</span><span class="token comment">//会将类的每一个final字段或者non-null字段生成一个构造方法 </span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminUserController</span> <span class="token punctuation">{</span>    <span class="token comment">/* autowired没什么问题，但是有可能报错，iUserService为null，spring也不建议使用autowired */</span>    <span class="token comment">//@Autowired</span>    <span class="token comment">//private IUserService iUserService;    </span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IUserService</span> iUserService<span class="token punctuation">;</span>        <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">adminLogin</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//....</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SneakyThrows注解</title>
      <link href="/2024/02/25/sneakythrows-zhu-jie/"/>
      <url>/2024/02/25/sneakythrows-zhu-jie/</url>
      
        <content type="html"><![CDATA[<p>@SneakyThrows直接把捕获异常的代码嵌入到了class文件里。<br>也就是说，并不是我们忽略了异常，而是类似于Lombok的@Data注解，在编译时就已经把处理的代码嵌入到了class内。</p><p><strong>用法：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SneakyThrows</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Class</span> clz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.woshild.derek_ld.lombok.SneakyThrowsTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3秒已过。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>编译生成的class文件：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token class-name">Class</span> clz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.woshild.derek_ld.lombok.SneakyThrowsTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3秒已过。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lombok </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Builder注解</title>
      <link href="/2024/02/25/builder-zhu-jie/"/>
      <url>/2024/02/25/builder-zhu-jie/</url>
      
        <content type="html"><![CDATA[<p> ● 它作用于类，将其变成建造者模式<br>● 可以以链的形式调用<br>● 初始化实例对象生成的对象是不可以变的，可以在创建对象的时候进行赋值<br>● 如果需要在原来的基础上修改可以加 set 方法，final 字段可以不需要初始化<br>● 它会生成一个全参的构造函数</p><p><strong>实战：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Builder</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>编译后：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>        <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">User<span class="token punctuation">.</span>UserBuilder</span> <span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User<span class="token punctuation">.</span>UserBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UserBuilder</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>                <span class="token class-name">UserBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token class-name">User<span class="token punctuation">.</span>UserBuilder</span> <span class="token function">username</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>                <span class="token keyword">public</span> <span class="token class-name">User<span class="token punctuation">.</span>UserBuilder</span> <span class="token function">password</span><span class="token punctuation">(</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>                <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"User.UserBuilder(username="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">", password="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lombok </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RestTemplate参数设置【post请求】</title>
      <link href="/2024/02/25/resttemplate-can-shu-she-zhi-post-qing-qiu/"/>
      <url>/2024/02/25/resttemplate-can-shu-she-zhi-post-qing-qiu/</url>
      
        <content type="html"><![CDATA[<p>①post请求，contentType:application/json(使用了@RequestBody接收参数)<br>使用HashMap设置参数，然后转json字符串发起请求</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://localhost:8080/admin/login"</span><span class="token punctuation">;</span><span class="token comment">// 请求头</span><span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> formEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> formEntity<span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>②post请求，contentType:application/x-www-form-urlencoded<br>使用LinkedMultiValueMap设置参数，然后发起请求</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://localhost:8080/admin/login"</span><span class="token punctuation">;</span><span class="token comment">// 请求头</span><span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_FORM_URLENCODED</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiValueMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> formEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> formEntity<span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>jsonObject <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unirest工具类的使用</title>
      <link href="/2024/02/25/unirest-gong-ju-lei-de-shi-yong/"/>
      <url>/2024/02/25/unirest-gong-ju-lei-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><strong>官方文档：</strong>  <a href="http://kong.github.io/unirest-java/">http://kong.github.io/unirest-java/</a><br><strong>引入依赖：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token class-name">Pull</span> in as a traditional dependency <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>konghq<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>unirest<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.14</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">OR</span> as a snazzy <span class="token keyword">new</span> standalone jar <span class="token keyword">with</span> <span class="token namespace">shaded</span> dependencies <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>konghq<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>unirest<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.14</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>classifier<span class="token punctuation">&gt;</span></span>standalone<span class="token operator">&lt;</span><span class="token operator">/</span>classifier<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用法示例：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">kong<span class="token punctuation">.</span>unirest<span class="token punctuation">.</span></span><span class="token class-name">Unirest</span></span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">UniRestTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        res <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://172.25.xx.xx:12345/dolphinscheduler/login"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> <span class="token string">"admin"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"userPassword"</span><span class="token punctuation">,</span> <span class="token string">"dolphinscheduler123"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token string">"login res:%s"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>        res <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://172.25.xx.xx:12345/dolphinscheduler/log/detail"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">,</span> <span class="token string">"ca3e91749eee187fa9a797d92cf5cb6d"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">queryString</span><span class="token punctuation">(</span><span class="token string">"taskInstanceId"</span><span class="token punctuation">,</span> <span class="token string">"703"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">queryString</span><span class="token punctuation">(</span><span class="token string">"skipLineNum"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">queryString</span><span class="token punctuation">(</span><span class="token string">"limit"</span><span class="token punctuation">,</span> <span class="token string">"1000"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token string">"log detail res:%s"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token class-name">String</span> template<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 第三方工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile和jar包不同目录处理</title>
      <link href="/2024/02/21/dockerfile-he-jar-bao-bu-tong-mu-lu-chu-li/"/>
      <url>/2024/02/21/dockerfile-he-jar-bao-bu-tong-mu-lu-chu-li/</url>
      
        <content type="html"><![CDATA[<p>如果Dockerfile的全路径为**/srm/myDockerfile/Dockerfile**，而JAR文件位于/srm目录下，可以在Dockerfile中使用相对路径引用JAR文件。<br>假设项目结构如下：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">luaCopy code<span class="token operator">/</span>srm<span class="token punctuation">|</span><span class="token operator">--</span> myDockerfile<span class="token punctuation">|</span><span class="token operator">--</span> your-app<span class="token punctuation">.</span>jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Dockerfile的路径是**/srm/myDockerfile/Dockerfile**，如下：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">DockerfileCopy code<span class="token comment"># 使用官方的 OpenJDK 11 基础镜像</span><span class="token keyword">FROM</span> openjdk:11<span class="token comment"># 设置工作目录，Dockerfile所在的目录是/srm/myDockerfile</span>WORKDIR <span class="token operator">/</span>srm/myDockerfile<span class="token comment"># 复制 JAR 文件到容器中的工作目录，通过相对路径引用JAR文件</span><span class="token function">COPY</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>your-app<span class="token punctuation">.</span>jar <span class="token punctuation">.</span><span class="token comment"># 你可以添加其他需要的步骤，例如设置环境变量、端口等</span><span class="token comment"># 启动应用程序</span>CMD <span class="token punctuation">[</span><span class="token string">"java"</span><span class="token punctuation">,</span> <span class="token string">"-jar"</span><span class="token punctuation">,</span> <span class="token string">"your-app.jar"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个Dockerfile中，工作目录被设置为/srm/myDockerfile，即Dockerfile所在的目录。然后，使用<strong>COPY</strong>命令通过<strong>相对路径../../引用</strong>上级目录来复制JAR文件到容器内的工作目录。<br>可以下命令构建Docker镜像（将镜像命名为<strong>my-app-image</strong>，可以根据需要进行更改）：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">bashCopy codedocker build <span class="token operator">-</span>t my-app-image <span class="token operator">-</span>f myDockerfile/Dockerfile <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用以下命令运行容器：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">bashCopy codedocker run <span class="token operator">-</span>p 8080:8080 my-app-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose部署jar包</title>
      <link href="/2024/02/21/docker-compose-bu-shu-jar-bao/"/>
      <url>/2024/02/21/docker-compose-bu-shu-jar-bao/</url>
      
        <content type="html"><![CDATA[<h4 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h4><p>Docker Compose是一个用来定义和运行复杂应用的Docker工具<br>一个使用Docker容器的应用，通常由多个容器组成。使用Docker Compose不再需要使用shell脚本来启动容器</p><p>Compose 通过<strong>一个配置文件</strong>来管理<strong>多个</strong>Docker容器，在配置文件中，所有的容器通过<strong>services</strong>来定义，然后使用docker-compose脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。</p><h4 id="二、步骤："><a href="#二、步骤：" class="headerlink" title="二、步骤："></a>二、步骤：</h4><p><strong>①编写Dockerfile定义各个微服务应用并构建出对应的镜像文件</strong><br><strong>例如：</strong><br><img src="https://pic.imgdb.cn/item/65dae0649f345e8d03262aac.png" alt="在这里插入图片描述"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token keyword">FROM</span> openjdk:8<span class="token comment">#将jar包添加到容器中并更名为app.jar</span>ADD <span class="token operator">*</span><span class="token punctuation">.</span>jar app<span class="token punctuation">.</span>jar<span class="token comment">#运行jar包</span>ENTRYPOINT <span class="token punctuation">[</span><span class="token string">"java"</span><span class="token punctuation">,</span> <span class="token string">"-Xms128m"</span><span class="token punctuation">,</span> <span class="token string">"-Xmx128m"</span><span class="token punctuation">,</span> <span class="token string">"-Dspring.profiles.active=dev"</span><span class="token punctuation">,</span> <span class="token string">"-jar"</span><span class="token punctuation">,</span> <span class="token string">"/app.jar"</span><span class="token punctuation">]</span><span class="token comment">#暴露6001端口作为微服务</span>EXPOSE 19012<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>②使用 docker-compose.yml 定义一个完整的业务单元，安排好整体应用中的各个容器服务</strong><br><strong>方式一</strong><br>：此种写法需要提前构建好镜像，在/srm/app/sup目录下执行docker build -t isrm-sup .命令构建好镜像<img src="https://pic.imgdb.cn/item/65dae0649f345e8d03262a60.png" alt="在这里插入图片描述"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">version: <span class="token string">'3.0'</span>services:  supService:  <span class="token comment">#服务名：随便命名</span>    restart: always <span class="token comment">#docker服务重启时，容器也启动</span>    image: isrm-sup  <span class="token comment">#指定自定义构建好的镜像</span>    container_name: sup <span class="token comment">#生成的容器名称</span>    ports:      - <span class="token string">"19012:19012"</span> <span class="token comment"># 端口映射</span>    volumes:      - /srm/application/back/logs:/srm/application/back/logs <span class="token comment"># 目录挂载</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>方式二</strong>：此种写法不需要提前构建镜像，执行docker-compose up时会自动构建镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">version: <span class="token string">'3.0'</span>services:  supService:    restart: always    build: <span class="token comment">#构建自定义镜像</span>       context: ./sup/  <span class="token comment">#dockerfile文件所在目录</span>       dockerfile: Dockerfile  <span class="token comment">#dockerfile文件名称</span>    image: isrm-sup <span class="token comment">#生成的镜像名称</span>    container_name: sup <span class="token comment">#生成的容器名称</span>    ports:      - <span class="token string">"19012:19012"</span> <span class="token comment">#端口映射</span>    volumes:      - /srm/application/back/logs:/srm/application/back/logs  <span class="token comment">#目录挂载</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>③最后，执行 docker-compose up（docker-compose up -d：后台启动） 命令来启动并运行整个应用程序，完整一键部署</strong></p><h4 id="三、常用命令："><a href="#三、常用命令：" class="headerlink" title="三、常用命令："></a>三、常用命令：</h4><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>查看帮助</td><td>docker-compose -h</td></tr><tr><td>启动所有docker-compose服务</td><td>docker-compose up</td></tr><tr><td>停止并删除容器、网络、卷、镜像</td><td>docker-compose down</td></tr><tr><td>查看容器输出日志</td><td>docker-compose logs yml里面的服务id</td></tr><tr><td>检查配置</td><td>docker-compose config</td></tr><tr><td>检查配置，有问题才有输出</td><td>docker-compose config -q</td></tr><tr><td>重启服务</td><td>docker-compose restart</td></tr><tr><td>启动服务</td><td>docker-compose start</td></tr><tr><td>停止服务</td><td>docker-compose stop</td></tr><tr><td>进入容器实例内部</td><td>docker-compose exec yml里面的服务id</td></tr><tr><td>进入容器实例内部</td><td>docker-compose exec docker-compose.yml文件中写的服务id/bin/bash</td></tr><tr><td>展示当前docker-compose编排过的运行的所有容器</td><td>docker-compose ps</td></tr><tr><td>展示当前docker-compose编排过的容器进程</td><td>docker-compose top</td></tr><tr><td>删除镜像</td><td>docker-compose down –rmi all</td></tr><tr><td>启动所有docker-compose服务并后台运行</td><td>docker-compose up -d</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>el-table渲染踩坑</title>
      <link href="/2024/02/20/el-table-xuan-ran-cai-keng/"/>
      <url>/2024/02/20/el-table-xuan-ran-cai-keng/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>今天在弄一个弹窗表格功能时，发现只要点开某一行数据的弹窗再关闭，再点击其他弹窗时，发现最大数量都会以第一次为准，不是以当前数据行的为准。</p><h2 id="弹窗部分代码："><a href="#弹窗部分代码：" class="headerlink" title="弹窗部分代码："></a>弹窗部分代码：</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"明细"</span> <span class="token operator">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"1200px"</span> append<span class="token operator">-</span><span class="token keyword">to</span><span class="token operator">-</span>body<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table ref<span class="token operator">=</span><span class="token string">"tableRef"</span> <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> fit highlight<span class="token operator">-</span>current<span class="token operator">-</span>row <span class="token operator">:</span>header<span class="token operator">-</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"headerCellStyle"</span> max<span class="token operator">-</span>height<span class="token operator">=</span><span class="token string">"350"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column          label<span class="token operator">=</span><span class="token string">"需求数量"</span>          prop<span class="token operator">=</span><span class="token string">"quantity"</span>          align<span class="token operator">=</span><span class="token string">"center"</span>          min<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"130px"</span>          <span class="token operator">:</span>render<span class="token operator">-</span>header<span class="token operator">=</span><span class="token string">"addRedStar"</span>          show<span class="token operator">-</span>overflow<span class="token operator">-</span>tooltip          fixed<span class="token operator">=</span><span class="token string">"left"</span>        <span class="token operator">&gt;</span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"{ row }"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input              v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"row.quantity"</span>              v<span class="token operator">-</span>only<span class="token operator">-</span>number<span class="token operator">=</span><span class="token string">"{ precision: 2, max: row.maxQuantity }"</span>              type<span class="token operator">=</span><span class="token string">"number"</span>              <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!isEdit"</span>              <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"{ 'negative-number-color': formInfo.orderMode === 'Z010' }"</span>            <span class="token operator">/</span><span class="token operator">&gt;</span>            <span class="token punctuation">{</span><span class="token punctuation">{</span> row<span class="token punctuation">.</span>maxQuantity <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">{</span> row<span class="token punctuation">.</span>quantity <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"dialogVisible = false"</span><span class="token operator">&gt;</span>取 消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"isEdit"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"saveList"</span><span class="token operator">&gt;</span>确 定<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h2><p>在网上翻到了<a href="https://blog.csdn.net/weixin_33859231/article/details/91976530">解决方案</a>，需要在el-table中加一个唯一key来解决这个渲染问题，这个key是vue自带属性,主要用在 Vue 的虚拟 DOM比对算法中，在新旧nodes对比时辨识 VNodes。如果不更新这个key的话,显示隐藏列的时候,部分DOM不会重新渲染；因此我将每一行的行号作为key解决了这个问题！</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"明细"</span> <span class="token operator">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"1200px"</span> append<span class="token operator">-</span><span class="token keyword">to</span><span class="token operator">-</span>body<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table ref<span class="token operator">=</span><span class="token string">"tableRef"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"currentRow.rowNo"</span> <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> fit highlight<span class="token operator">-</span>current<span class="token operator">-</span>row <span class="token operator">:</span>header<span class="token operator">-</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"headerCellStyle"</span> max<span class="token operator">-</span>height<span class="token operator">=</span><span class="token string">"350"</span><span class="token operator">&gt;</span>       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>省略代码    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> bug排查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO安装教程（Windows版）</title>
      <link href="/2024/02/20/minio-an-zhuang-jiao-cheng-windows-ban/"/>
      <url>/2024/02/20/minio-an-zhuang-jiao-cheng-windows-ban/</url>
      
        <content type="html"><![CDATA[<h4 id="前提：安装-Windows-版本-Docker"><a href="#前提：安装-Windows-版本-Docker" class="headerlink" title="前提：安装 Windows 版本 Docker"></a>前提：安装 Windows 版本 Docker</h4><p><strong>① 官网下载 Docker（选择Windows版本）</strong><br><a href="https://www.docker.com/">链接</a><br><em><strong>② 下载完成后，直接点击安装；安装完毕后，进去 Docker 客户端后，会提示下载 Linux 内核更新包，此时点击下载即可</strong></em><br><a href="https://learn.microsoft.com/zh-cn/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package">链接</a><br><strong>③ 更新完毕后，完成安装，此时便可以打开 windows 的命令符，进行 Docker 的使用</strong></p><h4 id="安装-MinIO-容器"><a href="#安装-MinIO-容器" class="headerlink" title="安装 MinIO 容器"></a>安装 MinIO 容器</h4><p><strong>① 创建挂载目录</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>minio/<span class="token keyword">data</span>mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>minio/conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>② 挂载目录、创建容器并运行</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">docker run <span class="token operator">--</span>name minio <span class="token operator">-</span>p 9000:9000 <span class="token operator">-</span>p 9090:9090 <span class="token operator">-</span>d <span class="token operator">--</span>restart=always <span class="token operator">-</span>e <span class="token string">"MINIO_ROOT_USER=minio"</span> <span class="token operator">-</span>e <span class="token string">"MINIO_ROOT_PASSWORD=minio123"</span> <span class="token operator">-</span>v C:<span class="token operator">/</span>Self/docker/minio/<span class="token keyword">data</span>:<span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">-</span>v C:<span class="token operator">/</span>Self/docker/minio/conf:<span class="token operator">/</span>root/<span class="token punctuation">.</span>minio minio/minio server <span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">--</span>console-address <span class="token string">':9090'</span> <span class="token operator">--</span>address <span class="token string">":9000"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>③ 测试</strong><br>访问地址：<a href="http://localhost:9090/login">http://localhost:9090/login</a></p>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> MinIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux的scp命令</title>
      <link href="/2024/02/20/linux-de-scp-ming-ling/"/>
      <url>/2024/02/20/linux-de-scp-ming-ling/</url>
      
        <content type="html"><![CDATA[<p>scp命令主要用于Linux服务器之间复制文件和目录</p><p><strong>1）本地复制文件到远程：</strong><br>①scp local_file remote_username@remote_ip:remote_folder<br>②scp local_file remote_username@remote_ip:remote_file<br>③scp local_file remote_ip:remote_folder<br>④scp local_file remote_ip:remote_file</p><p>第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；<br>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名；</p><p><strong>例子：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">scp <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3 root@www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/musicscp <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3 root@www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/music/001<span class="token punctuation">.</span>mp3scp <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3 www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/musicscp <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3 www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/music/001<span class="token punctuation">.</span>mp3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2）本地复制文件夹到远程：</strong><br>①scp -r local_folder remote_username@remote_ip:remote_folder<br>②scp -r local_folder remote_ip:remote_folder</p><p>第1个指定了用户名，命令执行后需要再输入密码；<br>第2个没有指定用户名，命令执行后需要输入用户名和密码；</p><p> <strong>例子：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">scp <span class="token operator">-</span>r <span class="token operator">/</span>home/space/music/ root@www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/scp <span class="token operator">-</span>r <span class="token operator">/</span>home/space/music/ www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>3）远程复制到本地</strong><br>从 远程 复制到 本地，只要将 从 本地 复制到 远程 的命令 的 后2个参数 调换顺序 即可；<br><strong>例如：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">scp root@www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/music <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3scp <span class="token operator">-</span>r www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/ <span class="token operator">/</span>home/space/music/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>feign远程调用请求头设置参数</title>
      <link href="/2024/02/20/feign-yuan-cheng-diao-yong-qing-qiu-tou-she-zhi-can-shu/"/>
      <url>/2024/02/20/feign-yuan-cheng-diao-yong-qing-qiu-tou-she-zhi-can-shu/</url>
      
        <content type="html"><![CDATA[<p><strong>代码如下</strong><br>通过实现RequestInterceptor 接口，重写apply方法逻辑，设置相应的参数，此时在业务方法中远程调用对应接口时，都会携带这些参数，可在远程调用接口所在服务中进行解析使用。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">feign<span class="token punctuation">.</span></span><span class="token class-name">RequestInterceptor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">feign<span class="token punctuation">.</span></span><span class="token class-name">RequestTemplate</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">RequestContextHolder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestAttributes</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignClientRequestInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">RequestInterceptor</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">FeignClientRequestInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">RequestTemplate</span> requestTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">ServletRequestAttributes</span> attributes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> attributes<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> attributes<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            requestTemplate<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            requestTemplate<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"resourceId"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"resourceId"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> springcloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL生产数据备份</title>
      <link href="/2024/02/18/mysql-sheng-chan-shu-ju-bei-fen/"/>
      <url>/2024/02/18/mysql-sheng-chan-shu-ju-bei-fen/</url>
      
        <content type="html"><![CDATA[<h4 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h4><p>对于系统来说，生产数据是非常重要的，有时候不小心删除了却找不回来就酿成了大祸。因此，定时备份生产数据是非常有必要的，即使不小心删除了全部数据，也可以使用备份数据进行回复。本文提供MySQL的备份脚本，可按自己的需求进行修改。</p><h4 id="1-增量备份脚本binlogbak-sh"><a href="#1-增量备份脚本binlogbak-sh" class="headerlink" title="1.增量备份脚本binlogbak.sh"></a>1.增量备份脚本binlogbak.sh</h4><p>脚本中文件路径BakDir、LogFile需要自行创建，其中BinFile和BinDir需要自己自行找到对应的路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8<span class="token assign-left variable">BakDir</span><span class="token operator">=</span>/u01/data/mysqlbak/data/zlbak<span class="token assign-left variable">BinDir</span><span class="token operator">=</span>/var/lib/mysql<span class="token assign-left variable">LogFile</span><span class="token operator">=</span>/u01/data/mysqlbak/log/binlog.log<span class="token assign-left variable">BinFile</span><span class="token operator">=</span>/var/lib/mysql/logindex.indexmysqladmin <span class="token parameter variable">-h</span> 生产数据库服务器ip地址 -u数据库用户名 -p数据库密码 flush-logs<span class="token comment">#这个是用于产生新的mysql-bin.00000*文件</span><span class="token assign-left variable">Counter</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">wc</span> <span class="token parameter variable">-l</span> $BinFile <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'{print $1}'</span><span class="token variable">`</span></span><span class="token assign-left variable">NextNum</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment">#这个for循环用于比对$Counter,$NextNum这两个值来确定文件是不是存在或最新的。</span><span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> $BinFile<span class="token variable">`</span></span><span class="token keyword">do</span>    <span class="token assign-left variable">base</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $file<span class="token variable">`</span></span>    <span class="token comment">#basename用于截取mysql-bin.00000*文件名，去掉./mysql-bin.000005前面的./</span>    <span class="token assign-left variable">NextNum</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">expr</span> $NextNum + <span class="token number">1</span><span class="token variable">`</span></span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$NextNum</span> <span class="token parameter variable">-eq</span> <span class="token variable">$Counter</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token variable">$base</span> skip<span class="token operator">!</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span>    <span class="token keyword">else</span>        <span class="token assign-left variable">dest</span><span class="token operator">=</span><span class="token variable">$BakDir</span>/<span class="token variable">$base</span>        if<span class="token punctuation">(</span>test <span class="token parameter variable">-e</span> <span class="token variable">$dest</span><span class="token punctuation">)</span>        <span class="token comment">#test -e用于检测目标文件是否存在，存在就写exist!到$LogFile去。</span>        <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> <span class="token variable">$base</span> exist<span class="token operator">!</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span>        <span class="token keyword">else</span>            <span class="token function">cp</span> <span class="token variable">$BinDir</span>/<span class="token variable">$base</span> <span class="token variable">$BakDir</span>            <span class="token builtin class-name">echo</span> <span class="token variable">$base</span> copying <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span>        <span class="token keyword">fi</span>    <span class="token keyword">fi</span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +<span class="token string">"%Y年%m月%d日 %H:%M:%S"</span><span class="token variable">`</span></span> Backup success<span class="token operator">!</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、全量备份脚本databak-sh"><a href="#2、全量备份脚本databak-sh" class="headerlink" title="2、全量备份脚本databak.sh"></a>2、全量备份脚本databak.sh</h4><p>脚本中文件路径BakDir、ZlbakDir、LogFile需要自行创建，此脚本可在多个服务器上定时执行。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8<span class="token assign-left variable">BakDir</span><span class="token operator">=</span>/u01/data/mysqlbak/data/allbak<span class="token assign-left variable">ZlbakDir</span><span class="token operator">=</span>/u01/data/mysqlbak/data/zlbak<span class="token assign-left variable">LogFile</span><span class="token operator">=</span>/u01/data/mysqlbak/log/bak.log<span class="token assign-left variable">Date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%Y-%m-%d-%H-%M-%S<span class="token variable">`</span></span><span class="token assign-left variable">Begin</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +<span class="token string">"%Y年%m月%d日 %H:%M:%S"</span><span class="token variable">`</span></span><span class="token assign-left variable">Database</span><span class="token operator">=</span>要备份的数据库名称<span class="token comment">#BackName=`$Database-$Date`</span><span class="token builtin class-name">cd</span> <span class="token variable">$BakDir</span><span class="token assign-left variable">DumpFile</span><span class="token operator">=</span><span class="token variable">$Database</span>-<span class="token variable">$Date</span>.sql<span class="token assign-left variable">GZDumpFile</span><span class="token operator">=</span><span class="token variable">$Database</span>-<span class="token variable">$Date</span>.tar.gzmysqldump <span class="token parameter variable">-h</span> 生产数据库服务器ip地址 -u数据库用户名 -p数据库密码 <span class="token variable">$Database</span> --flush-logs --delete-master-logs --single-transaction <span class="token operator">&gt;</span> <span class="token variable">$BakDir</span>/<span class="token variable">$DumpFile</span><span class="token comment">#示例：mysqldump -h 172.16.40.92 -uroot -pIDEO-xwk123 $Database  &gt; $BakDir/$DumpFile</span><span class="token function">tar</span> <span class="token parameter variable">-czvf</span> <span class="token variable">$GZDumpFile</span> <span class="token variable">$DumpFile</span><span class="token function">rm</span> <span class="token variable">$DumpFile</span><span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> <span class="token parameter variable">-l</span> *.tar.gz <span class="token operator">|</span><span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$count</span> <span class="token parameter variable">-ge</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    <span class="token assign-left variable">file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> <span class="token parameter variable">-l</span> *.tar.gz <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'{print $9}'</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'NR==1'</span><span class="token variable">)</span></span>    <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">$file</span><span class="token keyword">fi</span><span class="token assign-left variable">Last</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +<span class="token string">"%Y年%m月%d日 %H:%M:%S"</span><span class="token variable">`</span></span><span class="token builtin class-name">echo</span> 开始:<span class="token variable">$Begin</span> 结束:<span class="token variable">$Last</span> <span class="token variable">$GZDumpFile</span> success <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span><span class="token comment"># 进入到增量备份目录，删除binlog</span><span class="token builtin class-name">cd</span> <span class="token variable">$ZlbakDir</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> *<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3、设置定时任务"><a href="#3、设置定时任务" class="headerlink" title="3、设置定时任务"></a>3、设置定时任务</h4><p>注意：一定要选择用户量少的时间执行脚本，防止影响用户体验。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@server mysqlbak<span class="token punctuation">]</span><span class="token comment"># crontab -e</span><span class="token comment">#每个星期日凌晨2:00执行完全备份脚本</span><span class="token number">0</span> <span class="token number">2</span> * * <span class="token number">0</span> /u01/data/mysqlbak/databak.sh <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token comment">#周一到周六凌晨2:00做增量备份</span><span class="token number">0</span> <span class="token number">2</span> * * <span class="token number">1</span>-6 /u01/data/mysqlbak/binlogbak.sh <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、使计划任务生效"><a href="#4、使计划任务生效" class="headerlink" title="4、使计划任务生效"></a>4、使计划任务生效</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># systemctl restart crond.service</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5、查看计划任务"><a href="#5、查看计划任务" class="headerlink" title="5、查看计划任务"></a>5、查看计划任务</h4><p>出现如下内容，即设置定时任务成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#每个星期日凌晨2:00执行完全备份脚本</span><span class="token number">0</span> <span class="token number">2</span> * * <span class="token number">0</span> /u01/data/mysqlbak/databak.sh <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token comment">#周一到周六凌晨2:00做增量备份</span><span class="token number">0</span> <span class="token number">2</span> * * <span class="token number">1</span>-6 /u01/data/mysqlbak/binlogbak.sh <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-问题"><a href="#6-问题" class="headerlink" title="6.问题"></a>6.问题</h4><p> Shell脚本手动执行可以正常运行，并得到正确结果；使用Crontab定时调度的时候，Shell脚本执行出来的结果数据量为0。</p><p><strong>原因：</strong></p><p>Linux下用crontab执行定时任务不会缺省的从用户profile文件中读取环境变量参数，所以经常导致在手工执行某个脚本时是成功的，但是到crontab中试图让它定期执行时就是会出错。这是因为<strong>用户登陆Linux</strong>操作系统的时候，<strong>”/etc/profile”, “~/.bash_profile”</strong>等配置文件会被<strong>自动执行</strong>，而<strong>crontab定时调度</strong>的时候可能<strong>不会执行</strong>配置文件。</p><h4 id="7-解决"><a href="#7-解决" class="headerlink" title="7.解决"></a>7.解决</h4><p>Shell脚本缺省的**#!/bin/sh** 开头换行后的第一行添加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span class="token builtin class-name">source</span> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>feign调用接口成功后直接进入fallback回调方法排查</title>
      <link href="/2023/12/23/feign-diao-yong-jie-kou-cheng-gong-hou-zhi-jie-jin-ru-fallback-hui-diao-fang-fa-pai-cha/"/>
      <url>/2023/12/23/feign-diao-yong-jie-kou-cheng-gong-hou-zhi-jie-jin-ru-fallback-hui-diao-fang-fa-pai-cha/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>最近写了个远程调用接口获取文件的上传日期，但是在客户端调用远程接口成功后并没有拿到数据，调试发现调用接口成功后直接进入了fallback回到方法，返回了null<br><strong>代码：</strong><br>①feign接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"isrm-attachment"</span><span class="token punctuation">,</span> fallback <span class="token operator">=</span> <span class="token class-name">OssBusinessRemoteServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">OssBusinessRemoteService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/ossBusiness/listByBusinessIds"</span><span class="token punctuation">)</span>    <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>②feign回调实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessRemoteServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OssBusinessRemoteService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>③服务实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFileMapper</span><span class="token punctuation">,</span> <span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">OssBusinessService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">OssBusinessFileMapper</span> ossBusinessFileMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>businessIds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span></span> ossBusinessFiles <span class="token operator">=</span> ossBusinessFileMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span></span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getBusinessId</span><span class="token punctuation">,</span> <span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getCreateDate</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getBusinessId</span><span class="token punctuation">,</span> businessIds<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span><span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getCreateDate</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span><span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getBusinessId</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ossBusinessFiles<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ossBusinessFiles<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>④实体类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"oss_business_file"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessFile</span> <span class="token punctuation">{</span>    <span class="token comment">/**主键ID */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>    <span class="token comment">/**业务id */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> businessId<span class="token punctuation">;</span>    <span class="token comment">/**文件底表id */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> ossFileId<span class="token punctuation">;</span>    <span class="token comment">/**     * 创建时间     */</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> createDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 创建人     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> creator<span class="token punctuation">;</span>    <span class="token comment">/**     * 修改时间     */</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> updateDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 修改人     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> modifier<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p>就是上述代码，我在客户端引用feign接口后，调用获取文件上传时间成功后走了回调接口返回了null值，我昨天排查到下班都没有知道原因，没有异常信息，还是太菜了；今天灵光一闪，这肯定在调用成功后触发了什么异常，导致走了回调方法，带着这个思路，现在主要做的是让错误日志出来</p><h2 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h2><p>首先先将feign回调实现类改成实现FallbackFactory接口，这样子才可以看到相关异常<br><strong>改动：</strong><br>①feign接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"isrm-attachment"</span><span class="token punctuation">,</span> fallbackFactory<span class="token operator">=</span> <span class="token class-name">OssBusinessRemoteServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">OssBusinessRemoteService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/ossBusiness/listByBusinessIds"</span><span class="token punctuation">)</span>    <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>②feign回调类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessRemoteServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">FallbackFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessRemoteService</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">OssBusinessRemoteService</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 打印错误日志</span>        throwable<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OssBusinessRemoteService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新启动服务调式，发现报错信息：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>DecodeException</span><span class="token operator">:</span> <span class="token class-name">Error</span> <span class="token keyword">while</span> extracting response <span class="token keyword">for</span> type <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span> and content type <span class="token punctuation">[</span>application<span class="token operator">/</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">187</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">executeAndDecode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">147</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>sentinel<span class="token punctuation">.</span>feign<span class="token punctuation">.</span></span>SentinelInvocationHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SentinelInvocationHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>$<span class="token class-name">Proxy188</span><span class="token punctuation">.</span><span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>BaseRemoteServiceImpl</span><span class="token punctuation">.</span><span class="token function">ossBusinessFileToMap</span><span class="token punctuation">(</span><span class="token class-name">BaseRemoteServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">157</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>ReportServiceImpl</span><span class="token punctuation">.</span><span class="token function">getDeliveryTrackingReportList</span><span class="token punctuation">(</span><span class="token class-name">ReportServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">225</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>ReportController</span><span class="token punctuation">.</span><span class="token function">getDeliveryTrackingReportList</span><span class="token punctuation">(</span><span class="token class-name">ReportController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">176</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Method</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">498</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">doInvoke</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">190</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeForRequest</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">138</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletInvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span><span class="token class-name">ServletInvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">105</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">879</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">handleInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">793</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span>AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">87</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doDispatch</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1040</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doService</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">943</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1006</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">909</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">660</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">883</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">741</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">231</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span>WsFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">WsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">53</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>base<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>LogFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">LogFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">32</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>RequestContextFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestContextFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>FormContentFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">FormContentFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">93</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>metrics<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>WebMvcMetricsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">WebMvcMetricsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CharacterEncodingFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CharacterEncodingFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">201</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CorsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CorsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardWrapperValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardWrapperValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">202</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">96</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">41002</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>authenticator<span class="token punctuation">.</span></span>AuthenticatorBase</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">AuthenticatorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">541</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardHostValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardHostValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">139</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>valves<span class="token punctuation">.</span></span>ErrorReportValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">ErrorReportValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardEngineValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardEngineValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">74</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span>CoyoteAdapter</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">CoyoteAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">343</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span></span>Http11Processor</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">Http11Processor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">373</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProcessorLight</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProcessorLight</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">65</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProtocol</span>$<span class="token class-name">ConnectionHandler</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProtocol</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">868</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>NioEndpoint</span>$<span class="token class-name">SocketProcessor</span><span class="token punctuation">.</span><span class="token function">doRun</span><span class="token punctuation">(</span><span class="token class-name">NioEndpoint</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1590</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>SocketProcessorBase</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SocketProcessorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">49</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1149</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">624</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span></span>TaskThread</span>$<span class="token class-name">WrappingRunnable</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">TaskThread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">61</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">750</span><span class="token punctuation">)</span><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>RestClientException</span><span class="token operator">:</span> <span class="token class-name">Error</span> <span class="token keyword">while</span> extracting response <span class="token keyword">for</span> type <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span> and content type <span class="token punctuation">[</span>application<span class="token operator">/</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>HttpMessageConverterExtractor</span><span class="token punctuation">.</span><span class="token function">extractData</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageConverterExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>SpringDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SpringDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>ResponseEntityDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntityDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>optionals<span class="token punctuation">.</span></span>OptionalDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">OptionalDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">36</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">183</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">69</span> more<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">readJavaType</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">245</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">227</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>HttpMessageConverterExtractor</span><span class="token punctuation">.</span><span class="token function">extractData</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageConverterExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">73</span> more<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name">InvalidFormatException</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">67</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>DeserializationContext</span><span class="token punctuation">.</span><span class="token function">weirdStringException</span><span class="token punctuation">(</span><span class="token class-name">DeserializationContext</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1679</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>DeserializationContext</span><span class="token punctuation">.</span><span class="token function">handleWeirdStringValue</span><span class="token punctuation">(</span><span class="token class-name">DeserializationContext</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">935</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>StdDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">StdDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">550</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>StdDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">StdDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">491</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateBasedDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">195</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">285</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">268</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MethodProperty</span><span class="token punctuation">.</span><span class="token function">deserializeAndSet</span><span class="token punctuation">(</span><span class="token class-name">MethodProperty</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserializeFromObject</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">369</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">159</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">286</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">245</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">27</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MethodProperty</span><span class="token punctuation">.</span><span class="token function">deserializeAndSet</span><span class="token punctuation">(</span><span class="token class-name">MethodProperty</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserializeFromObject</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">369</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">159</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>ObjectMapper</span><span class="token punctuation">.</span><span class="token function">_readMapAndClose</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">4218</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>ObjectMapper</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3267</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">readJavaType</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">239</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">75</span> more<span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>DecodeException</span><span class="token operator">:</span> <span class="token class-name">Error</span> <span class="token keyword">while</span> extracting response <span class="token keyword">for</span> type <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span> and content type <span class="token punctuation">[</span>application<span class="token operator">/</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">187</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">executeAndDecode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">147</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>sentinel<span class="token punctuation">.</span>feign<span class="token punctuation">.</span></span>SentinelInvocationHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SentinelInvocationHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>$<span class="token class-name">Proxy188</span><span class="token punctuation">.</span><span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>BaseRemoteServiceImpl</span><span class="token punctuation">.</span><span class="token function">ossBusinessFileToMap</span><span class="token punctuation">(</span><span class="token class-name">BaseRemoteServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">157</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>ReportServiceImpl</span><span class="token punctuation">.</span><span class="token function">getDeliveryTrackingReportList</span><span class="token punctuation">(</span><span class="token class-name">ReportServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">225</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>ReportController</span><span class="token punctuation">.</span><span class="token function">getDeliveryTrackingReportList</span><span class="token punctuation">(</span><span class="token class-name">ReportController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">176</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Method</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">498</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">doInvoke</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">190</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeForRequest</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">138</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletInvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span><span class="token class-name">ServletInvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">105</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">879</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">handleInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">793</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span>AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">87</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doDispatch</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1040</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doService</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">943</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1006</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">909</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">660</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">883</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">741</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">231</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span>WsFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">WsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">53</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>base<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>LogFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">LogFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">32</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>RequestContextFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestContextFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>FormContentFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">FormContentFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">93</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>metrics<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>WebMvcMetricsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">WebMvcMetricsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CharacterEncodingFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CharacterEncodingFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">201</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CorsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CorsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardWrapperValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardWrapperValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">202</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">96</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">41002</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>authenticator<span class="token punctuation">.</span></span>AuthenticatorBase</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">AuthenticatorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">541</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardHostValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardHostValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">139</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>valves<span class="token punctuation">.</span></span>ErrorReportValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">ErrorReportValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardEngineValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardEngineValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">74</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span>CoyoteAdapter</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">CoyoteAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">343</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span></span>Http11Processor</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">Http11Processor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">373</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProcessorLight</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProcessorLight</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">65</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProtocol</span>$<span class="token class-name">ConnectionHandler</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProtocol</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">868</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>NioEndpoint</span>$<span class="token class-name">SocketProcessor</span><span class="token punctuation">.</span><span class="token function">doRun</span><span class="token punctuation">(</span><span class="token class-name">NioEndpoint</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1590</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>SocketProcessorBase</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SocketProcessorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">49</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1149</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">624</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span></span>TaskThread</span>$<span class="token class-name">WrappingRunnable</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">TaskThread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">61</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">750</span><span class="token punctuation">)</span><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>RestClientException</span><span class="token operator">:</span> <span class="token class-name">Error</span> <span class="token keyword">while</span> extracting response <span class="token keyword">for</span> type <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span> and content type <span class="token punctuation">[</span>application<span class="token operator">/</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>HttpMessageConverterExtractor</span><span class="token punctuation">.</span><span class="token function">extractData</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageConverterExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>SpringDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SpringDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>ResponseEntityDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntityDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>optionals<span class="token punctuation">.</span></span>OptionalDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">OptionalDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">36</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">183</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">69</span> more<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">readJavaType</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">245</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">227</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>HttpMessageConverterExtractor</span><span class="token punctuation">.</span><span class="token function">extractData</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageConverterExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">73</span> more<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name">InvalidFormatException</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">67</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>DeserializationContext</span><span class="token punctuation">.</span><span class="token function">weirdStringException</span><span class="token punctuation">(</span><span class="token class-name">DeserializationContext</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1679</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>DeserializationContext</span><span class="token punctuation">.</span><span class="token function">handleWeirdStringValue</span><span class="token punctuation">(</span><span class="token class-name">DeserializationContext</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">935</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>StdDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">StdDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">550</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>StdDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">StdDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">491</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateBasedDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">195</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">285</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">268</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MethodProperty</span><span class="token punctuation">.</span><span class="token function">deserializeAndSet</span><span class="token punctuation">(</span><span class="token class-name">MethodProperty</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserializeFromObject</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">369</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">159</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">286</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">245</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">27</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MethodProperty</span><span class="token punctuation">.</span><span class="token function">deserializeAndSet</span><span class="token punctuation">(</span><span class="token class-name">MethodProperty</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserializeFromObject</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">369</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">159</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>ObjectMapper</span><span class="token punctuation">.</span><span class="token function">_readMapAndClose</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">4218</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>ObjectMapper</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3267</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">readJavaType</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">239</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">75</span> more<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解决方法：</strong></p><p>日志说的很明白，就是日期格式的数据在接收的时候转换出错了，所以我在服务端将日期转成字符串再传输就好了</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"oss_business_file"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessFile</span> <span class="token punctuation">{</span>    <span class="token comment">/**主键ID */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>    <span class="token comment">/**业务id */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> businessId<span class="token punctuation">;</span>    <span class="token comment">/**文件底表id */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> ossFileId<span class="token punctuation">;</span>    <span class="token comment">/**     * 创建时间     */</span>    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">,</span> timezone <span class="token operator">=</span> <span class="token string">"GMT+8"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> createDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 创建人     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> creator<span class="token punctuation">;</span>    <span class="token comment">/**     * 修改时间     */</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> updateDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 修改人     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> modifier<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> springcloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springcloud </tag>
            
            <tag> bug排查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装RocketMQ</title>
      <link href="/2023/11/12/linux-an-zhuang-rocketmq/"/>
      <url>/2023/11/12/linux-an-zhuang-rocketmq/</url>
      
        <content type="html"><![CDATA[<h2 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h2><h3 id="1-下载rocketmq"><a href="#1-下载rocketmq" class="headerlink" title="1.下载rocketmq"></a>1.下载rocketmq</h3><p><strong>链接：<a href="https://rocketmq.apache.org/download">https://rocketmq.apache.org/download</a></strong></p><p><img src="https://pic.imgdb.cn/item/65561931c458853aef3bb0d1.png"></p><h3 id="2-下载dashboard控制台"><a href="#2-下载dashboard控制台" class="headerlink" title="2.下载dashboard控制台"></a>2.下载dashboard控制台</h3><p><img src="https://pic.imgdb.cn/item/65561931c458853aef3bb225.png"></p><h2 id="二、打包dashboard控制台"><a href="#二、打包dashboard控制台" class="headerlink" title="二、打包dashboard控制台"></a>二、打包dashboard控制台</h2><h3 id="1-解压控制台压缩包"><a href="#1-解压控制台压缩包" class="headerlink" title="1.解压控制台压缩包"></a>1.解压控制台压缩包</h3><p><img src="https://pic.imgdb.cn/item/65561931c458853aef3bb2e7.png"></p><h3 id="2-IDEA打开解压后的文件夹"><a href="#2-IDEA打开解压后的文件夹" class="headerlink" title="2.IDEA打开解压后的文件夹"></a>2.IDEA打开解压后的文件夹</h3><p>也可以直接在根目录执行<strong>mvn clean package -Dmaven.test.skip=true</strong>来打包，不需要idea打包</p><h4 id="1）修改配置文件"><a href="#1）修改配置文件" class="headerlink" title="1）修改配置文件"></a>1）修改配置文件</h4><p>端口填你想要的（不冲突），nameserver地址为你要部署nameserver服务器的地址</p><p><img src="https://pic.imgdb.cn/item/65561930c458853aef3bae14.png"></p><h4 id="2）点击reload加载项目依赖，然后点击package打包"><a href="#2）点击reload加载项目依赖，然后点击package打包" class="headerlink" title="2）点击reload加载项目依赖，然后点击package打包"></a>2）点击reload加载项目依赖，然后点击package打包</h4><p>最终会生成一个jar包</p><p><img src="https://pic.imgdb.cn/item/65561931c458853aef3bafa2.png"></p><h2 id="三、安装"><a href="#三、安装" class="headerlink" title="三、安装"></a>三、安装</h2><h3 id="1-创建文件夹"><a href="#1-创建文件夹" class="headerlink" title="1.创建文件夹"></a>1.创建文件夹</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/src/rocketmq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-上传文件到Linux并解压"><a href="#2-上传文件到Linux并解压" class="headerlink" title="2.上传文件到Linux并解压"></a>2.上传文件到Linux并解压</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq<span class="token comment"># 解压</span><span class="token function">unzip</span> rocketmq-all-4.9.5-bin-release.zip<span class="token comment"># 重命名</span><span class="token function">mv</span> rocketmq-all-4.9.5-bin-release rocketmq-4.9.5<span class="token comment"># 创建文件夹存放日志</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/src/rocketmq/rocketmq-4.9.5/logs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556193bc458853aef3bde0b.png"></p><h3 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3.配置环境变量"></a>3.配置环境变量</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/profile在文件末尾添加<span class="token punctuation">(</span>服务器ip<span class="token punctuation">)</span>，然后保存退出<span class="token builtin class-name">export</span> <span class="token assign-left variable">NAMESRV_ADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.157.30:9876<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556193bc458853aef3bded0.png"></p><h3 id="4-修改配置文件"><a href="#4-修改配置文件" class="headerlink" title="4.修改配置文件"></a>4.修改配置文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">free</span> -m查看当前内存使用情况<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556193bc458853aef3be0bf.png"></p><p>由于我电脑只有8g内存，分配了2g给虚拟机，现在可用内存为1g，所以需要将broker和nameserver的堆内存调小，可根据自己服务器可用内存调节大小</p><h4 id="1）修改nameserver堆内存"><a href="#1）修改nameserver堆内存" class="headerlink" title="1）修改nameserver堆内存"></a>1）修改nameserver堆内存</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq/rocketmq-4.9.5/bin/<span class="token function">vim</span> runserver.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556194ec458853aef3c3b71.png"></p><h4 id="2）修改brocker堆内存"><a href="#2）修改brocker堆内存" class="headerlink" title="2）修改brocker堆内存"></a>2）修改brocker堆内存</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq/rocketmq-4.9.5/bin/<span class="token function">vim</span> runbroker.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556194fc458853aef3c4020.png"></p><h4 id="3）修改broker配置文件"><a href="#3）修改broker配置文件" class="headerlink" title="3）修改broker配置文件"></a>3）修改broker配置文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq/rocketmq-4.9.5/conf/<span class="token function">vim</span> broker.conf<span class="token comment"># 添加以下配置后保存</span><span class="token assign-left variable">namesrvAddr</span><span class="token operator">=</span>nameServer服务器IP:9876<span class="token assign-left variable">autoCreateTopicEnable</span><span class="token operator">=</span>true<span class="token assign-left variable">brokerIP1</span><span class="token operator">=</span>broker服务器公网IP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556194fc458853aef3c3e0e.png"></p><p><strong>添加参数解释</strong><br><strong>namesrvAddr：</strong>nameSrv地址 可以写localhost因为nameSrv和broker在一个服务器<br><strong>autoCreateTopicEnable：</strong>自动创建主题，不然需要手动创建出来<br><strong>brokerIP1：</strong>broker也需要一个公网ip，如果不指定，那么是服务器的内网地址，我们再本地无法连接使用</p><h3 id="5-启动nameserver和broker"><a href="#5-启动nameserver和broker" class="headerlink" title="5.启动nameserver和broker"></a>5.启动nameserver和broker</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq/rocketmq-4.9.5/<span class="token comment"># 后台启动nameserver</span><span class="token function">nohup</span> <span class="token function">sh</span> bin/mqnamesrv <span class="token operator">&gt;</span> ./logs/namesrv.log <span class="token operator">&amp;</span><span class="token comment"># 后台启动broker 这里的-c是指定使用的配置文件</span><span class="token function">nohup</span> <span class="token function">sh</span> bin/mqbroker <span class="token parameter variable">-c</span> conf/broker.conf <span class="token operator">&gt;</span> ./logs/broker.log <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看启动情况</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jps <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/65561954c458853aef3c59dc.png"></p><h3 id="6-启动dashboard控制台"><a href="#6-启动dashboard控制台" class="headerlink" title="6.启动dashboard控制台"></a>6.启动dashboard控制台</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq<span class="token comment"># 后台启动dashboard</span><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> ./rocketmq-dashboard-1.0.0.jar <span class="token assign-left variable">rocketmq.config.namesrvAddr</span><span class="token operator">=</span><span class="token number">127.0</span>.0.1:9876 <span class="token operator">&gt;</span> ./rocketmq-4.9.5/logs/dashboard.log <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>查看启动情况和内存使用情况</strong></p><p><img src="https://pic.imgdb.cn/item/65561954c458853aef3c5a89.png"></p><h3 id="7-测试"><a href="#7-测试" class="headerlink" title="7.测试"></a>7.测试</h3><p>浏览器访问<a href="http://192.168.157.30:8001，出现如下界面即成功">http://192.168.157.30:8001，出现如下界面即成功</a></p><p><img src="https://pic.imgdb.cn/item/65561954c458853aef3c5bb1.png"></p><p>要是访问不了，请检查防火墙是否开启，如果开启了要开放端口或者直接关闭防火墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看防火墙状态</span>firewall-cmd <span class="token parameter variable">--state</span><span class="token comment"># 关闭防火墙</span>systemctl stop firewalld<span class="token comment"># 开放端口</span>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">8001</span>/tcp <span class="token parameter variable">--permanent</span><span class="token comment"># 重启防火墙</span>firewall-cmd <span class="token parameter variable">--reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
