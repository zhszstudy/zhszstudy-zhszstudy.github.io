<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/10/hello-world/"/>
      <url>/2024/06/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux防火墙常用命令</title>
      <link href="/2024/02/25/linux-fang-huo-qiang-chang-yong-ming-ling/"/>
      <url>/2024/02/25/linux-fang-huo-qiang-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>查看防火墙服务状态</td><td>systemctl status firewalld</td></tr><tr><td>查看防火墙状态</td><td>firewall-cmd –state</td></tr><tr><td>开启防火墙</td><td>service firewalld start</td></tr><tr><td>重启防火墙</td><td>service firewalld restart</td></tr><tr><td>关闭防火墙</td><td>service firewalld stop</td></tr><tr><td>查看防火墙规则</td><td>firewall-cmd –list-all</td></tr><tr><td>查看端口是否开放</td><td>firewall-cmd –query-port=8080/tcp</td></tr><tr><td>开放80端口</td><td>firewall-cmd –permanent –add-port=80/tcp</td></tr><tr><td>移除端口</td><td>firewall-cmd –permanent –remove-port=8080/tcp</td></tr><tr><td>重启防火墙(修改配置后要重启防火墙)</td><td>firewall-cmd –reload</td></tr><tr><td>查看启用端口</td><td>ss -anlt、firewall-cmd –zone=public –list-ports</td></tr><tr><td>查看端口占用情况</td><td>lsof -i :端口号</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven打包提示报错Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.2:test</title>
      <link href="/2024/02/25/maven-da-bao-ti-shi-bao-cuo/"/>
      <url>/2024/02/25/maven-da-bao-ti-shi-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>在pom文件下加上如下配置：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.22.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skipTests</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skipTests</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整pom文件：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>isrm-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.zhou.isrm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>isrm-test-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.zhou.isrm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>isrm-test-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>isrm-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.22.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skipTests</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skipTests</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!--   spring boot maven 打包插件  --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addResources</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addResources</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug排查 </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot单元测试方式</title>
      <link href="/2024/02/25/springboot-dan-yuan-ce-shi-fang-shi/"/>
      <url>/2024/02/25/springboot-dan-yuan-ce-shi-fang-shi/</url>
      
        <content type="html"><![CDATA[<h4 id="1）使用Junit5，且测试类和启动类包名一样"><a href="#1）使用Junit5，且测试类和启动类包名一样" class="headerlink" title="1）使用Junit5，且测试类和启动类包名一样"></a>1）使用Junit5，且测试类和启动类包名一样</h4><p><img src="https://pic.imgdb.cn/item/65dadeb39f345e8d0321e392.png" alt="在这里插入图片描述"></p><p>①引入Test注解：import org.junit.jupiter.api.Test;</p><h4 id="2）使用Junit4，且测试类和启动类包名一样"><a href="#2）使用Junit4，且测试类和启动类包名一样" class="headerlink" title="2）使用Junit4，且测试类和启动类包名一样"></a>2）使用Junit4，且测试类和启动类包名一样</h4><p><img src="https://pic.imgdb.cn/item/65dadeb39f345e8d0321e310.png" alt="在这里插入图片描述"></p><p>①引入Test注解：import org.junit.Test;<br>②方法前面需要加public修饰<br>③引入@RunWith(SpringRunner.class)注解</p><h4 id="3）使用Junit5，且测试类和启动类包名不一样"><a href="#3）使用Junit5，且测试类和启动类包名不一样" class="headerlink" title="3）使用Junit5，且测试类和启动类包名不一样"></a>3）使用Junit5，且测试类和启动类包名不一样</h4><p><img src="https://pic.imgdb.cn/item/65dadeb29f345e8d0321e29a.png" alt="在这里插入图片描述"></p><p>①引入Test注解：import org.junit.jupiter.api.Test;<br>②SpringBootTest注解指定启动类</p><h4 id="4）使用Junit4，且测试类和启动类包名不一样"><a href="#4）使用Junit4，且测试类和启动类包名不一样" class="headerlink" title="4）使用Junit4，且测试类和启动类包名不一样"></a>4）使用Junit4，且测试类和启动类包名不一样</h4><p>①引入Test注解：import org.junit.Test;<br>②方法前面需要加public修饰<br>③引入@RunWith(SpringRunner.class)注解<br>④SpringBootTest注解指定启动类</p>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> 单元测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring自动装配方式</title>
      <link href="/2024/02/25/spring-zi-dong-zhuang-pei-fang-shi/"/>
      <url>/2024/02/25/spring-zi-dong-zhuang-pei-fang-shi/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_48922154/article/details/113783458">参考链接</a></p><h4 id="1-AutoWired注解"><a href="#1-AutoWired注解" class="headerlink" title="1. @AutoWired注解"></a>1. @AutoWired注解</h4><p>自动注入【Spring定义的】：可以标注在构造器，参数，方法，属性 </p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1</span>）、默认优先按照类型去容器中找对应的组件<span class="token operator">:</span>applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">BookDao</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>找到就赋值<span class="token number">2</span>）、如果找到多个相同类型的组件，再将属性的名称作为组件的id去容器中查找               applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"bookDao"</span><span class="token punctuation">)</span><span class="token number">3</span>）、<span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"bookDao"</span><span class="token punctuation">)</span>：使用<span class="token annotation punctuation">@Qualifier</span>指定需要装配的组件的id，而不是使用属性名<span class="token number">4</span>）、自动装配默认一定要将属性赋值好，没有就会报错；   可以使用<span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>required<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">5</span>）、<span class="token annotation punctuation">@Primary</span>：让<span class="token class-name">Spring</span>进行自动装配的时候，默认使用首选的bean；      也可以继续使用<span class="token annotation punctuation">@Qualifier</span>指定需要装配的bean的名字<span class="token number">6</span>）、<span class="token annotation punctuation">@Autowired</span>标注的位置<span class="token operator">:</span>构造器，参数，方法，属性；都是从容器中获取参数组件的值    <span class="token number">1</span>）、<span class="token punctuation">[</span>标注在方法位置<span class="token punctuation">]</span>：<span class="token annotation punctuation">@Bean</span><span class="token operator">+</span>方法参数；参数从容器中获取<span class="token punctuation">;</span>默认不写<span class="token annotation punctuation">@Autowired</span>效果是一样的；都能自动装配    <span class="token number">2</span>）、<span class="token punctuation">[</span>标在构造器上<span class="token punctuation">]</span>：如果组件只有一个有参构造器，这个有参构造器的<span class="token annotation punctuation">@Autowired</span>可以省略，参数位置的组件还是可以自动从容器中获取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-Resourece注解"><a href="#2-Resourece注解" class="headerlink" title="2.@Resourece注解"></a>2.@Resourece注解</h4><p>Spring还支持使用@Resource（JSR250）和@Inject（JSR330）【java规范】，@Resource不支持@Primary功能和required=false功能，@Inject支持@Primary功能，但是没有required属性，不支持required=false功能。</p><h4 id="3-注入底层组件"><a href="#3-注入底层组件" class="headerlink" title="3.注入底层组件"></a>3.注入底层组件</h4><p> 自定义组件想要使用Spring容器底层的一些组件（ApplicationContext，BeanFactory，xxx）自定义组件需要实现xxxAware接口；在创建对象的时候会调用接口规定的方法注入相关组件，把Spring底层的一些组件注入到自定义的bean中，xxxAware的功能都是使用xxxAwareProcessor处理的，判断实现了哪个Aware接口然后将bean转化为该类型调用set方法，将容器底层组件注入。 </p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token annotation punctuation">@Nullable</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token class-name">AccessControlContext</span> acc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">EnvironmentAware</span> <span class="token operator">||</span> bean <span class="token keyword">instanceof</span> <span class="token class-name">EmbeddedValueResolverAware</span> <span class="token operator">||</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">ResourceLoaderAware</span> <span class="token operator">||</span> bean <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationEventPublisherAware</span> <span class="token operator">||</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">MessageSourceAware</span> <span class="token operator">||</span> bean <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>acc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">.</span><span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>acc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token function">invokeAwareInterfaces</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> acc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token function">invokeAwareInterfaces</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">invokeAwareInterfaces</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">Aware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">EnvironmentAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">EnvironmentAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setEnvironment</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">EmbeddedValueResolverAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">EmbeddedValueResolverAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setEmbeddedValueResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">ResourceLoaderAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ResourceLoaderAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setResourceLoader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationEventPublisherAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEventPublisherAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setApplicationEventPublisher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">MessageSourceAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MessageSourceAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMessageSource</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContextAware</span><span class="token punctuation">)</span> bean<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-Profile注解"><a href="#4-Profile注解" class="headerlink" title="4.@Profile注解"></a>4.@Profile注解</h4><p><strong>@Profile注解为我们提供的可以根据当前环境，动态的激活和切换一系列组件的功能</strong><br>（1）加了环境标识的bean，只有这个环境被激活的时候才能注册到容器中，默认是default环境。<br>（2）写在配置类上，只有是指定的环境的时候，整个配置类里面的所有配置才能生效<br>（3）没有标注环境标识的bean在任何环境下都加载<br><strong>运行时如何制定环境：</strong><br>（1）命令行参数，通过在虚拟机参数位置指定-Dspring.profiles.active=xxx来指定运行环境，标注了该环境的bean会被配置进容器中<br>（2）程序内指定：创建一个applicationContext ——》设置需要激活的环境，applicationContext.getEnvironment().setActiveProfiles(“”) ——》注册主配置类，applicationContext.register(xxx.class) ——》启动刷新容器，applicationContext.refresh();</p><h4 id="5-AllArgsConstructor注解"><a href="#5-AllArgsConstructor注解" class="headerlink" title="5.@AllArgsConstructor注解"></a>5.@AllArgsConstructor注解</h4><p><strong>@AllArgsConstructor注解也可以注入对应的bean</strong></p><p>Springboot官方建议使用final来修饰成员变最，然后通过构造方法来进行注入原因:final修饰的成员变量是不能够被修改的，反射那就没办法了<br><img src="https://pic.imgdb.cn/item/65dae1339f345e8d032827fd.png" alt="在这里插入图片描述"><br>和下面代码一样：<br><img src="https://pic.imgdb.cn/item/65dae1339f345e8d03282821.png" alt="在这里插入图片描述"></p><h4 id="6-RequiredArgsConstructor注解"><a href="#6-RequiredArgsConstructor注解" class="headerlink" title="6.@RequiredArgsConstructor注解"></a>6.@RequiredArgsConstructor注解</h4><p>@RequiredArgsConstructor写在类上面可以替换@Autowired注解，需要注意的是在注入时需要使用final定义，或者使用@Notnull注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@RestController</span><span class="token comment">//生成一个包含过所有字段的构造方法</span><span class="token comment">//@AllArgsConstructor</span><span class="token comment">//会将类的每一个final字段或者non-null字段生成一个构造方法 </span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminUserController</span> <span class="token punctuation">{</span>    <span class="token comment">/* autowired没什么问题，但是有可能报错，iUserService为null，spring也不建议使用autowired */</span>    <span class="token comment">//@Autowired</span>    <span class="token comment">//private IUserService iUserService;    </span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IUserService</span> iUserService<span class="token punctuation">;</span>        <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">adminLogin</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//....</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SneakyThrows注解</title>
      <link href="/2024/02/25/sneakythrows-zhu-jie/"/>
      <url>/2024/02/25/sneakythrows-zhu-jie/</url>
      
        <content type="html"><![CDATA[<p>@SneakyThrows直接把捕获异常的代码嵌入到了class文件里。<br>也就是说，并不是我们忽略了异常，而是类似于Lombok的@Data注解，在编译时就已经把处理的代码嵌入到了class内。</p><p><strong>用法：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SneakyThrows</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Class</span> clz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.woshild.derek_ld.lombok.SneakyThrowsTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3秒已过。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>编译生成的class文件：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token class-name">Class</span> clz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.woshild.derek_ld.lombok.SneakyThrowsTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>clz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3秒已过。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lombok </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Builder注解</title>
      <link href="/2024/02/25/builder-zhu-jie/"/>
      <url>/2024/02/25/builder-zhu-jie/</url>
      
        <content type="html"><![CDATA[<p> ● 它作用于类，将其变成建造者模式<br>● 可以以链的形式调用<br>● 初始化实例对象生成的对象是不可以变的，可以在创建对象的时候进行赋值<br>● 如果需要在原来的基础上修改可以加 set 方法，final 字段可以不需要初始化<br>● 它会生成一个全参的构造函数</p><p><strong>实战：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Builder</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>编译后：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>        <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">User<span class="token punctuation">.</span>UserBuilder</span> <span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User<span class="token punctuation">.</span>UserBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UserBuilder</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>                <span class="token class-name">UserBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token class-name">User<span class="token punctuation">.</span>UserBuilder</span> <span class="token function">username</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>                <span class="token keyword">public</span> <span class="token class-name">User<span class="token punctuation">.</span>UserBuilder</span> <span class="token function">password</span><span class="token punctuation">(</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>                <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"User.UserBuilder(username="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">", password="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lombok </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RestTemplate参数设置【post请求】</title>
      <link href="/2024/02/25/resttemplate-can-shu-she-zhi-post-qing-qiu/"/>
      <url>/2024/02/25/resttemplate-can-shu-she-zhi-post-qing-qiu/</url>
      
        <content type="html"><![CDATA[<p>①post请求，contentType:application/json(使用了@RequestBody接收参数)<br>使用HashMap设置参数，然后转json字符串发起请求</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://localhost:8080/admin/login"</span><span class="token punctuation">;</span><span class="token comment">// 请求头</span><span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> formEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> formEntity<span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>②post请求，contentType:application/x-www-form-urlencoded<br>使用LinkedMultiValueMap设置参数，然后发起请求</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://localhost:8080/admin/login"</span><span class="token punctuation">;</span><span class="token comment">// 请求头</span><span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_FORM_URLENCODED</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiValueMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> formEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> formEntity<span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>jsonObject <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unirest工具类的使用</title>
      <link href="/2024/02/25/unirest-gong-ju-lei-de-shi-yong/"/>
      <url>/2024/02/25/unirest-gong-ju-lei-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><strong>官方文档：</strong>  <a href="http://kong.github.io/unirest-java/">http://kong.github.io/unirest-java/</a><br><strong>引入依赖：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token class-name">Pull</span> in as a traditional dependency <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>konghq<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>unirest<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.14</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token constant">OR</span> as a snazzy <span class="token keyword">new</span> standalone jar <span class="token keyword">with</span> <span class="token namespace">shaded</span> dependencies <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>konghq<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>unirest<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.14</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>classifier<span class="token punctuation">&gt;</span></span>standalone<span class="token operator">&lt;</span><span class="token operator">/</span>classifier<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用法示例：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">kong<span class="token punctuation">.</span>unirest<span class="token punctuation">.</span></span><span class="token class-name">Unirest</span></span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">UniRestTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        res <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://172.25.xx.xx:12345/dolphinscheduler/login"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> <span class="token string">"admin"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"userPassword"</span><span class="token punctuation">,</span> <span class="token string">"dolphinscheduler123"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token string">"login res:%s"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>        res <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://172.25.xx.xx:12345/dolphinscheduler/log/detail"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">,</span> <span class="token string">"ca3e91749eee187fa9a797d92cf5cb6d"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">queryString</span><span class="token punctuation">(</span><span class="token string">"taskInstanceId"</span><span class="token punctuation">,</span> <span class="token string">"703"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">queryString</span><span class="token punctuation">(</span><span class="token string">"skipLineNum"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">queryString</span><span class="token punctuation">(</span><span class="token string">"limit"</span><span class="token punctuation">,</span> <span class="token string">"1000"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token string">"log detail res:%s"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token class-name">String</span> template<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 第三方工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile和jar包不同目录处理</title>
      <link href="/2024/02/21/dockerfile-he-jar-bao-bu-tong-mu-lu-chu-li/"/>
      <url>/2024/02/21/dockerfile-he-jar-bao-bu-tong-mu-lu-chu-li/</url>
      
        <content type="html"><![CDATA[<p>如果Dockerfile的全路径为**/srm/myDockerfile/Dockerfile**，而JAR文件位于/srm目录下，你可以在Dockerfile中使用相对路径引用JAR文件。以下是如何编写Dockerfile的示例：<br>假设你的项目结构如下：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">luaCopy code<span class="token operator">/</span>srm<span class="token punctuation">|</span><span class="token operator">--</span> myDockerfile<span class="token punctuation">|</span><span class="token operator">--</span> your-app<span class="token punctuation">.</span>jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Dockerfile的路径是**/srm/myDockerfile/Dockerfile**，如下：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">DockerfileCopy code<span class="token comment"># 使用官方的 OpenJDK 11 基础镜像</span><span class="token keyword">FROM</span> openjdk:11<span class="token comment"># 设置工作目录，Dockerfile所在的目录是/srm/myDockerfile</span>WORKDIR <span class="token operator">/</span>srm/myDockerfile<span class="token comment"># 复制 JAR 文件到容器中的工作目录，通过相对路径引用JAR文件</span><span class="token function">COPY</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>your-app<span class="token punctuation">.</span>jar <span class="token punctuation">.</span><span class="token comment"># 你可以添加其他需要的步骤，例如设置环境变量、端口等</span><span class="token comment"># 启动应用程序</span>CMD <span class="token punctuation">[</span><span class="token string">"java"</span><span class="token punctuation">,</span> <span class="token string">"-jar"</span><span class="token punctuation">,</span> <span class="token string">"your-app.jar"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个Dockerfile中，工作目录被设置为/srm/myDockerfile，即Dockerfile所在的目录。然后，使用<strong>COPY</strong>命令通过<strong>相对路径../../引用</strong>上级目录来复制JAR文件到容器内的工作目录。<br>接下来，你可以按照之前的步骤使用Docker构建镜像和运行容器：</p><ol><li>在宿主机的/srm目录中，打开终端。</li><li>使用以下命令构建Docker镜像（将镜像命名为<strong>my-app-image</strong>，可以根据需要进行更改）：</li></ol><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">bashCopy codedocker build <span class="token operator">-</span>t my-app-image <span class="token operator">-</span>f myDockerfile/Dockerfile <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol><li>使用以下命令运行容器：<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">bashCopy codedocker run <span class="token operator">-</span>p 8080:8080 my-app-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>这将在容器中启动你的Java应用程序，可以通过localhost:8080访问它。确保根据你的应用程序的实际需求修改Dockerfile和Docker运行命令。</li></ol>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose部署jar包</title>
      <link href="/2024/02/21/docker-compose-bu-shu-jar-bao/"/>
      <url>/2024/02/21/docker-compose-bu-shu-jar-bao/</url>
      
        <content type="html"><![CDATA[<h4 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h4><p>Docker Compose是一个用来定义和运行复杂应用的Docker工具<br>一个使用Docker容器的应用，通常由多个容器组成。使用Docker Compose不再需要使用shell脚本来启动容器</p><p>Compose 通过<strong>一个配置文件</strong>来管理<strong>多个</strong>Docker容器，在配置文件中，所有的容器通过<strong>services</strong>来定义，然后使用docker-compose脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。</p><h4 id="二、步骤："><a href="#二、步骤：" class="headerlink" title="二、步骤："></a>二、步骤：</h4><p><strong>①编写Dockerfile定义各个微服务应用并构建出对应的镜像文件</strong><br><strong>例如：</strong><br><img src="https://pic.imgdb.cn/item/65dae0649f345e8d03262aac.png" alt="在这里插入图片描述"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token keyword">FROM</span> openjdk:8<span class="token comment">#将jar包添加到容器中并更名为app.jar</span>ADD <span class="token operator">*</span><span class="token punctuation">.</span>jar app<span class="token punctuation">.</span>jar<span class="token comment">#运行jar包</span>ENTRYPOINT <span class="token punctuation">[</span><span class="token string">"java"</span><span class="token punctuation">,</span> <span class="token string">"-Xms128m"</span><span class="token punctuation">,</span> <span class="token string">"-Xmx128m"</span><span class="token punctuation">,</span> <span class="token string">"-Dspring.profiles.active=dev"</span><span class="token punctuation">,</span> <span class="token string">"-jar"</span><span class="token punctuation">,</span> <span class="token string">"/app.jar"</span><span class="token punctuation">]</span><span class="token comment">#暴露6001端口作为微服务</span>EXPOSE 19012<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>②使用 docker-compose.yml 定义一个完整的业务单元，安排好整体应用中的各个容器服务</strong><br><strong>方式一</strong><br>：此种写法需要提前构建好镜像，在/srm/app/sup目录下执行docker build -t isrm-sup .命令构建好镜像<img src="https://pic.imgdb.cn/item/65dae0649f345e8d03262a60.png" alt="在这里插入图片描述"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">version: <span class="token string">'3.0'</span>services:  supService:  <span class="token comment">#服务名：随便命名</span>    restart: always <span class="token comment">#docker服务重启时，容器也启动</span>    image: isrm-sup  <span class="token comment">#指定自定义构建好的镜像</span>    container_name: sup <span class="token comment">#生成的容器名称</span>    ports:      - <span class="token string">"19012:19012"</span> <span class="token comment"># 端口映射</span>    volumes:      - /srm/application/back/logs:/srm/application/back/logs <span class="token comment"># 目录挂载</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>方式二</strong>：此种写法不需要提前构建镜像，执行docker-compose up时会自动构建镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">version: <span class="token string">'3.0'</span>services:  supService:    restart: always    build: <span class="token comment">#构建自定义镜像</span>       context: ./sup/  <span class="token comment">#dockerfile文件所在目录</span>       dockerfile: Dockerfile  <span class="token comment">#dockerfile文件名称</span>    image: isrm-sup <span class="token comment">#生成的镜像名称</span>    container_name: sup <span class="token comment">#生成的容器名称</span>    ports:      - <span class="token string">"19012:19012"</span> <span class="token comment">#端口映射</span>    volumes:      - /srm/application/back/logs:/srm/application/back/logs  <span class="token comment">#目录挂载</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>③最后，执行 docker-compose up（docker-compose up -d：后台启动） 命令来启动并运行整个应用程序，完整一键部署</strong></p><h4 id="三、常用命令："><a href="#三、常用命令：" class="headerlink" title="三、常用命令："></a>三、常用命令：</h4><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>查看帮助</td><td>docker-compose -h</td></tr><tr><td>启动所有docker-compose服务</td><td>docker-compose up</td></tr><tr><td>停止并删除容器、网络、卷、镜像</td><td>docker-compose down</td></tr><tr><td>查看容器输出日志</td><td>docker-compose logs yml里面的服务id</td></tr><tr><td>检查配置</td><td>docker-compose config</td></tr><tr><td>检查配置，有问题才有输出</td><td>docker-compose config -q</td></tr><tr><td>重启服务</td><td>docker-compose restart</td></tr><tr><td>启动服务</td><td>docker-compose start</td></tr><tr><td>停止服务</td><td>docker-compose stop</td></tr><tr><td>进入容器实例内部</td><td>docker-compose exec yml里面的服务id</td></tr><tr><td>进入容器实例内部</td><td>docker-compose exec docker-compose.yml文件中写的服务id/bin/bash</td></tr><tr><td>展示当前docker-compose编排过的运行的所有容器</td><td>docker-compose ps</td></tr><tr><td>展示当前docker-compose编排过的容器进程</td><td>docker-compose top</td></tr><tr><td>删除镜像</td><td>docker-compose down –rmi all</td></tr><tr><td>启动所有docker-compose服务并后台运行</td><td>docker-compose up -d</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>el-table渲染踩坑</title>
      <link href="/2024/02/20/el-table-xuan-ran-cai-keng/"/>
      <url>/2024/02/20/el-table-xuan-ran-cai-keng/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>本人前端不是特别熟，今天在弄一个弹窗表格功能时，发现只要点开某一行数据的弹窗再关闭，再点击其他弹窗时，发现最大数量都会以第一次为准，不是以当前数据行的为准。</p><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p>①点开第三行弹窗显示，最大需求数量为5000<br><img src="https://pic.imgdb.cn/item/65dae0db9f345e8d032744f1.png" alt="在这里插入图片描述"><br>②接着点开第二行的数据，看着没啥问题<br><img src="https://pic.imgdb.cn/item/65dae0db9f345e8d032744a0.png" alt="在这里插入图片描述"><br>但是手动在30000后面再输多几个0会发现变成了5000，但是我弹框中的最大值还是30000，怎么就变成了5000呢<br><img src="https://pic.imgdb.cn/item/65dae0db9f345e8d0327456c.png" alt="在这里插入图片描述"></p><h2 id="弹窗部分代码："><a href="#弹窗部分代码：" class="headerlink" title="弹窗部分代码："></a>弹窗部分代码：</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"明细"</span> <span class="token operator">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"1200px"</span> append<span class="token operator">-</span><span class="token keyword">to</span><span class="token operator">-</span>body<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table ref<span class="token operator">=</span><span class="token string">"tableRef"</span> <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> fit highlight<span class="token operator">-</span>current<span class="token operator">-</span>row <span class="token operator">:</span>header<span class="token operator">-</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"headerCellStyle"</span> max<span class="token operator">-</span>height<span class="token operator">=</span><span class="token string">"350"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column          label<span class="token operator">=</span><span class="token string">"需求数量"</span>          prop<span class="token operator">=</span><span class="token string">"quantity"</span>          align<span class="token operator">=</span><span class="token string">"center"</span>          min<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"130px"</span>          <span class="token operator">:</span>render<span class="token operator">-</span>header<span class="token operator">=</span><span class="token string">"addRedStar"</span>          show<span class="token operator">-</span>overflow<span class="token operator">-</span>tooltip          fixed<span class="token operator">=</span><span class="token string">"left"</span>        <span class="token operator">&gt;</span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"{ row }"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input              v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"row.quantity"</span>              v<span class="token operator">-</span>only<span class="token operator">-</span>number<span class="token operator">=</span><span class="token string">"{ precision: 2, max: row.maxQuantity }"</span>              type<span class="token operator">=</span><span class="token string">"number"</span>              <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!isEdit"</span>              <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"{ 'negative-number-color': formInfo.orderMode === 'Z010' }"</span>            <span class="token operator">/</span><span class="token operator">&gt;</span>            <span class="token punctuation">{</span><span class="token punctuation">{</span> row<span class="token punctuation">.</span>maxQuantity <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">{</span> row<span class="token punctuation">.</span>quantity <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"dialogVisible = false"</span><span class="token operator">&gt;</span>取 消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"isEdit"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"saveList"</span><span class="token operator">&gt;</span>确 定<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h2><p>搞了一上午，可算在网上翻到了<a href="https://blog.csdn.net/weixin_33859231/article/details/91976530">解决方案</a>，需要在el-table中加一个唯一key来解决这个渲染问题，这个key是vue自带属性,主要用在 Vue 的虚拟 DOM比对算法中，在新旧nodes对比时辨识 VNodes。如果不更新这个key的话,显示隐藏列的时候,部分DOM不会重新渲染；因此我将每一行的行号作为key解决了这个问题！</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog title<span class="token operator">=</span><span class="token string">"明细"</span> <span class="token operator">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">"dialogVisible"</span> width<span class="token operator">=</span><span class="token string">"1200px"</span> append<span class="token operator">-</span><span class="token keyword">to</span><span class="token operator">-</span>body<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table ref<span class="token operator">=</span><span class="token string">"tableRef"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"currentRow.rowNo"</span> <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"tableData"</span> fit highlight<span class="token operator">-</span>current<span class="token operator">-</span>row <span class="token operator">:</span>header<span class="token operator">-</span>cell<span class="token operator">-</span>style<span class="token operator">=</span><span class="token string">"headerCellStyle"</span> max<span class="token operator">-</span>height<span class="token operator">=</span><span class="token string">"350"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column          label<span class="token operator">=</span><span class="token string">"需求数量"</span>          prop<span class="token operator">=</span><span class="token string">"quantity"</span>          align<span class="token operator">=</span><span class="token string">"center"</span>          min<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">"130px"</span>          <span class="token operator">:</span>render<span class="token operator">-</span>header<span class="token operator">=</span><span class="token string">"addRedStar"</span>          show<span class="token operator">-</span>overflow<span class="token operator">-</span>tooltip          fixed<span class="token operator">=</span><span class="token string">"left"</span>        <span class="token operator">&gt;</span>          <span class="token operator">&lt;</span>template #<span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"{ row }"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input              v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"row.quantity"</span>              v<span class="token operator">-</span>only<span class="token operator">-</span>number<span class="token operator">=</span><span class="token string">"{ precision: 2, max: row.maxQuantity }"</span>              type<span class="token operator">=</span><span class="token string">"number"</span>              <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"!isEdit"</span>              <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"{ 'negative-number-color': formInfo.orderMode === 'Z010' }"</span>            <span class="token operator">/</span><span class="token operator">&gt;</span>            <span class="token punctuation">{</span><span class="token punctuation">{</span> row<span class="token punctuation">.</span>maxQuantity <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">{</span> row<span class="token punctuation">.</span>quantity <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>span slot<span class="token operator">=</span><span class="token string">"footer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dialog-footer"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"dialogVisible = false"</span><span class="token operator">&gt;</span>取 消<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"isEdit"</span> type<span class="token operator">=</span><span class="token string">"primary"</span> <span class="token annotation punctuation">@click</span><span class="token operator">=</span><span class="token string">"saveList"</span><span class="token operator">&gt;</span>确 定<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> bug排查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO安装教程（Windows版）</title>
      <link href="/2024/02/20/minio-an-zhuang-jiao-cheng-windows-ban/"/>
      <url>/2024/02/20/minio-an-zhuang-jiao-cheng-windows-ban/</url>
      
        <content type="html"><![CDATA[<h4 id="前提：安装-Windows-版本-Docker"><a href="#前提：安装-Windows-版本-Docker" class="headerlink" title="前提：安装 Windows 版本 Docker"></a>前提：安装 Windows 版本 Docker</h4><p><strong>① 官网下载 Docker（选择Windows版本）</strong><br><a href="https://www.docker.com/">链接</a><br><em><strong>② 下载完成后，直接点击安装；安装完毕后，进去 Docker 客户端后，会提示下载 Linux 内核更新包，此时点击下载即可</strong></em><br><a href="https://learn.microsoft.com/zh-cn/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package">链接</a><br><strong>③ 更新完毕后，完成安装，此时便可以打开 windows 的命令符，进行 Docker 的使用</strong></p><h4 id="安装-MinIO-容器"><a href="#安装-MinIO-容器" class="headerlink" title="安装 MinIO 容器"></a>安装 MinIO 容器</h4><p><strong>① 创建挂载目录</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>minio/<span class="token keyword">data</span>mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>minio/conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>② 挂载目录、创建容器并运行</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">docker run <span class="token operator">--</span>name minio <span class="token operator">-</span>p 9000:9000 <span class="token operator">-</span>p 9090:9090 <span class="token operator">-</span>d <span class="token operator">--</span>restart=always <span class="token operator">-</span>e <span class="token string">"MINIO_ROOT_USER=minio"</span> <span class="token operator">-</span>e <span class="token string">"MINIO_ROOT_PASSWORD=minio123"</span> <span class="token operator">-</span>v C:<span class="token operator">/</span>Self/docker/minio/<span class="token keyword">data</span>:<span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">-</span>v C:<span class="token operator">/</span>Self/docker/minio/conf:<span class="token operator">/</span>root/<span class="token punctuation">.</span>minio minio/minio server <span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">--</span>console-address <span class="token string">':9090'</span> <span class="token operator">--</span>address <span class="token string">":9000"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>③ 测试</strong><br>访问地址：<a href="http://localhost:9090/login">http://localhost:9090/login</a></p>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> MinIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux的scp命令</title>
      <link href="/2024/02/20/linux-de-scp-ming-ling/"/>
      <url>/2024/02/20/linux-de-scp-ming-ling/</url>
      
        <content type="html"><![CDATA[<p>scp命令主要用于Linux服务器之间复制文件和目录</p><p><strong>1）本地复制文件到远程：</strong><br>①scp local_file remote_username@remote_ip:remote_folder<br>②scp local_file remote_username@remote_ip:remote_file<br>③scp local_file remote_ip:remote_folder<br>④scp local_file remote_ip:remote_file</p><p>第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；<br>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名；</p><p><strong>例子：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">scp <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3 root@www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/musicscp <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3 root@www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/music/001<span class="token punctuation">.</span>mp3scp <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3 www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/musicscp <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3 www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/music/001<span class="token punctuation">.</span>mp3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2）本地复制文件夹到远程：</strong><br>①scp -r local_folder remote_username@remote_ip:remote_folder<br>②scp -r local_folder remote_ip:remote_folder</p><p>第1个指定了用户名，命令执行后需要再输入密码；<br>第2个没有指定用户名，命令执行后需要输入用户名和密码；</p><p> <strong>例子：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">scp <span class="token operator">-</span>r <span class="token operator">/</span>home/space/music/ root@www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/scp <span class="token operator">-</span>r <span class="token operator">/</span>home/space/music/ www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>3）远程复制到本地</strong><br>从 远程 复制到 本地，只要将 从 本地 复制到 远程 的命令 的 后2个参数 调换顺序 即可；<br><strong>例如：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">scp root@www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/music <span class="token operator">/</span>home/space/music/1<span class="token punctuation">.</span>mp3scp <span class="token operator">-</span>r www<span class="token punctuation">.</span>cumt<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn:<span class="token operator">/</span>home/root/others/ <span class="token operator">/</span>home/space/music/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>feign远程调用请求头设置参数</title>
      <link href="/2024/02/20/feign-yuan-cheng-diao-yong-qing-qiu-tou-she-zhi-can-shu/"/>
      <url>/2024/02/20/feign-yuan-cheng-diao-yong-qing-qiu-tou-she-zhi-can-shu/</url>
      
        <content type="html"><![CDATA[<p><strong>代码如下</strong><br>通过实现RequestInterceptor 接口，重写apply方法逻辑，设置相应的参数，此时在业务方法中远程调用对应接口时，都会携带这些参数，可在远程调用接口所在服务中进行解析使用。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">feign<span class="token punctuation">.</span></span><span class="token class-name">RequestInterceptor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">feign<span class="token punctuation">.</span></span><span class="token class-name">RequestTemplate</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">RequestContextHolder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestAttributes</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignClientRequestInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">RequestInterceptor</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">FeignClientRequestInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">RequestTemplate</span> requestTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">ServletRequestAttributes</span> attributes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> attributes<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> attributes<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            requestTemplate<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            requestTemplate<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"resourceId"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"resourceId"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> springcloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL生产数据备份</title>
      <link href="/2024/02/18/mysql-sheng-chan-shu-ju-bei-fen/"/>
      <url>/2024/02/18/mysql-sheng-chan-shu-ju-bei-fen/</url>
      
        <content type="html"><![CDATA[<h4 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h4><p>对于系统来说，生产数据是非常重要的，有时候不小心删除了却找不回来就酿成了大祸。因此，定时备份生产数据是非常有必要的，即使不小心删除了全部数据，也可以使用备份数据进行回复。本文提供MySQL的备份脚本，可按自己的需求进行修改。</p><h4 id="1-增量备份脚本binlogbak-sh"><a href="#1-增量备份脚本binlogbak-sh" class="headerlink" title="1.增量备份脚本binlogbak.sh"></a>1.增量备份脚本binlogbak.sh</h4><p>脚本中文件路径BakDir、LogFile需要自行创建，其中BinFile和BinDir需要自己自行找到对应的路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8<span class="token assign-left variable">BakDir</span><span class="token operator">=</span>/u01/data/mysqlbak/data/zlbak<span class="token assign-left variable">BinDir</span><span class="token operator">=</span>/var/lib/mysql<span class="token assign-left variable">LogFile</span><span class="token operator">=</span>/u01/data/mysqlbak/log/binlog.log<span class="token assign-left variable">BinFile</span><span class="token operator">=</span>/var/lib/mysql/logindex.indexmysqladmin <span class="token parameter variable">-h</span> 生产数据库服务器ip地址 -u数据库用户名 -p数据库密码 flush-logs<span class="token comment">#这个是用于产生新的mysql-bin.00000*文件</span><span class="token assign-left variable">Counter</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">wc</span> <span class="token parameter variable">-l</span> $BinFile <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'{print $1}'</span><span class="token variable">`</span></span><span class="token assign-left variable">NextNum</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment">#这个for循环用于比对$Counter,$NextNum这两个值来确定文件是不是存在或最新的。</span><span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> $BinFile<span class="token variable">`</span></span><span class="token keyword">do</span>    <span class="token assign-left variable">base</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $file<span class="token variable">`</span></span>    <span class="token comment">#basename用于截取mysql-bin.00000*文件名，去掉./mysql-bin.000005前面的./</span>    <span class="token assign-left variable">NextNum</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">expr</span> $NextNum + <span class="token number">1</span><span class="token variable">`</span></span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$NextNum</span> <span class="token parameter variable">-eq</span> <span class="token variable">$Counter</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token variable">$base</span> skip<span class="token operator">!</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span>    <span class="token keyword">else</span>        <span class="token assign-left variable">dest</span><span class="token operator">=</span><span class="token variable">$BakDir</span>/<span class="token variable">$base</span>        if<span class="token punctuation">(</span>test <span class="token parameter variable">-e</span> <span class="token variable">$dest</span><span class="token punctuation">)</span>        <span class="token comment">#test -e用于检测目标文件是否存在，存在就写exist!到$LogFile去。</span>        <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> <span class="token variable">$base</span> exist<span class="token operator">!</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span>        <span class="token keyword">else</span>            <span class="token function">cp</span> <span class="token variable">$BinDir</span>/<span class="token variable">$base</span> <span class="token variable">$BakDir</span>            <span class="token builtin class-name">echo</span> <span class="token variable">$base</span> copying <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span>        <span class="token keyword">fi</span>    <span class="token keyword">fi</span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +<span class="token string">"%Y年%m月%d日 %H:%M:%S"</span><span class="token variable">`</span></span> Backup success<span class="token operator">!</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、全量备份脚本databak-sh"><a href="#2、全量备份脚本databak-sh" class="headerlink" title="2、全量备份脚本databak.sh"></a>2、全量备份脚本databak.sh</h4><p>脚本中文件路径BakDir、ZlbakDir、LogFile需要自行创建，此脚本可在多个服务器上定时执行。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8<span class="token assign-left variable">BakDir</span><span class="token operator">=</span>/u01/data/mysqlbak/data/allbak<span class="token assign-left variable">ZlbakDir</span><span class="token operator">=</span>/u01/data/mysqlbak/data/zlbak<span class="token assign-left variable">LogFile</span><span class="token operator">=</span>/u01/data/mysqlbak/log/bak.log<span class="token assign-left variable">Date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%Y-%m-%d-%H-%M-%S<span class="token variable">`</span></span><span class="token assign-left variable">Begin</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +<span class="token string">"%Y年%m月%d日 %H:%M:%S"</span><span class="token variable">`</span></span><span class="token assign-left variable">Database</span><span class="token operator">=</span>要备份的数据库名称<span class="token comment">#BackName=`$Database-$Date`</span><span class="token builtin class-name">cd</span> <span class="token variable">$BakDir</span><span class="token assign-left variable">DumpFile</span><span class="token operator">=</span><span class="token variable">$Database</span>-<span class="token variable">$Date</span>.sql<span class="token assign-left variable">GZDumpFile</span><span class="token operator">=</span><span class="token variable">$Database</span>-<span class="token variable">$Date</span>.tar.gzmysqldump <span class="token parameter variable">-h</span> 生产数据库服务器ip地址 -u数据库用户名 -p数据库密码 <span class="token variable">$Database</span> --flush-logs --delete-master-logs --single-transaction <span class="token operator">&gt;</span> <span class="token variable">$BakDir</span>/<span class="token variable">$DumpFile</span><span class="token comment">#示例：mysqldump -h 172.16.40.92 -uroot -pIDEO-xwk123 $Database  &gt; $BakDir/$DumpFile</span><span class="token function">tar</span> <span class="token parameter variable">-czvf</span> <span class="token variable">$GZDumpFile</span> <span class="token variable">$DumpFile</span><span class="token function">rm</span> <span class="token variable">$DumpFile</span><span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> <span class="token parameter variable">-l</span> *.tar.gz <span class="token operator">|</span><span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$count</span> <span class="token parameter variable">-ge</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    <span class="token assign-left variable">file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> <span class="token parameter variable">-l</span> *.tar.gz <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'{print $9}'</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'NR==1'</span><span class="token variable">)</span></span>    <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">$file</span><span class="token keyword">fi</span><span class="token assign-left variable">Last</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +<span class="token string">"%Y年%m月%d日 %H:%M:%S"</span><span class="token variable">`</span></span><span class="token builtin class-name">echo</span> 开始:<span class="token variable">$Begin</span> 结束:<span class="token variable">$Last</span> <span class="token variable">$GZDumpFile</span> success <span class="token operator">&gt;&gt;</span> <span class="token variable">$LogFile</span><span class="token comment"># 进入到增量备份目录，删除binlog</span><span class="token builtin class-name">cd</span> <span class="token variable">$ZlbakDir</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> *<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3、设置定时任务"><a href="#3、设置定时任务" class="headerlink" title="3、设置定时任务"></a>3、设置定时任务</h4><p>注意：一定要选择用户量少的时间执行脚本，防止影响用户体验。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@server mysqlbak<span class="token punctuation">]</span><span class="token comment"># crontab -e</span><span class="token comment">#每个星期日凌晨2:00执行完全备份脚本</span><span class="token number">0</span> <span class="token number">2</span> * * <span class="token number">0</span> /u01/data/mysqlbak/databak.sh <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token comment">#周一到周六凌晨2:00做增量备份</span><span class="token number">0</span> <span class="token number">2</span> * * <span class="token number">1</span>-6 /u01/data/mysqlbak/binlogbak.sh <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、使计划任务生效"><a href="#4、使计划任务生效" class="headerlink" title="4、使计划任务生效"></a>4、使计划任务生效</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># systemctl restart crond.service</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5、查看计划任务"><a href="#5、查看计划任务" class="headerlink" title="5、查看计划任务"></a>5、查看计划任务</h4><p>出现如下内容，即设置定时任务成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#每个星期日凌晨2:00执行完全备份脚本</span><span class="token number">0</span> <span class="token number">2</span> * * <span class="token number">0</span> /u01/data/mysqlbak/databak.sh <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token comment">#周一到周六凌晨2:00做增量备份</span><span class="token number">0</span> <span class="token number">2</span> * * <span class="token number">1</span>-6 /u01/data/mysqlbak/binlogbak.sh <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-问题"><a href="#6-问题" class="headerlink" title="6.问题"></a>6.问题</h4><p> Shell脚本手动执行可以正常运行，并得到正确结果；使用Crontab定时调度的时候，Shell脚本执行出来的结果数据量为0。</p><p><strong>原因：</strong></p><p>Linux下用crontab执行定时任务不会缺省的从用户profile文件中读取环境变量参数，所以经常导致在手工执行某个脚本时是成功的，但是到crontab中试图让它定期执行时就是会出错。这是因为<strong>用户登陆Linux</strong>操作系统的时候，<strong>”/etc/profile”, “~/.bash_profile”</strong>等配置文件会被<strong>自动执行</strong>，而<strong>crontab定时调度</strong>的时候可能<strong>不会执行</strong>配置文件。</p><h4 id="7-解决"><a href="#7-解决" class="headerlink" title="7.解决"></a>7.解决</h4><p>Shell脚本缺省的**#!/bin/sh** 开头换行后的第一行添加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span class="token builtin class-name">source</span> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>feign调用接口成功后直接进入fallback回调方法排查</title>
      <link href="/2023/12/23/feign-diao-yong-jie-kou-cheng-gong-hou-zhi-jie-jin-ru-fallback-hui-diao-fang-fa-pai-cha/"/>
      <url>/2023/12/23/feign-diao-yong-jie-kou-cheng-gong-hou-zhi-jie-jin-ru-fallback-hui-diao-fang-fa-pai-cha/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>昨天下午有个需求需要写个远程调用接口获取文件的上传日期，但是我在客户端调用远程接口成功后并没有拿到数据，调试发现调用接口成功后直接进入了fallback回到方法，返回了null<br><strong>代码：</strong><br>①feign接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"isrm-attachment"</span><span class="token punctuation">,</span> fallback <span class="token operator">=</span> <span class="token class-name">OssBusinessRemoteServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">OssBusinessRemoteService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/ossBusiness/listByBusinessIds"</span><span class="token punctuation">)</span>    <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>②feign回调实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessRemoteServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OssBusinessRemoteService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>③服务实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFileMapper</span><span class="token punctuation">,</span> <span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">OssBusinessService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">OssBusinessFileMapper</span> ossBusinessFileMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>businessIds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span></span> ossBusinessFiles <span class="token operator">=</span> ossBusinessFileMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span></span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getBusinessId</span><span class="token punctuation">,</span> <span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getCreateDate</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getBusinessId</span><span class="token punctuation">,</span> businessIds<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span><span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getCreateDate</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span><span class="token class-name">OssBusinessFile</span><span class="token operator">::</span><span class="token function">getBusinessId</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ossBusinessFiles<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ossBusinessFiles<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>④实体类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"oss_business_file"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessFile</span> <span class="token punctuation">{</span>    <span class="token comment">/**主键ID */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>    <span class="token comment">/**业务id */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> businessId<span class="token punctuation">;</span>    <span class="token comment">/**文件底表id */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> ossFileId<span class="token punctuation">;</span>    <span class="token comment">/**     * 创建时间     */</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> createDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 创建人     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> creator<span class="token punctuation">;</span>    <span class="token comment">/**     * 修改时间     */</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> updateDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 修改人     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> modifier<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p>就是上述代码，我在客户端引用feign接口后，调用获取文件上传时间成功后走了回调接口返回了null值，我昨天排查到下班都没有知道原因，没有异常信息，还是太菜了；今天灵光一闪，这肯定在调用成功后触发了什么异常，导致走了回调方法，带着这个思路，现在主要做的是让错误日志出来</p><h2 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h2><p>首先先将feign回调实现类改成实现FallbackFactory接口，这样子才可以看到相关异常<br><strong>改动：</strong><br>①feign接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"isrm-attachment"</span><span class="token punctuation">,</span> fallbackFactory<span class="token operator">=</span> <span class="token class-name">OssBusinessRemoteServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">OssBusinessRemoteService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/ossBusiness/listByBusinessIds"</span><span class="token punctuation">)</span>    <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>②feign回调类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessRemoteServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">FallbackFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessRemoteService</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">OssBusinessRemoteService</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 打印错误日志</span>        throwable<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OssBusinessRemoteService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> businessIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新启动服务调式，发现报错信息：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>DecodeException</span><span class="token operator">:</span> <span class="token class-name">Error</span> <span class="token keyword">while</span> extracting response <span class="token keyword">for</span> type <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span> and content type <span class="token punctuation">[</span>application<span class="token operator">/</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">187</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">executeAndDecode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">147</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>sentinel<span class="token punctuation">.</span>feign<span class="token punctuation">.</span></span>SentinelInvocationHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SentinelInvocationHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>$<span class="token class-name">Proxy188</span><span class="token punctuation">.</span><span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>BaseRemoteServiceImpl</span><span class="token punctuation">.</span><span class="token function">ossBusinessFileToMap</span><span class="token punctuation">(</span><span class="token class-name">BaseRemoteServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">157</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>ReportServiceImpl</span><span class="token punctuation">.</span><span class="token function">getDeliveryTrackingReportList</span><span class="token punctuation">(</span><span class="token class-name">ReportServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">225</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>ReportController</span><span class="token punctuation">.</span><span class="token function">getDeliveryTrackingReportList</span><span class="token punctuation">(</span><span class="token class-name">ReportController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">176</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Method</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">498</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">doInvoke</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">190</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeForRequest</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">138</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletInvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span><span class="token class-name">ServletInvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">105</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">879</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">handleInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">793</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span>AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">87</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doDispatch</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1040</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doService</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">943</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1006</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">909</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">660</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">883</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">741</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">231</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span>WsFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">WsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">53</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>base<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>LogFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">LogFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">32</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>RequestContextFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestContextFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>FormContentFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">FormContentFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">93</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>metrics<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>WebMvcMetricsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">WebMvcMetricsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CharacterEncodingFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CharacterEncodingFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">201</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CorsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CorsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardWrapperValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardWrapperValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">202</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">96</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">41002</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>authenticator<span class="token punctuation">.</span></span>AuthenticatorBase</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">AuthenticatorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">541</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardHostValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardHostValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">139</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>valves<span class="token punctuation">.</span></span>ErrorReportValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">ErrorReportValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardEngineValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardEngineValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">74</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span>CoyoteAdapter</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">CoyoteAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">343</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span></span>Http11Processor</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">Http11Processor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">373</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProcessorLight</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProcessorLight</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">65</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProtocol</span>$<span class="token class-name">ConnectionHandler</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProtocol</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">868</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>NioEndpoint</span>$<span class="token class-name">SocketProcessor</span><span class="token punctuation">.</span><span class="token function">doRun</span><span class="token punctuation">(</span><span class="token class-name">NioEndpoint</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1590</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>SocketProcessorBase</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SocketProcessorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">49</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1149</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">624</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span></span>TaskThread</span>$<span class="token class-name">WrappingRunnable</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">TaskThread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">61</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">750</span><span class="token punctuation">)</span><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>RestClientException</span><span class="token operator">:</span> <span class="token class-name">Error</span> <span class="token keyword">while</span> extracting response <span class="token keyword">for</span> type <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span> and content type <span class="token punctuation">[</span>application<span class="token operator">/</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>HttpMessageConverterExtractor</span><span class="token punctuation">.</span><span class="token function">extractData</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageConverterExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>SpringDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SpringDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>ResponseEntityDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntityDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>optionals<span class="token punctuation">.</span></span>OptionalDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">OptionalDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">36</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">183</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">69</span> more<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">readJavaType</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">245</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">227</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>HttpMessageConverterExtractor</span><span class="token punctuation">.</span><span class="token function">extractData</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageConverterExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">73</span> more<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">58</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 16:16:58"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name">InvalidFormatException</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">67</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>DeserializationContext</span><span class="token punctuation">.</span><span class="token function">weirdStringException</span><span class="token punctuation">(</span><span class="token class-name">DeserializationContext</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1679</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>DeserializationContext</span><span class="token punctuation">.</span><span class="token function">handleWeirdStringValue</span><span class="token punctuation">(</span><span class="token class-name">DeserializationContext</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">935</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>StdDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">StdDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">550</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>StdDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">StdDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">491</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateBasedDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">195</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">285</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">268</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MethodProperty</span><span class="token punctuation">.</span><span class="token function">deserializeAndSet</span><span class="token punctuation">(</span><span class="token class-name">MethodProperty</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserializeFromObject</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">369</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">159</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">286</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">245</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">27</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MethodProperty</span><span class="token punctuation">.</span><span class="token function">deserializeAndSet</span><span class="token punctuation">(</span><span class="token class-name">MethodProperty</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserializeFromObject</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">369</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">159</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>ObjectMapper</span><span class="token punctuation">.</span><span class="token function">_readMapAndClose</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">4218</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>ObjectMapper</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3267</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">readJavaType</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">239</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">75</span> more<span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>DecodeException</span><span class="token operator">:</span> <span class="token class-name">Error</span> <span class="token keyword">while</span> extracting response <span class="token keyword">for</span> type <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span> and content type <span class="token punctuation">[</span>application<span class="token operator">/</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">187</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">executeAndDecode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">147</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>sentinel<span class="token punctuation">.</span>feign<span class="token punctuation">.</span></span>SentinelInvocationHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SentinelInvocationHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>$<span class="token class-name">Proxy188</span><span class="token punctuation">.</span><span class="token function">listByBusinessIds</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>BaseRemoteServiceImpl</span><span class="token punctuation">.</span><span class="token function">ossBusinessFileToMap</span><span class="token punctuation">(</span><span class="token class-name">BaseRemoteServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">157</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>ReportServiceImpl</span><span class="token punctuation">.</span><span class="token function">getDeliveryTrackingReportList</span><span class="token punctuation">(</span><span class="token class-name">ReportServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">225</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>report<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>ReportController</span><span class="token punctuation">.</span><span class="token function">getDeliveryTrackingReportList</span><span class="token punctuation">(</span><span class="token class-name">ReportController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">176</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Method</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">498</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">doInvoke</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">190</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeForRequest</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">138</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletInvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span><span class="token class-name">ServletInvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">105</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">879</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">handleInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">793</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span>AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">87</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doDispatch</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1040</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doService</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">943</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1006</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">909</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">660</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">883</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">741</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">231</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span>WsFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">WsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">53</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>base<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>LogFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">LogFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">32</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>RequestContextFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestContextFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>FormContentFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">FormContentFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">93</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>metrics<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>WebMvcMetricsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">WebMvcMetricsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CharacterEncodingFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CharacterEncodingFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">201</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CorsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CorsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">193</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">166</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardWrapperValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardWrapperValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">202</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">96</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">41002</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>authenticator<span class="token punctuation">.</span></span>AuthenticatorBase</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">AuthenticatorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">541</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardHostValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardHostValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">139</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>valves<span class="token punctuation">.</span></span>ErrorReportValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">ErrorReportValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardEngineValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardEngineValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">74</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span>CoyoteAdapter</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">CoyoteAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">343</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span></span>Http11Processor</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">Http11Processor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">373</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProcessorLight</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProcessorLight</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">65</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProtocol</span>$<span class="token class-name">ConnectionHandler</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProtocol</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">868</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>NioEndpoint</span>$<span class="token class-name">SocketProcessor</span><span class="token punctuation">.</span><span class="token function">doRun</span><span class="token punctuation">(</span><span class="token class-name">NioEndpoint</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1590</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>SocketProcessorBase</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SocketProcessorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">49</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1149</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">624</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span></span>TaskThread</span>$<span class="token class-name">WrappingRunnable</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">TaskThread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">61</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">750</span><span class="token punctuation">)</span><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>RestClientException</span><span class="token operator">:</span> <span class="token class-name">Error</span> <span class="token keyword">while</span> extracting response <span class="token keyword">for</span> type <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">]</span> and content type <span class="token punctuation">[</span>application<span class="token operator">/</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>HttpMessageConverterExtractor</span><span class="token punctuation">.</span><span class="token function">extractData</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageConverterExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">119</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>SpringDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SpringDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>ResponseEntityDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">ResponseEntityDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>optionals<span class="token punctuation">.</span></span>OptionalDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">OptionalDecoder</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">36</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">183</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">69</span> more<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span>HttpMessageNotReadableException</span><span class="token operator">:</span> <span class="token constant">JSON</span> parse error<span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">readJavaType</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">245</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">227</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>HttpMessageConverterExtractor</span><span class="token punctuation">.</span><span class="token function">extractData</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageConverterExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">73</span> more<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token operator">:</span> <span class="token class-name">Cannot</span> deserialize value of type `<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>` from <span class="token class-name">String</span> <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> not a valid representation <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">parse</span> <span class="token class-name">Date</span> value '<span class="token number">2023</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">22</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">57</span>'<span class="token operator">:</span> <span class="token class-name">Cannot</span> parse date <span class="token string">"2023-09-22 19:55:57"</span><span class="token operator">:</span> <span class="token keyword">while</span> it seems <span class="token keyword">to</span> <span class="token namespace">fit</span> format 'yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">'T'</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span>'<span class="token punctuation">,</span> parsing fails <span class="token punctuation">(</span>leniency<span class="token operator">?</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> at <span class="token punctuation">[</span><span class="token class-name">Source</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">PushbackInputStream</span><span class="token punctuation">)</span><span class="token punctuation">;</span> line<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>through reference chain<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>common<span class="token punctuation">.</span>base<span class="token punctuation">.</span>response<span class="token punctuation">.</span></span>ResponseData</span><span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ArrayList</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>itl<span class="token punctuation">.</span>isrm<span class="token punctuation">.</span>attachment<span class="token punctuation">.</span>api<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>OssBusinessFile</span><span class="token punctuation">[</span><span class="token string">"createDate"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>exc<span class="token punctuation">.</span></span>InvalidFormatException</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name">InvalidFormatException</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">67</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>DeserializationContext</span><span class="token punctuation">.</span><span class="token function">weirdStringException</span><span class="token punctuation">(</span><span class="token class-name">DeserializationContext</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1679</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>DeserializationContext</span><span class="token punctuation">.</span><span class="token function">handleWeirdStringValue</span><span class="token punctuation">(</span><span class="token class-name">DeserializationContext</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">935</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>StdDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">StdDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">550</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>StdDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">StdDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">491</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateBasedDeserializer</span><span class="token punctuation">.</span><span class="token function">_parseDate</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">195</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">285</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>DateDeserializers</span>$<span class="token class-name">DateDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">DateDeserializers</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">268</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MethodProperty</span><span class="token punctuation">.</span><span class="token function">deserializeAndSet</span><span class="token punctuation">(</span><span class="token class-name">MethodProperty</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserializeFromObject</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">369</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">159</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">286</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">245</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">27</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MethodProperty</span><span class="token punctuation">.</span><span class="token function">deserializeAndSet</span><span class="token punctuation">(</span><span class="token class-name">MethodProperty</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserializeFromObject</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">369</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>deser<span class="token punctuation">.</span></span>BeanDeserializer</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">BeanDeserializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">159</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>ObjectMapper</span><span class="token punctuation">.</span><span class="token function">_readMapAndClose</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">4218</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span>ObjectMapper</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3267</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span><span class="token function">readJavaType</span><span class="token punctuation">(</span><span class="token class-name">AbstractJackson2HttpMessageConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">239</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">75</span> more<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解决方法：</strong></p><p>日志说的很明白，就是日期格式的数据在接收的时候转换出错了，所以我在服务端将日期转成字符串再传输就好了</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"oss_business_file"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssBusinessFile</span> <span class="token punctuation">{</span>    <span class="token comment">/**主键ID */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>    <span class="token comment">/**业务id */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> businessId<span class="token punctuation">;</span>    <span class="token comment">/**文件底表id */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> ossFileId<span class="token punctuation">;</span>    <span class="token comment">/**     * 创建时间     */</span>    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">,</span> timezone <span class="token operator">=</span> <span class="token string">"GMT+8"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> createDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 创建人     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> creator<span class="token punctuation">;</span>    <span class="token comment">/**     * 修改时间     */</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> updateDate<span class="token punctuation">;</span>    <span class="token comment">/**     * 修改人     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> modifier<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> springcloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug排查 </tag>
            
            <tag> springcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装RocketMQ</title>
      <link href="/2023/11/12/linux-an-zhuang-rocketmq/"/>
      <url>/2023/11/12/linux-an-zhuang-rocketmq/</url>
      
        <content type="html"><![CDATA[<h2 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h2><h3 id="1-下载rocketmq"><a href="#1-下载rocketmq" class="headerlink" title="1.下载rocketmq"></a>1.下载rocketmq</h3><p><strong>链接：<a href="https://rocketmq.apache.org/download">https://rocketmq.apache.org/download</a></strong></p><p><img src="https://pic.imgdb.cn/item/65561931c458853aef3bb0d1.png"></p><h3 id="2-下载dashboard控制台"><a href="#2-下载dashboard控制台" class="headerlink" title="2.下载dashboard控制台"></a>2.下载dashboard控制台</h3><p><img src="https://pic.imgdb.cn/item/65561931c458853aef3bb225.png"></p><h2 id="二、打包dashboard控制台"><a href="#二、打包dashboard控制台" class="headerlink" title="二、打包dashboard控制台"></a>二、打包dashboard控制台</h2><h3 id="1-解压控制台压缩包"><a href="#1-解压控制台压缩包" class="headerlink" title="1.解压控制台压缩包"></a>1.解压控制台压缩包</h3><p><img src="https://pic.imgdb.cn/item/65561931c458853aef3bb2e7.png"></p><h3 id="2-IDEA打开解压后的文件夹"><a href="#2-IDEA打开解压后的文件夹" class="headerlink" title="2.IDEA打开解压后的文件夹"></a>2.IDEA打开解压后的文件夹</h3><p>也可以直接在根目录执行<strong>mvn clean package -Dmaven.test.skip=true</strong>来打包，不需要idea打包</p><h4 id="1）修改配置文件"><a href="#1）修改配置文件" class="headerlink" title="1）修改配置文件"></a>1）修改配置文件</h4><p>端口填你想要的（不冲突），nameserver地址为你要部署nameserver服务器的地址</p><p><img src="https://pic.imgdb.cn/item/65561930c458853aef3bae14.png"></p><h4 id="2）点击reload加载项目依赖，然后点击package打包"><a href="#2）点击reload加载项目依赖，然后点击package打包" class="headerlink" title="2）点击reload加载项目依赖，然后点击package打包"></a>2）点击reload加载项目依赖，然后点击package打包</h4><p>最终会生成一个jar包</p><p><img src="https://pic.imgdb.cn/item/65561931c458853aef3bafa2.png"></p><h2 id="三、安装"><a href="#三、安装" class="headerlink" title="三、安装"></a>三、安装</h2><h3 id="1-创建文件夹"><a href="#1-创建文件夹" class="headerlink" title="1.创建文件夹"></a>1.创建文件夹</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/src/rocketmq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-上传文件到Linux并解压"><a href="#2-上传文件到Linux并解压" class="headerlink" title="2.上传文件到Linux并解压"></a>2.上传文件到Linux并解压</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq<span class="token comment"># 解压</span><span class="token function">unzip</span> rocketmq-all-4.9.5-bin-release.zip<span class="token comment"># 重命名</span><span class="token function">mv</span> rocketmq-all-4.9.5-bin-release rocketmq-4.9.5<span class="token comment"># 创建文件夹存放日志</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/src/rocketmq/rocketmq-4.9.5/logs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556193bc458853aef3bde0b.png"></p><h3 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3.配置环境变量"></a>3.配置环境变量</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/profile在文件末尾添加<span class="token punctuation">(</span>服务器ip<span class="token punctuation">)</span>，然后保存退出<span class="token builtin class-name">export</span> <span class="token assign-left variable">NAMESRV_ADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.157.30:9876<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556193bc458853aef3bded0.png"></p><h3 id="4-修改配置文件"><a href="#4-修改配置文件" class="headerlink" title="4.修改配置文件"></a>4.修改配置文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">free</span> -m查看当前内存使用情况<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556193bc458853aef3be0bf.png"></p><p>由于我电脑只有8g内存，分配了2g给虚拟机，现在可用内存为1g，所以需要将broker和nameserver的堆内存调小，可根据自己服务器可用内存调节大小</p><h4 id="1）修改nameserver堆内存"><a href="#1）修改nameserver堆内存" class="headerlink" title="1）修改nameserver堆内存"></a>1）修改nameserver堆内存</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq/rocketmq-4.9.5/bin/<span class="token function">vim</span> runserver.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556194ec458853aef3c3b71.png"></p><h4 id="2）修改brocker堆内存"><a href="#2）修改brocker堆内存" class="headerlink" title="2）修改brocker堆内存"></a>2）修改brocker堆内存</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq/rocketmq-4.9.5/bin/<span class="token function">vim</span> runbroker.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556194fc458853aef3c4020.png"></p><h4 id="3）修改broker配置文件"><a href="#3）修改broker配置文件" class="headerlink" title="3）修改broker配置文件"></a>3）修改broker配置文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq/rocketmq-4.9.5/conf/<span class="token function">vim</span> broker.conf<span class="token comment"># 添加以下配置后保存</span><span class="token assign-left variable">namesrvAddr</span><span class="token operator">=</span>nameServer服务器IP:9876<span class="token assign-left variable">autoCreateTopicEnable</span><span class="token operator">=</span>true<span class="token assign-left variable">brokerIP1</span><span class="token operator">=</span>broker服务器公网IP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/6556194fc458853aef3c3e0e.png"></p><p><strong>添加参数解释</strong><br><strong>namesrvAddr：</strong>nameSrv地址 可以写localhost因为nameSrv和broker在一个服务器<br><strong>autoCreateTopicEnable：</strong>自动创建主题，不然需要手动创建出来<br><strong>brokerIP1：</strong>broker也需要一个公网ip，如果不指定，那么是服务器的内网地址，我们再本地无法连接使用</p><h3 id="5-启动nameserver和broker"><a href="#5-启动nameserver和broker" class="headerlink" title="5.启动nameserver和broker"></a>5.启动nameserver和broker</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq/rocketmq-4.9.5/<span class="token comment"># 后台启动nameserver</span><span class="token function">nohup</span> <span class="token function">sh</span> bin/mqnamesrv <span class="token operator">&gt;</span> ./logs/namesrv.log <span class="token operator">&amp;</span><span class="token comment"># 后台启动broker 这里的-c是指定使用的配置文件</span><span class="token function">nohup</span> <span class="token function">sh</span> bin/mqbroker <span class="token parameter variable">-c</span> conf/broker.conf <span class="token operator">&gt;</span> ./logs/broker.log <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看启动情况</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jps <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://pic.imgdb.cn/item/65561954c458853aef3c59dc.png"></p><h3 id="6-启动dashboard控制台"><a href="#6-启动dashboard控制台" class="headerlink" title="6.启动dashboard控制台"></a>6.启动dashboard控制台</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/src/rocketmq<span class="token comment"># 后台启动dashboard</span><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> ./rocketmq-dashboard-1.0.0.jar <span class="token assign-left variable">rocketmq.config.namesrvAddr</span><span class="token operator">=</span><span class="token number">127.0</span>.0.1:9876 <span class="token operator">&gt;</span> ./rocketmq-4.9.5/logs/dashboard.log <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>查看启动情况和内存使用情况</strong></p><p><img src="https://pic.imgdb.cn/item/65561954c458853aef3c5a89.png"></p><h3 id="7-测试"><a href="#7-测试" class="headerlink" title="7.测试"></a>7.测试</h3><p>浏览器访问<a href="http://192.168.157.30:8001，出现如下界面即成功">http://192.168.157.30:8001，出现如下界面即成功</a></p><p><img src="https://pic.imgdb.cn/item/65561954c458853aef3c5bb1.png"></p><p>要是访问不了，请检查防火墙是否开启，如果开启了要开放端口或者直接关闭防火墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看防火墙状态</span>firewall-cmd <span class="token parameter variable">--state</span><span class="token comment"># 关闭防火墙</span>systemctl stop firewalld<span class="token comment"># 开放端口</span>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">8001</span>/tcp <span class="token parameter variable">--permanent</span><span class="token comment"># 重启防火墙</span>firewall-cmd <span class="token parameter variable">--reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
